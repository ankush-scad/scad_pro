

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Tue Mar 17 17:38:45 2020

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    58                           	psect	text46,global,reloc=2,class=CODE,delta=1
    59                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    60                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    61                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    62  0000                     
    63                           ; Version 1.44
    64                           ; Generated 14/09/2017 GMT
    65                           ; 
    66                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    67                           ; All rights reserved.
    68                           ; 
    69                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    70                           ; 
    71                           ; Redistribution and use in source and binary forms, with or without modification, are
    72                           ; permitted provided that the following conditions are met:
    73                           ; 
    74                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    75                           ;        conditions and the following disclaimer.
    76                           ; 
    77                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    78                           ;        of conditions and the following disclaimer in the documentation and/or other
    79                           ;        materials provided with the distribution.
    80                           ; 
    81                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    82                           ;        software without specific prior written permission.
    83                           ; 
    84                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    85                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    86                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    87                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    88                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    89                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    90                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    91                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    92                           ; 
    93                           ; 
    94                           ; Code-generator required, PIC18F46K22 Definitions
    95                           ; 
    96                           ; SFR Addresses
    97  0000                     
    98                           	psect	smallconst
    99  001000                     __psmallconst:
   100                           	opt stack 0
   101  001000  00                 	db	0
   102  001001                     _bcd_ascii_tbl:
   103                           	opt stack 0
   104  001001  30                 	db	48
   105  001002  31                 	db	49
   106  001003  32                 	db	50
   107  001004  33                 	db	51
   108  001005  34                 	db	52
   109  001006  35                 	db	53
   110  001007  36                 	db	54
   111  001008  37                 	db	55
   112  001009  38                 	db	56
   113  00100A  39                 	db	57
   114  00100B  41                 	db	65
   115  00100C  42                 	db	66
   116  00100D  43                 	db	67
   117  00100E  44                 	db	68
   118  00100F  45                 	db	69
   119  001010  46                 	db	70
   120  001011                     __end_of_bcd_ascii_tbl:
   121                           	opt stack 0
   122  001011                     _green_led:
   123                           	opt stack 0
   124  001011  10                 	db	16
   125  001012  20                 	db	32
   126  001013  40                 	db	64
   127  001014  80                 	db	128
   128  001015  10                 	db	16
   129  001016  20                 	db	32
   130  001017  40                 	db	64
   131  001018  80                 	db	128
   132  001019                     __end_of_green_led:
   133                           	opt stack 0
   134  001019                     _red_led:
   135                           	opt stack 0
   136  001019  01                 	db	1
   137  00101A  02                 	db	2
   138  00101B  04                 	db	4
   139  00101C  08                 	db	8
   140  00101D  01                 	db	1
   141  00101E  02                 	db	2
   142  00101F  04                 	db	4
   143  001020  08                 	db	8
   144  001021                     __end_of_red_led:
   145                           	opt stack 0
   146  001021                     _rep_rly_tbl:
   147                           	opt stack 0
   148  001021  04                 	db	4
   149  001022  02                 	db	2
   150  001023  01                 	db	1
   151  001024  08                 	db	8
   152  001025  10                 	db	16
   153  001026  20                 	db	32
   154  001027  80                 	db	128
   155  001028  40                 	db	64
   156  001029                     __end_of_rep_rly_tbl:
   157                           	opt stack 0
   158  001029                     _onebit_high_tbl:
   159                           	opt stack 0
   160  001029  01                 	db	1
   161  00102A  02                 	db	2
   162  00102B  04                 	db	4
   163  00102C  08                 	db	8
   164  00102D  10                 	db	16
   165  00102E  20                 	db	32
   166  00102F  40                 	db	64
   167  001030  80                 	db	128
   168  001031                     __end_of_onebit_high_tbl:
   169                           	opt stack 0
   170  001031                     _onebit_high_tbl2:
   171                           	opt stack 0
   172  001031  80                 	db	128
   173  001032  40                 	db	64
   174  001033  20                 	db	32
   175  001034  10                 	db	16
   176  001035  08                 	db	8
   177  001036  04                 	db	4
   178  001037  02                 	db	2
   179  001038  01                 	db	1
   180  001039                     __end_of_onebit_high_tbl2:
   181                           	opt stack 0
   182  001039                     _subval_tbl:
   183                           	opt stack 0
   184  001039  03E8               	dw	1000
   185  00103B  0064               	dw	100
   186  00103D  000A               	dw	10
   187  00103F  0001               	dw	1
   188  001041                     __end_of_subval_tbl:
   189                           	opt stack 0
   190  001041                     _rtc_addr:
   191                           	opt stack 0
   192  001041  04                 	db	4
   193  001042  05                 	db	5
   194  001043  06                 	db	6
   195  001044  02                 	db	2
   196  001045  01                 	db	1
   197  001046  00                 	db	0
   198  001047                     __end_of_rtc_addr:
   199                           	opt stack 0
   200  001047                     _subval_chartbl:
   201                           	opt stack 0
   202  001047  0064               	dw	100
   203  001049  000A               	dw	10
   204  00104B  0001               	dw	1
   205  00104D                     __end_of_subval_chartbl:
   206                           	opt stack 0
   207  00104D                     _group_tbl:
   208                           	opt stack 0
   209  00104D  04                 	db	4
   210  00104E  06                 	db	6
   211  00104F  08                 	db	8
   212  001050                     __end_of_group_tbl:
   213                           	opt stack 0
   214  001050                     _no_nc_tbl:
   215                           	opt stack 0
   216  001050  03                 	db	3
   217  001051  05                 	db	5
   218  001052  07                 	db	7
   219  001053                     __end_of_no_nc_tbl:
   220                           	opt stack 0
   221  001053                     _red_led_tbl:
   222                           	opt stack 0
   223  001053  02                 	db	2
   224  001054  00                 	db	0
   225  001055                     __end_of_red_led_tbl:
   226                           	opt stack 0
   227  0000                     _CCP3CON	set	3933
   228  0000                     _ANSELE	set	3900
   229  0000                     _ANSELD	set	3899
   230  0000                     _ANSELC	set	3898
   231  0000                     _ANSELB	set	3897
   232  0000                     _ANSELA	set	3896
   233  0000                     _TRISCbits	set	3988
   234  0000                     _PORTCbits	set	3970
   235  0000                     _TXREG2	set	3955
   236  0000                     _LATDbits	set	3980
   237  0000                     _PORTEbits	set	3972
   238  0000                     _PORTAbits	set	3968
   239  0000                     _LATAbits	set	3977
   240  0000                     _LATCbits	set	3979
   241  0000                     _LATEbits	set	3981
   242  0000                     _RC2STA	set	3953
   243  0000                     _RC1STA	set	4011
   244  0000                     _TX2STA	set	3954
   245  0000                     _TX1STA	set	4012
   246  0000                     _SPBRGH2	set	3958
   247  0000                     _SPBRG2	set	3957
   248  0000                     _SPBRGH1	set	4016
   249  0000                     _SPBRG1	set	4015
   250  0000                     _PORTDbits	set	3971
   251  0000                     _T1CON	set	4045
   252  0000                     _OSCCONbits	set	4051
   253  0000                     _CCP2CON	set	3942
   254  0000                     _CCP1CON	set	4029
   255  0000                     _ADCON1	set	4033
   256  0000                     _ADCON0	set	4034
   257  0000                     _PORTE	set	3972
   258  0000                     _PORTD	set	3971
   259  0000                     _PORTB	set	3969
   260  0000                     _PORTA	set	3968
   261  0000                     _TRISE	set	3990
   262  0000                     _TRISD	set	3989
   263  0000                     _PORTC	set	3970
   264  0000                     _TRISC	set	3988
   265  0000                     _TRISB	set	3987
   266  0000                     _TRISA	set	3986
   267  0000                     _RCREG2	set	3956
   268  0000                     _TMR1L	set	4046
   269  0000                     _TMR1H	set	4047
   270  0000                     _LATBbits	set	3978
   271  0000                     _TX9D2	set	31632
   272  0000                     _TX2IF	set	32036
   273  0000                     _TRISE1	set	31921
   274  0000                     _RC1IF	set	31989
   275  0000                     _RC2IE	set	32029
   276  0000                     _RC1IE	set	31981
   277  0000                     _TXEN2	set	31637
   278  0000                     _TXEN1	set	32101
   279  0000                     _RX92	set	31630
   280  0000                     _TX92	set	31638
   281  0000                     _BRGH2	set	31634
   282  0000                     _BRGH1	set	32098
   283  0000                     _BRG162	set	31619
   284  0000                     _BRG161	set	32195
   285  0000                     _SYNC2	set	31636
   286  0000                     _SYNC1	set	32100
   287  0000                     _TRISD6	set	31918
   288  0000                     _TRISD7	set	31919
   289  0000                     _TRISC6	set	31910
   290  0000                     _TRISC7	set	31911
   291  0000                     _PEIE	set	32662
   292  0000                     _TMR1IE	set	31976
   293  0000                     _RC2IF	set	32037
   294  0000                     _TMR1IF	set	31984
   295  0000                     _GIE	set	32663
   296                           
   297                           ; #config settings
   298  001055  00                 	db	0	; dummy byte at the end
   299  0000                     
   300                           	psect	cinit
   301  0028E6                     __pcinit:
   302                           	opt stack 0
   303  0028E6                     start_initialization:
   304                           	opt stack 0
   305  0028E6                     __initialization:
   306                           	opt stack 0
   307                           
   308                           ; Clear objects allocated to BANK1 (208 bytes)
   309  0028E6  EE01  F000         	lfsr	0,__pbssBANK1
   310  0028EA  0ED0               	movlw	208
   311  0028EC                     clear_0:
   312  0028EC  6AEE               	clrf	postinc0,c
   313  0028EE  06E8               	decf	wreg,f,c
   314  0028F0  E1FD               	bnz	clear_0
   315                           
   316                           ; Clear objects allocated to BANK0 (100 bytes)
   317  0028F2  EE00  F060         	lfsr	0,__pbssBANK0
   318  0028F6  0E64               	movlw	100
   319  0028F8                     clear_1:
   320  0028F8  6AEE               	clrf	postinc0,c
   321  0028FA  06E8               	decf	wreg,f,c
   322  0028FC  E1FD               	bnz	clear_1
   323                           
   324                           ; Clear objects allocated to COMRAM (22 bytes)
   325  0028FE  EE00  F036         	lfsr	0,__pbssCOMRAM
   326  002902  0E16               	movlw	22
   327  002904                     clear_2:
   328  002904  6AEE               	clrf	postinc0,c
   329  002906  06E8               	decf	wreg,f,c
   330  002908  E1FD               	bnz	clear_2
   331  00290A                     end_of_initialization:
   332                           	opt stack 0
   333  00290A                     __end_of__initialization:
   334                           	opt stack 0
   335  00290A  904C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   336  00290C  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   337  00290E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   338  002910  6EF8               	movwf	tblptru,c
   339  002912  0100               	movlb	0
   340  002914  EF5F  F011         	goto	_main	;jump to C main() function
   341                           tblptru	equ	0xFF8
   342                           postinc0	equ	0xFEE
   343                           wreg	equ	0xFE8
   344                           
   345                           	psect	bssCOMRAM
   346  000036                     __pbssCOMRAM:
   347                           	opt stack 0
   348  000036                     _gen_var:
   349                           	opt stack 0
   350  000036                     	ds	17
   351  000047                     poll_rtc@polltmr:
   352                           	opt stack 0
   353  000047                     	ds	2
   354  000049                     _uart_data:
   355                           	opt stack 0
   356  000049                     	ds	1
   357  00004A                     _sure_input_cntr2:
   358                           	opt stack 0
   359  00004A                     	ds	1
   360  00004B                     _sure_input_cntr1:
   361                           	opt stack 0
   362  00004B                     	ds	1
   363                           tblptru	equ	0xFF8
   364                           postinc0	equ	0xFEE
   365                           wreg	equ	0xFE8
   366                           
   367                           	psect	bssBANK0
   368  000060                     __pbssBANK0:
   369                           	opt stack 0
   370  000060                     _logic_var:
   371                           	opt stack 0
   372  000060                     	ds	83
   373  0000B3                     _bcd_array:
   374                           	opt stack 0
   375  0000B3                     	ds	16
   376  0000C3                     _chip_address:
   377                           	opt stack 0
   378  0000C3                     	ds	1
   379                           tblptru	equ	0xFF8
   380                           postinc0	equ	0xFEE
   381                           wreg	equ	0xFE8
   382                           
   383                           	psect	bssBANK1
   384  000100                     __pbssBANK1:
   385                           	opt stack 0
   386  000100                     _buffer:
   387                           	opt stack 0
   388  000100                     	ds	100
   389  000164                     _mbus_var:
   390                           	opt stack 0
   391  000164                     	ds	108
   392                           tblptru	equ	0xFF8
   393                           postinc0	equ	0xFEE
   394                           wreg	equ	0xFE8
   395                           
   396                           	psect	cstackBANK0
   397  0000C4                     __pcstackBANK0:
   398                           	opt stack 0
   399  0000C4                     log_wr@log_buffer:
   400                           	opt stack 0
   401                           
   402                           ; 20 bytes @ 0x0
   403  0000C4                     	ds	20
   404  0000D8                     log_wr@chip_start:
   405                           	opt stack 0
   406                           
   407                           ; 4 bytes @ 0x14
   408  0000D8                     	ds	4
   409  0000DC                     log_wr@i:
   410                           	opt stack 0
   411                           
   412                           ; 1 bytes @ 0x18
   413  0000DC                     	ds	1
   414  0000DD                     log_wr@templ:
   415                           	opt stack 0
   416                           
   417                           ; 4 bytes @ 0x19
   418  0000DD                     	ds	4
   419  0000E1                     ??_write_single_holding:
   420                           
   421                           ; 1 bytes @ 0x1D
   422  0000E1                     	ds	2
   423  0000E3                     ??_decode_mbus_frame:
   424                           
   425                           ; 1 bytes @ 0x1F
   426  0000E3                     	ds	4
   427  0000E7                     decode_mbus_frame@temp:
   428                           	opt stack 0
   429                           
   430                           ; 2 bytes @ 0x23
   431  0000E7                     	ds	2
   432  0000E9                     decode_mbus_frame@rec_no:
   433                           	opt stack 0
   434                           
   435                           ; 2 bytes @ 0x25
   436  0000E9                     	ds	2
   437  0000EB                     decode_mbus_frame@length:
   438                           	opt stack 0
   439                           
   440                           ; 2 bytes @ 0x27
   441  0000EB                     	ds	2
   442  0000ED                     decode_mbus_frame@address:
   443                           	opt stack 0
   444                           
   445                           ; 2 bytes @ 0x29
   446  0000ED                     	ds	2
   447  0000EF                     decode_mbus_frame@un1:
   448                           	opt stack 0
   449                           
   450                           ; 2 bytes @ 0x2B
   451  0000EF                     	ds	2
   452  0000F1                     delay_ms@ms:
   453                           	opt stack 0
   454                           
   455                           ; 2 bytes @ 0x2D
   456  0000F1                     	ds	2
   457                           tblptru	equ	0xFF8
   458                           postinc0	equ	0xFEE
   459                           wreg	equ	0xFE8
   460                           
   461                           	psect	cstackCOMRAM
   462  000001                     __pcstackCOMRAM:
   463                           	opt stack 0
   464  000001                     ??_health_flash:
   465  000001                     
   466                           ; 1 bytes @ 0x0
   467  000001                     	ds	1
   468  000002                     ??_isr:
   469                           
   470                           ; 1 bytes @ 0x1
   471  000002                     	ds	18
   472  000014                     ??_update_595:
   473  000014                     ??_read_165_dip:
   474  000014                     ??_dicing_slicing:
   475  000014                     ??_noise_rejection_off:
   476  000014                     ??_update_repeat_relay:
   477  000014                     ??_i2c_shift_in:
   478  000014                     ?_CRC_16:
   479                           	opt stack 0
   480  000014                     read_165_fault@i:
   481                           	opt stack 0
   482  000014                     calculate_parity@val:
   483                           	opt stack 0
   484  000014                     test_key@i:
   485                           	opt stack 0
   486  000014                     silence_key@i:
   487                           	opt stack 0
   488  000014                     accept_key@i:
   489                           	opt stack 0
   490  000014                     reset_key@i:
   491                           	opt stack 0
   492  000014                     i2c_shift_out@cnts:
   493                           	opt stack 0
   494  000014                     pbcd2hex@tmp:
   495                           	opt stack 0
   496  000014                     hex2pbcd@hex_num:
   497                           	opt stack 0
   498  000014                     FillNSend_Echo_Frame@i:
   499                           	opt stack 0
   500  000014                     CRC_16@ptr:
   501                           	opt stack 0
   502                           
   503                           ; 2 bytes @ 0x13
   504  000014                     	ds	1
   505  000015                     ??_fault_detection:
   506  000015                     read_165_fault@Data:
   507                           	opt stack 0
   508  000015                     calculate_parity@counter:
   509                           	opt stack 0
   510  000015                     noise_rejection_off@temp2:
   511                           	opt stack 0
   512  000015                     i2c_shift_out@dat:
   513                           	opt stack 0
   514  000015                     i2c_shift_in@count:
   515                           	opt stack 0
   516  000015                     pbcd2hex@tmp2:
   517                           	opt stack 0
   518  000015                     hex2pbcd@high:
   519                           	opt stack 0
   520                           
   521                           ; 1 bytes @ 0x14
   522  000015                     	ds	1
   523  000016                     read_165_fault@j:
   524                           	opt stack 0
   525  000016                     read_165_dip@Data:
   526                           	opt stack 0
   527  000016                     dicing_slicing@m:
   528                           	opt stack 0
   529  000016                     calculate_parity@i:
   530                           	opt stack 0
   531  000016                     noise_rejection_off@hist_data:
   532                           	opt stack 0
   533  000016                     i2c_shift_out@i:
   534                           	opt stack 0
   535  000016                     i2c_shift_in@in_byte:
   536                           	opt stack 0
   537  000016                     pbcd2hex@pbcdbyte:
   538                           	opt stack 0
   539  000016                     datalog_event_check@i:
   540                           	opt stack 0
   541  000016                     CRC_16@cnts:
   542                           	opt stack 0
   543  000016                     update_repeat_relay@relay_buffer_595:
   544                           	opt stack 0
   545  000016                     update_595@led_buffer_595:
   546                           	opt stack 0
   547                           
   548                           ; 6 bytes @ 0x15
   549  000016                     	ds	1
   550  000017                     ??_send_to_master:
   551  000017                     ??_CRC_16:
   552  000017                     read_165_dip@j:
   553                           	opt stack 0
   554  000017                     dicing_slicing@n:
   555                           	opt stack 0
   556  000017                     noise_rejection_off@temp1:
   557                           	opt stack 0
   558  000017                     rtc_byte_wr@dta:
   559                           	opt stack 0
   560  000017                     rtc_byte_rd@adr:
   561                           	opt stack 0
   562  000017                     i2c_byte_rd@adr:
   563                           	opt stack 0
   564  000017                     i2c_byte_wr@adr:
   565                           	opt stack 0
   566                           
   567                           ; 4 bytes @ 0x16
   568  000017                     	ds	1
   569  000018                     read_165_dip@i:
   570                           	opt stack 0
   571  000018                     dicing_slicing@i:
   572                           	opt stack 0
   573  000018                     noise_rejection_off@new_data:
   574                           	opt stack 0
   575  000018                     fault_detection@temp:
   576                           	opt stack 0
   577  000018                     rtc_byte_wr@adr:
   578                           	opt stack 0
   579  000018                     rtc_byte_rd@temp:
   580                           	opt stack 0
   581  000018                     send_to_master@i:
   582                           	opt stack 0
   583                           
   584                           ; 2 bytes @ 0x17
   585  000018                     	ds	1
   586  000019                     update_repeat_relay@i:
   587                           	opt stack 0
   588  000019                     dicing_slicing@j:
   589                           	opt stack 0
   590  000019                     noise_rejection_off@i:
   591                           	opt stack 0
   592  000019                     fault_detection@dipsw:
   593                           	opt stack 0
   594  000019                     init_rtc@temp2:
   595                           	opt stack 0
   596  000019                     poll_rtc@i:
   597                           	opt stack 0
   598  000019                     CRC_16@i:
   599                           	opt stack 0
   600                           
   601                           ; 1 bytes @ 0x18
   602  000019                     	ds	1
   603  00001A                     update_repeat_relay@tmp:
   604                           	opt stack 0
   605  00001A                     fault_detection@tmp2:
   606                           	opt stack 0
   607  00001A                     init_rtc@temp:
   608                           	opt stack 0
   609  00001A                     CRC_16@crcreg:
   610                           	opt stack 0
   611                           
   612                           ; 2 bytes @ 0x19
   613  00001A                     	ds	1
   614  00001B                     update_repeat_relay@j:
   615                           	opt stack 0
   616  00001B                     fault_detection@input:
   617                           	opt stack 0
   618  00001B                     i2c_byte_rd@addrh:
   619                           	opt stack 0
   620  00001B                     i2c_byte_wr@dta:
   621                           	opt stack 0
   622                           
   623                           ; 1 bytes @ 0x1A
   624  00001B                     	ds	1
   625  00001C                     update_595@tmp:
   626                           	opt stack 0
   627  00001C                     fault_detection@tmp:
   628                           	opt stack 0
   629  00001C                     i2c_byte_rd@addrl:
   630                           	opt stack 0
   631  00001C                     i2c_byte_wr@addrh:
   632                           	opt stack 0
   633  00001C                     function_error@func:
   634                           	opt stack 0
   635  00001C                     address_error@func:
   636                           	opt stack 0
   637  00001C                     send_continuous@length:
   638                           	opt stack 0
   639                           
   640                           ; 2 bytes @ 0x1B
   641  00001C                     	ds	1
   642  00001D                     update_595@i:
   643                           	opt stack 0
   644  00001D                     fault_detection@led_data:
   645                           	opt stack 0
   646  00001D                     i2c_byte_rd@temp:
   647                           	opt stack 0
   648  00001D                     i2c_byte_wr@addrl:
   649                           	opt stack 0
   650                           
   651                           ; 1 bytes @ 0x1C
   652  00001D                     	ds	1
   653  00001E                     update_595@j:
   654                           	opt stack 0
   655  00001E                     fault_detection@red_led_data:
   656                           	opt stack 0
   657  00001E                     i2c_byte_rd@dev_addr:
   658                           	opt stack 0
   659  00001E                     i2c_byte_wr@dev_addr:
   660                           	opt stack 0
   661  00001E                     function_error@temp:
   662                           	opt stack 0
   663  00001E                     address_error@temp:
   664                           	opt stack 0
   665  00001E                     send_continuous@address:
   666                           	opt stack 0
   667                           
   668                           ; 2 bytes @ 0x1D
   669  00001E                     	ds	1
   670  00001F                     fault_detection@green_led_data:
   671                           	opt stack 0
   672  00001F                     i2c_byte_rd@un1:
   673                           	opt stack 0
   674  00001F                     i2c_byte_wr@un1:
   675                           	opt stack 0
   676                           
   677                           ; 2 bytes @ 0x1E
   678  00001F                     	ds	1
   679  000020                     ??_send_continuous:
   680  000020                     fault_detection@l:
   681                           	opt stack 0
   682  000020                     function_error@un1:
   683                           	opt stack 0
   684  000020                     address_error@un1:
   685                           	opt stack 0
   686                           
   687                           ; 2 bytes @ 0x1F
   688  000020                     	ds	1
   689  000021                     fault_detection@i:
   690                           	opt stack 0
   691  000021                     i2c_byte_rd@control_byte:
   692                           	opt stack 0
   693  000021                     i2c_byte_wr@control_byte:
   694                           	opt stack 0
   695                           
   696                           ; 1 bytes @ 0x20
   697  000021                     	ds	1
   698  000022                     fault_detection@k:
   699                           	opt stack 0
   700  000022                     send_log_rd@record:
   701                           	opt stack 0
   702  000022                     send_continuous@tempi:
   703                           	opt stack 0
   704  000022                     i2c_int_wr@adr:
   705                           	opt stack 0
   706                           
   707                           ; 4 bytes @ 0x21
   708  000022                     	ds	1
   709  000023                     fault_detection@j:
   710                           	opt stack 0
   711                           
   712                           ; 1 bytes @ 0x22
   713  000023                     	ds	1
   714  000024                     ??_send_log_rd:
   715  000024                     send_continuous@un1:
   716                           	opt stack 0
   717                           
   718                           ; 2 bytes @ 0x23
   719  000024                     	ds	2
   720  000026                     send_continuous@tempc:
   721                           	opt stack 0
   722  000026                     i2c_int_wr@dta:
   723                           	opt stack 0
   724                           
   725                           ; 2 bytes @ 0x25
   726  000026                     	ds	1
   727  000027                     send_continuous@i:
   728                           	opt stack 0
   729                           
   730                           ; 1 bytes @ 0x26
   731  000027                     	ds	1
   732  000028                     i2c_int_wr@dev_addr:
   733                           	opt stack 0
   734  000028                     send_continuous@j:
   735                           	opt stack 0
   736                           
   737                           ; 1 bytes @ 0x27
   738  000028                     	ds	1
   739  000029                     i2c_int_wr@un1:
   740                           	opt stack 0
   741                           
   742                           ; 2 bytes @ 0x28
   743  000029                     	ds	1
   744  00002A                     send_log_rd@templ:
   745                           	opt stack 0
   746                           
   747                           ; 4 bytes @ 0x29
   748  00002A                     	ds	1
   749  00002B                     ??_log_wr:
   750                           
   751                           ; 1 bytes @ 0x2A
   752  00002B                     	ds	3
   753  00002E                     send_log_rd@tempi:
   754                           	opt stack 0
   755                           
   756                           ; 2 bytes @ 0x2D
   757  00002E                     	ds	2
   758  000030                     send_log_rd@i:
   759                           	opt stack 0
   760                           
   761                           ; 1 bytes @ 0x2F
   762  000030                     	ds	1
   763  000031                     write_single_holding@length:
   764                           	opt stack 0
   765                           
   766                           ; 2 bytes @ 0x30
   767  000031                     	ds	2
   768  000033                     write_single_holding@address:
   769                           	opt stack 0
   770                           
   771                           ; 2 bytes @ 0x32
   772  000033                     	ds	2
   773  000035                     ??_main:
   774                           
   775                           ; 1 bytes @ 0x34
   776  000035                     	ds	1
   777                           tblptru	equ	0xFF8
   778                           postinc0	equ	0xFEE
   779                           wreg	equ	0xFE8
   780                           
   781 ;;
   782 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   783 ;;
   784 ;; *************** function _main *****************
   785 ;; Defined at:
   786 ;;		line 300 in file "main.c"
   787 ;; Parameters:    Size  Location     Type
   788 ;;		None
   789 ;; Auto vars:     Size  Location     Type
   790 ;;		None
   791 ;; Return value:  Size  Location     Type
   792 ;;                  1    wreg      void 
   793 ;; Registers used:
   794 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   795 ;; Tracked objects:
   796 ;;		On entry : 0/0
   797 ;;		On exit  : 0/0
   798 ;;		Unchanged: 0/0
   799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   802 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   803 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   804 ;;Total ram usage:        1 bytes
   805 ;; Hardware stack levels required when called:   11
   806 ;; This function calls:
   807 ;;		_basems_wait
   808 ;;		_datalog_event_check
   809 ;;		_delay_ms
   810 ;;		_fault_detection
   811 ;;		_i2c_byte_rd
   812 ;;		_init
   813 ;;		_init_i2c_gpios
   814 ;;		_init_rtc
   815 ;;		_init_uart
   816 ;;		_log_wr
   817 ;;		_timer_init
   818 ;; This function is called by:
   819 ;;		Startup code after reset
   820 ;; This function uses a non-reentrant model
   821 ;;
   822                           
   823                           	psect	text0
   824  0022BE                     __ptext0:
   825                           	opt stack 0
   826  0022BE                     _main:
   827                           	opt stack 20
   828                           
   829                           ;main.c: 303: init();
   830                           
   831                           ;incstack = 0
   832  0022BE  EC7A  F012         	call	_init	;wreg free
   833                           
   834                           ;main.c: 304: timer_init();
   835  0022C2  ECE5  F014         	call	_timer_init	;wreg free
   836  0022C6  F000               	nop		;# 
   837  0022C8  F000               	nop		;# 
   838  0022CA  F000               	nop		;# 
   839  0022CC  F000               	nop		;# 
   840  0022CE  F000               	nop		;# 
   841                           
   842                           ;main.c: 306: TRISE1=0;
   843  0022D0  9296               	bcf	3990,1,c	;volatile
   844                           
   845                           ;main.c: 323: LATBbits.LATB4 = 1;
   846  0022D2  888A               	bsf	3978,4,c	;volatile
   847                           
   848                           ;main.c: 324: LATBbits.LATB5 = 1;
   849  0022D4  8A8A               	bsf	3978,5,c	;volatile
   850                           
   851                           ;main.c: 326: logic_var.repeat_rly[0].bytes=0xFF;
   852  0022D6  0100               	movlb	0	; () banked
   853  0022D8  69A2               	setf	(_logic_var+66)& (0+255),b
   854                           
   855                           ; BSR set to: 0
   856                           ;main.c: 327: logic_var.repeat_rly[1].bytes=0xFF;
   857  0022DA  69A3               	setf	(_logic_var+67)& (0+255),b
   858                           
   859                           ; BSR set to: 0
   860                           ;main.c: 328: logic_var.repeat_rly[2].bytes=0xFF;
   861  0022DC  69A4               	setf	(_logic_var+68)& (0+255),b
   862                           
   863                           ; BSR set to: 0
   864                           ;main.c: 330: LATEbits.LATE1 = 1;
   865  0022DE  828D               	bsf	3981,1,c	;volatile
   866                           
   867                           ; BSR set to: 0
   868                           ;main.c: 331: delay_ms(100);
   869  0022E0  0E00               	movlw	0
   870  0022E2  6FF2               	movwf	(delay_ms@ms+1)& (0+255),b
   871  0022E4  0E64               	movlw	100
   872  0022E6  6FF1               	movwf	delay_ms@ms& (0+255),b
   873  0022E8  ECD8  F014         	call	_delay_ms	;wreg free
   874                           
   875                           ;main.c: 332: LATEbits.LATE1 = 0;
   876  0022EC  928D               	bcf	3981,1,c	;volatile
   877                           
   878                           ;main.c: 333: init_uart();
   879  0022EE  ECFF  F012         	call	_init_uart	;wreg free
   880                           
   881                           ;main.c: 334: init_i2c_gpios();
   882  0022F2  EC0A  F015         	call	_init_i2c_gpios	;wreg free
   883                           
   884                           ;main.c: 336: mbus_var.slave_id = 1;
   885  0022F6  0E01               	movlw	1
   886  0022F8  0101               	movlb	1	; () banked
   887  0022FA  6FCF               	movwf	(_mbus_var+107)& (0+255),b
   888                           
   889                           ; BSR set to: 1
   890                           ;main.c: 337: gen_var.log_data_cntr = i2c_byte_rd(0,1);
   891  0022FC  0E01               	movlw	1
   892  0022FE  6E17               	movwf	i2c_byte_rd@adr,c
   893  002300  0E00               	movlw	0
   894  002302  6E18               	movwf	i2c_byte_rd@adr+1,c
   895  002304  0E00               	movlw	0
   896  002306  6E19               	movwf	i2c_byte_rd@adr+2,c
   897  002308  0E00               	movlw	0
   898  00230A  6E1A               	movwf	i2c_byte_rd@adr+3,c
   899  00230C  0E00               	movlw	0
   900  00230E  EC1C  F011         	call	_i2c_byte_rd
   901  002312  6E35               	movwf	??_main& (0+255),c
   902  002314  5035               	movf	??_main,w,c
   903  002316  6E41               	movwf	_gen_var+11,c
   904  002318  6A42               	clrf	_gen_var+12,c
   905                           
   906                           ;main.c: 338: init_rtc();
   907  00231A  EC29  F00F         	call	_init_rtc	;wreg free
   908  00231E                     
   909                           ;main.c: 343: {
   910                           ;main.c: 344: basems_wait();
   911  00231E  EC94  F010         	call	_basems_wait	;wreg free
   912                           
   913                           ;main.c: 345: fault_detection();
   914  002322  EC2B  F008         	call	_fault_detection	;wreg free
   915                           
   916                           ;main.c: 347: datalog_event_check();
   917  002326  ECD7  F011         	call	_datalog_event_check	;wreg free
   918                           
   919                           ;main.c: 348: if(gen_var.logevent_flg == 1)
   920  00232A  0443               	decf	_gen_var+13,w,c
   921  00232C  A4D8               	btfss	status,2,c
   922  00232E  D7F7               	goto	l219
   923                           
   924                           ;main.c: 349: log_wr();
   925  002330  EC8B  F00A         	call	_log_wr	;wreg free
   926  002334  D7F4               	goto	l219
   927  002336                     __end_of_main:
   928                           	opt stack 0
   929                           tblptru	equ	0xFF8
   930                           postinc0	equ	0xFEE
   931                           wreg	equ	0xFE8
   932                           status	equ	0xFD8
   933                           
   934 ;; *************** function _timer_init *****************
   935 ;; Defined at:
   936 ;;		line 188 in file "main.c"
   937 ;; Parameters:    Size  Location     Type
   938 ;;		None
   939 ;; Auto vars:     Size  Location     Type
   940 ;;		None
   941 ;; Return value:  Size  Location     Type
   942 ;;                  1    wreg      void 
   943 ;; Registers used:
   944 ;;		wreg, status,2
   945 ;; Tracked objects:
   946 ;;		On entry : 0/0
   947 ;;		On exit  : 0/0
   948 ;;		Unchanged: 0/0
   949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   953 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   954 ;;Total ram usage:        0 bytes
   955 ;; Hardware stack levels used:    1
   956 ;; Hardware stack levels required when called:    2
   957 ;; This function calls:
   958 ;;		Nothing
   959 ;; This function is called by:
   960 ;;		_main
   961 ;; This function uses a non-reentrant model
   962 ;;
   963                           
   964                           	psect	text1
   965  0029CA                     __ptext1:
   966                           	opt stack 0
   967  0029CA                     _timer_init:
   968                           	opt stack 28
   969                           
   970                           ;main.c: 190: TMR1IE = 1;
   971                           
   972                           ;incstack = 0
   973  0029CA  809D               	bsf	3997,0,c	;volatile
   974                           
   975                           ;main.c: 191: PEIE = 1;
   976  0029CC  8CF2               	bsf	intcon,6,c	;volatile
   977                           
   978                           ;main.c: 192: GIE = 1;
   979  0029CE  8EF2               	bsf	intcon,7,c	;volatile
   980                           
   981                           ;main.c: 193: TMR1IF = 0;
   982  0029D0  909E               	bcf	3998,0,c	;volatile
   983                           
   984                           ;main.c: 194: TMR1H = 0xF0;
   985  0029D2  0EF0               	movlw	240
   986  0029D4  6ECF               	movwf	4047,c	;volatile
   987                           
   988                           ;main.c: 195: TMR1L = 0X5F;
   989  0029D6  0E5F               	movlw	95
   990  0029D8  6ECE               	movwf	4046,c	;volatile
   991                           
   992                           ;main.c: 198: T1CON = 0x01;
   993  0029DA  0E01               	movlw	1
   994  0029DC  6ECD               	movwf	4045,c	;volatile
   995  0029DE  0012               	return		;funcret
   996  0029E0                     __end_of_timer_init:
   997                           	opt stack 0
   998                           tblptru	equ	0xFF8
   999                           intcon	equ	0xFF2
  1000                           postinc0	equ	0xFEE
  1001                           wreg	equ	0xFE8
  1002                           status	equ	0xFD8
  1003                           
  1004 ;; *************** function _init_uart *****************
  1005 ;; Defined at:
  1006 ;;		line 201 in file "main.c"
  1007 ;; Parameters:    Size  Location     Type
  1008 ;;		None
  1009 ;; Auto vars:     Size  Location     Type
  1010 ;;		None
  1011 ;; Return value:  Size  Location     Type
  1012 ;;                  1    wreg      void 
  1013 ;; Registers used:
  1014 ;;		wreg, status,2
  1015 ;; Tracked objects:
  1016 ;;		On entry : 0/0
  1017 ;;		On exit  : 0/0
  1018 ;;		Unchanged: 0/0
  1019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1023 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1024 ;;Total ram usage:        0 bytes
  1025 ;; Hardware stack levels used:    1
  1026 ;; Hardware stack levels required when called:    2
  1027 ;; This function calls:
  1028 ;;		Nothing
  1029 ;; This function is called by:
  1030 ;;		_main
  1031 ;; This function uses a non-reentrant model
  1032 ;;
  1033                           
  1034                           	psect	text2
  1035  0025FE                     __ptext2:
  1036                           	opt stack 0
  1037  0025FE                     _init_uart:
  1038                           	opt stack 28
  1039                           
  1040                           ;main.c: 203: TRISC7 = 1;
  1041                           
  1042                           ;incstack = 0
  1043  0025FE  8E94               	bsf	3988,7,c	;volatile
  1044                           
  1045                           ;main.c: 204: TRISC6 = 0;
  1046  002600  9C94               	bcf	3988,6,c	;volatile
  1047                           
  1048                           ;main.c: 205: TRISD7 = 1;
  1049  002602  8E95               	bsf	3989,7,c	;volatile
  1050                           
  1051                           ;main.c: 206: TRISD6 = 0;
  1052  002604  9C95               	bcf	3989,6,c	;volatile
  1053                           
  1054                           ;main.c: 208: PORTDbits.RD4 = 0;
  1055  002606  9883               	bcf	3971,4,c	;volatile
  1056                           
  1057                           ;main.c: 209: SYNC1 = 0;
  1058  002608  98AC               	bcf	4012,4,c	;volatile
  1059                           
  1060                           ;main.c: 210: SYNC2 = 0;
  1061  00260A  9872               	bcf	3954,4,c	;volatile
  1062                           
  1063                           ;main.c: 211: BRG161 = 0;
  1064  00260C  96B8               	bcf	4024,3,c	;volatile
  1065                           
  1066                           ;main.c: 212: BRG162 = 0;
  1067  00260E  9670               	bcf	3952,3,c	;volatile
  1068                           
  1069                           ;main.c: 213: BRGH1 = 1;
  1070  002610  84AC               	bsf	4012,2,c	;volatile
  1071                           
  1072                           ;main.c: 214: BRGH2 = 1;
  1073  002612  8472               	bsf	3954,2,c	;volatile
  1074                           
  1075                           ;main.c: 216: SPBRG1 = 103;
  1076  002614  0E67               	movlw	103
  1077  002616  6EAF               	movwf	4015,c	;volatile
  1078                           
  1079                           ;main.c: 217: SPBRGH1 = 0;
  1080  002618  0E00               	movlw	0
  1081  00261A  6EB0               	movwf	4016,c	;volatile
  1082                           
  1083                           ;main.c: 218: SPBRG2 = 103;
  1084  00261C  0E67               	movlw	103
  1085  00261E  6E75               	movwf	3957,c	;volatile
  1086                           
  1087                           ;main.c: 219: SPBRGH2 = 0;
  1088  002620  0E00               	movlw	0
  1089  002622  6E76               	movwf	3958,c	;volatile
  1090                           
  1091                           ;main.c: 221: TX92 = 0;
  1092  002624  9C72               	bcf	3954,6,c	;volatile
  1093                           
  1094                           ;main.c: 222: RX92 = 0;
  1095  002626  9C71               	bcf	3953,6,c	;volatile
  1096                           
  1097                           ;main.c: 224: TX1STA = 0x24;
  1098  002628  0E24               	movlw	36
  1099  00262A  6EAC               	movwf	4012,c	;volatile
  1100                           
  1101                           ;main.c: 225: TX2STA = 0x24;
  1102  00262C  0E24               	movlw	36
  1103  00262E  6E72               	movwf	3954,c	;volatile
  1104                           
  1105                           ;main.c: 226: TXEN1 = 1;
  1106  002630  8AAC               	bsf	4012,5,c	;volatile
  1107                           
  1108                           ;main.c: 227: TXEN2 = 1;
  1109  002632  8A72               	bsf	3954,5,c	;volatile
  1110                           
  1111                           ;main.c: 228: RC1IE = 1;
  1112  002634  8A9D               	bsf	3997,5,c	;volatile
  1113                           
  1114                           ;main.c: 229: RC2IE = 1 ;
  1115  002636  8AA3               	bsf	4003,5,c	;volatile
  1116                           
  1117                           ;main.c: 230: GIE =1; PEIE =1;
  1118  002638  8EF2               	bsf	intcon,7,c	;volatile
  1119  00263A  8CF2               	bsf	intcon,6,c	;volatile
  1120                           
  1121                           ;main.c: 231: RC1STA = 0x90;
  1122  00263C  0E90               	movlw	144
  1123  00263E  6EAB               	movwf	4011,c	;volatile
  1124                           
  1125                           ;main.c: 232: RC2STA = 0x90;
  1126  002640  0E90               	movlw	144
  1127  002642  6E71               	movwf	3953,c	;volatile
  1128                           
  1129                           ;main.c: 233: RC1IF = 0;
  1130  002644  9A9E               	bcf	3998,5,c	;volatile
  1131                           
  1132                           ;main.c: 234: RC2IF = 0;
  1133  002646  9AA4               	bcf	4004,5,c	;volatile
  1134  002648  0012               	return		;funcret
  1135  00264A                     __end_of_init_uart:
  1136                           	opt stack 0
  1137                           tblptru	equ	0xFF8
  1138                           intcon	equ	0xFF2
  1139                           postinc0	equ	0xFEE
  1140                           wreg	equ	0xFE8
  1141                           status	equ	0xFD8
  1142                           
  1143 ;; *************** function _init_rtc *****************
  1144 ;; Defined at:
  1145 ;;		line 297 in file "i2c_e2p_rtc.c"
  1146 ;; Parameters:    Size  Location     Type
  1147 ;;		None
  1148 ;; Auto vars:     Size  Location     Type
  1149 ;;  temp            1   25[COMRAM] unsigned char 
  1150 ;;  temp2           1   24[COMRAM] unsigned char 
  1151 ;; Return value:  Size  Location     Type
  1152 ;;                  1    wreg      void 
  1153 ;; Registers used:
  1154 ;;		wreg, status,2, status,0, cstack
  1155 ;; Tracked objects:
  1156 ;;		On entry : 0/0
  1157 ;;		On exit  : 0/0
  1158 ;;		Unchanged: 0/0
  1159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1161 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1163 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1164 ;;Total ram usage:        2 bytes
  1165 ;; Hardware stack levels used:    1
  1166 ;; Hardware stack levels required when called:    5
  1167 ;; This function calls:
  1168 ;;		_rtc_byte_rd
  1169 ;;		_rtc_byte_wr
  1170 ;; This function is called by:
  1171 ;;		_main
  1172 ;; This function uses a non-reentrant model
  1173 ;;
  1174                           
  1175                           	psect	text3
  1176  001E52                     __ptext3:
  1177                           	opt stack 0
  1178  001E52                     _init_rtc:
  1179                           	opt stack 25
  1180                           
  1181                           ;i2c_e2p_rtc.c: 299: unsigned char temp,temp2;
  1182                           ;i2c_e2p_rtc.c: 301: temp = rtc_byte_rd(0);
  1183                           
  1184                           ;incstack = 0
  1185  001E52  0E00               	movlw	0
  1186  001E54  ECFF  F013         	call	_rtc_byte_rd
  1187  001E58  6E1A               	movwf	init_rtc@temp,c
  1188                           
  1189                           ;i2c_e2p_rtc.c: 302: temp &= 0x7f;
  1190  001E5A  9E1A               	bcf	init_rtc@temp,7,c
  1191                           
  1192                           ;i2c_e2p_rtc.c: 303: rtc_byte_wr(0,temp);
  1193  001E5C  C01A  F017         	movff	init_rtc@temp,rtc_byte_wr@dta
  1194  001E60  0E00               	movlw	0
  1195  001E62  EC8C  F014         	call	_rtc_byte_wr
  1196                           
  1197                           ;i2c_e2p_rtc.c: 304: rtc_byte_wr(7,0x10);
  1198  001E66  0E10               	movlw	16
  1199  001E68  6E17               	movwf	rtc_byte_wr@dta,c
  1200  001E6A  0E07               	movlw	7
  1201  001E6C  EC8C  F014         	call	_rtc_byte_wr
  1202                           
  1203                           ;i2c_e2p_rtc.c: 306: temp = rtc_byte_rd(63);
  1204  001E70  0E3F               	movlw	63
  1205  001E72  ECFF  F013         	call	_rtc_byte_rd
  1206  001E76  6E1A               	movwf	init_rtc@temp,c
  1207                           
  1208                           ;i2c_e2p_rtc.c: 307: temp2 = rtc_byte_rd(7);
  1209  001E78  0E07               	movlw	7
  1210  001E7A  ECFF  F013         	call	_rtc_byte_rd
  1211  001E7E  6E19               	movwf	init_rtc@temp2,c
  1212                           
  1213                           ;i2c_e2p_rtc.c: 308: if(temp == 0xaa && temp2 == 0x10)return;
  1214  001E80  0EAA               	movlw	170
  1215  001E82  181A               	xorwf	init_rtc@temp,w,c
  1216  001E84  A4D8               	btfss	status,2,c
  1217  001E86  D004               	goto	l529
  1218  001E88  0E10               	movlw	16
  1219  001E8A  1819               	xorwf	init_rtc@temp2,w,c
  1220  001E8C  B4D8               	btfsc	status,2,c
  1221  001E8E  0012               	return	
  1222  001E90                     l529:
  1223                           
  1224                           ;i2c_e2p_rtc.c: 310: rtc_byte_wr(0,0);
  1225  001E90  0E00               	movlw	0
  1226  001E92  6E17               	movwf	rtc_byte_wr@dta,c
  1227  001E94  0E00               	movlw	0
  1228  001E96  EC8C  F014         	call	_rtc_byte_wr
  1229                           
  1230                           ;i2c_e2p_rtc.c: 311: rtc_byte_wr(1,24);
  1231  001E9A  0E18               	movlw	24
  1232  001E9C  6E17               	movwf	rtc_byte_wr@dta,c
  1233  001E9E  0E01               	movlw	1
  1234  001EA0  EC8C  F014         	call	_rtc_byte_wr
  1235                           
  1236                           ;i2c_e2p_rtc.c: 312: rtc_byte_wr(2,02);
  1237  001EA4  0E02               	movlw	2
  1238  001EA6  6E17               	movwf	rtc_byte_wr@dta,c
  1239  001EA8  0E02               	movlw	2
  1240  001EAA  EC8C  F014         	call	_rtc_byte_wr
  1241                           
  1242                           ;i2c_e2p_rtc.c: 313: rtc_byte_wr(4,13);
  1243  001EAE  0E0D               	movlw	13
  1244  001EB0  6E17               	movwf	rtc_byte_wr@dta,c
  1245  001EB2  0E04               	movlw	4
  1246  001EB4  EC8C  F014         	call	_rtc_byte_wr
  1247                           
  1248                           ;i2c_e2p_rtc.c: 314: rtc_byte_wr(5,12);
  1249  001EB8  0E0C               	movlw	12
  1250  001EBA  6E17               	movwf	rtc_byte_wr@dta,c
  1251  001EBC  0E05               	movlw	5
  1252  001EBE  EC8C  F014         	call	_rtc_byte_wr
  1253                           
  1254                           ;i2c_e2p_rtc.c: 315: rtc_byte_wr(6,18);
  1255  001EC2  0E12               	movlw	18
  1256  001EC4  6E17               	movwf	rtc_byte_wr@dta,c
  1257  001EC6  0E06               	movlw	6
  1258  001EC8  EC8C  F014         	call	_rtc_byte_wr
  1259                           
  1260                           ;i2c_e2p_rtc.c: 316: rtc_byte_wr(7,0x10);
  1261  001ECC  0E10               	movlw	16
  1262  001ECE  6E17               	movwf	rtc_byte_wr@dta,c
  1263  001ED0  0E07               	movlw	7
  1264  001ED2  EC8C  F014         	call	_rtc_byte_wr
  1265                           
  1266                           ;i2c_e2p_rtc.c: 317: rtc_byte_wr(63,0xaa);
  1267  001ED6  0EAA               	movlw	170
  1268  001ED8  6E17               	movwf	rtc_byte_wr@dta,c
  1269  001EDA  0E3F               	movlw	63
  1270  001EDC  EC8C  F014         	call	_rtc_byte_wr
  1271                           
  1272                           ;i2c_e2p_rtc.c: 318: rtc_byte_wr(62,0x01);
  1273  001EE0  0E01               	movlw	1
  1274  001EE2  6E17               	movwf	rtc_byte_wr@dta,c
  1275  001EE4  0E3E               	movlw	62
  1276  001EE6  EC8C  F014         	call	_rtc_byte_wr
  1277  001EEA  0012               	return		;funcret
  1278  001EEC                     __end_of_init_rtc:
  1279                           	opt stack 0
  1280                           tblptru	equ	0xFF8
  1281                           intcon	equ	0xFF2
  1282                           postinc0	equ	0xFEE
  1283                           wreg	equ	0xFE8
  1284                           status	equ	0xFD8
  1285                           
  1286 ;; *************** function _init_i2c_gpios *****************
  1287 ;; Defined at:
  1288 ;;		line 211 in file "i2c_e2p_rtc.c"
  1289 ;; Parameters:    Size  Location     Type
  1290 ;;		None
  1291 ;; Auto vars:     Size  Location     Type
  1292 ;;		None
  1293 ;; Return value:  Size  Location     Type
  1294 ;;                  1    wreg      void 
  1295 ;; Registers used:
  1296 ;;		None
  1297 ;; Tracked objects:
  1298 ;;		On entry : 0/0
  1299 ;;		On exit  : 0/0
  1300 ;;		Unchanged: 0/0
  1301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1306 ;;Total ram usage:        0 bytes
  1307 ;; Hardware stack levels used:    1
  1308 ;; Hardware stack levels required when called:    2
  1309 ;; This function calls:
  1310 ;;		Nothing
  1311 ;; This function is called by:
  1312 ;;		_main
  1313 ;; This function uses a non-reentrant model
  1314 ;;
  1315                           
  1316                           	psect	text4
  1317  002A14                     __ptext4:
  1318                           	opt stack 0
  1319  002A14                     _init_i2c_gpios:
  1320                           	opt stack 28
  1321                           
  1322                           ;i2c_e2p_rtc.c: 213: TRISCbits.TRISC4 = 0;
  1323                           
  1324                           ;incstack = 0
  1325  002A14  9894               	bcf	3988,4,c	;volatile
  1326                           
  1327                           ;i2c_e2p_rtc.c: 215: TRISCbits.TRISC3 = 0;
  1328  002A16  9694               	bcf	3988,3,c	;volatile
  1329  002A18  0012               	return		;funcret
  1330  002A1A                     __end_of_init_i2c_gpios:
  1331                           	opt stack 0
  1332                           tblptru	equ	0xFF8
  1333                           intcon	equ	0xFF2
  1334                           postinc0	equ	0xFEE
  1335                           wreg	equ	0xFE8
  1336                           status	equ	0xFD8
  1337                           
  1338 ;; *************** function _init *****************
  1339 ;; Defined at:
  1340 ;;		line 153 in file "main.c"
  1341 ;; Parameters:    Size  Location     Type
  1342 ;;		None
  1343 ;; Auto vars:     Size  Location     Type
  1344 ;;		None
  1345 ;; Return value:  Size  Location     Type
  1346 ;;                  1    wreg      void 
  1347 ;; Registers used:
  1348 ;;		wreg, status,2
  1349 ;; Tracked objects:
  1350 ;;		On entry : 0/0
  1351 ;;		On exit  : 0/0
  1352 ;;		Unchanged: 0/0
  1353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1357 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1358 ;;Total ram usage:        0 bytes
  1359 ;; Hardware stack levels used:    1
  1360 ;; Hardware stack levels required when called:    2
  1361 ;; This function calls:
  1362 ;;		Nothing
  1363 ;; This function is called by:
  1364 ;;		_main
  1365 ;; This function uses a non-reentrant model
  1366 ;;
  1367                           
  1368                           	psect	text5
  1369  0024F4                     __ptext5:
  1370                           	opt stack 0
  1371  0024F4                     _init:
  1372                           	opt stack 28
  1373                           
  1374                           ;main.c: 155: TRISA = 0X08;
  1375                           
  1376                           ;incstack = 0
  1377  0024F4  0E08               	movlw	8
  1378  0024F6  6E92               	movwf	3986,c	;volatile
  1379                           
  1380                           ;main.c: 156: TRISB = 0X00;
  1381  0024F8  0E00               	movlw	0
  1382  0024FA  6E93               	movwf	3987,c	;volatile
  1383                           
  1384                           ;main.c: 157: TRISC = 0X00;
  1385  0024FC  0E00               	movlw	0
  1386  0024FE  6E94               	movwf	3988,c	;volatile
  1387                           
  1388                           ;main.c: 158: PORTC = 0X07;
  1389  002500  0E07               	movlw	7
  1390  002502  6E82               	movwf	3970,c	;volatile
  1391                           
  1392                           ;main.c: 159: TRISD = 0X0F;
  1393  002504  0E0F               	movlw	15
  1394  002506  6E95               	movwf	3989,c	;volatile
  1395                           
  1396                           ;main.c: 160: TRISE = 0X02;
  1397  002508  0E02               	movlw	2
  1398  00250A  6E96               	movwf	3990,c	;volatile
  1399                           
  1400                           ;main.c: 163: PORTA = 0X00;
  1401  00250C  0E00               	movlw	0
  1402  00250E  6E80               	movwf	3968,c	;volatile
  1403                           
  1404                           ;main.c: 164: PORTB = 0X00;
  1405  002510  0E00               	movlw	0
  1406  002512  6E81               	movwf	3969,c	;volatile
  1407                           
  1408                           ;main.c: 166: PORTD = 0X00;
  1409  002514  0E00               	movlw	0
  1410  002516  6E83               	movwf	3971,c	;volatile
  1411                           
  1412                           ;main.c: 167: PORTE = 0X00;
  1413  002518  0E00               	movlw	0
  1414  00251A  6E84               	movwf	3972,c	;volatile
  1415                           
  1416                           ;main.c: 169: ADCON0 = 0;
  1417  00251C  0E00               	movlw	0
  1418  00251E  6EC2               	movwf	4034,c	;volatile
  1419                           
  1420                           ;main.c: 170: ADCON1 = 0;
  1421  002520  0E00               	movlw	0
  1422  002522  6EC1               	movwf	4033,c	;volatile
  1423                           
  1424                           ;main.c: 172: ANSELA = 0;
  1425  002524  0E00               	movlw	0
  1426  002526  010F               	movlb	15	; () banked
  1427  002528  6F38               	movwf	56,b	;volatile
  1428                           
  1429                           ;main.c: 173: ANSELB = 0;
  1430  00252A  0E00               	movlw	0
  1431  00252C  6F39               	movwf	57,b	;volatile
  1432                           
  1433                           ;main.c: 175: ANSELC = 0;
  1434  00252E  0E00               	movlw	0
  1435  002530  6F3A               	movwf	58,b	;volatile
  1436                           
  1437                           ;main.c: 176: ANSELD = 0;
  1438  002532  0E00               	movlw	0
  1439  002534  6F3B               	movwf	59,b	;volatile
  1440                           
  1441                           ;main.c: 177: ANSELE = 0;
  1442  002536  0E00               	movlw	0
  1443  002538  6F3C               	movwf	60,b	;volatile
  1444                           
  1445                           ;main.c: 178: CCP3CON = 0x00;
  1446  00253A  0E00               	movlw	0
  1447  00253C  6F5D               	movwf	93,b	;volatile
  1448                           
  1449                           ;main.c: 179: CCP1CON = 0x00;
  1450  00253E  0E00               	movlw	0
  1451  002540  6EBD               	movwf	4029,c	;volatile
  1452                           
  1453                           ;main.c: 180: CCP2CON = 0x00;
  1454  002542  0E00               	movlw	0
  1455  002544  6E66               	movwf	3942,c	;volatile
  1456                           
  1457                           ; BSR set to: 15
  1458                           ;main.c: 182: OSCCONbits.IRCF = 7;
  1459  002546  88D3               	bsf	4051,4,c	;volatile
  1460  002548  8AD3               	bsf	4051,5,c	;volatile
  1461  00254A  8CD3               	bsf	4051,6,c	;volatile
  1462                           
  1463                           ;main.c: 183: OSCCONbits.SCS = 3;
  1464  00254C  0E03               	movlw	3
  1465  00254E  12D3               	iorwf	4051,f,c	;volatile
  1466                           
  1467                           ; BSR set to: 15
  1468  002550  0012               	return		;funcret
  1469  002552                     __end_of_init:
  1470                           	opt stack 0
  1471                           tblptru	equ	0xFF8
  1472                           intcon	equ	0xFF2
  1473                           postinc0	equ	0xFEE
  1474                           wreg	equ	0xFE8
  1475                           status	equ	0xFD8
  1476                           
  1477 ;; *************** function _fault_detection *****************
  1478 ;; Defined at:
  1479 ;;		line 111 in file "logic.c"
  1480 ;; Parameters:    Size  Location     Type
  1481 ;;		None
  1482 ;; Auto vars:     Size  Location     Type
  1483 ;;  j               1   34[COMRAM] unsigned char 
  1484 ;;  k               1   33[COMRAM] unsigned char 
  1485 ;;  i               1   32[COMRAM] unsigned char 
  1486 ;;  l               1   31[COMRAM] unsigned char 
  1487 ;;  green_led_da    1   30[COMRAM] unsigned char 
  1488 ;;  red_led_data    1   29[COMRAM] unsigned char 
  1489 ;;  led_data        1   28[COMRAM] unsigned char 
  1490 ;;  tmp             1   27[COMRAM] unsigned char 
  1491 ;;  input           1   26[COMRAM] unsigned char 
  1492 ;;  tmp2            1   25[COMRAM] unsigned char 
  1493 ;;  dipsw           1   24[COMRAM] unsigned char 
  1494 ;;  temp            1   23[COMRAM] unsigned char 
  1495 ;;  rly_data        1    0        unsigned char 
  1496 ;; Return value:  Size  Location     Type
  1497 ;;                  1    wreg      void 
  1498 ;; Registers used:
  1499 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1500 ;; Tracked objects:
  1501 ;;		On entry : 0/0
  1502 ;;		On exit  : 0/0
  1503 ;;		Unchanged: 0/0
  1504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1506 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1507 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1508 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1509 ;;Total ram usage:       15 bytes
  1510 ;; Hardware stack levels used:    1
  1511 ;; Hardware stack levels required when called:    3
  1512 ;; This function calls:
  1513 ;;		_accept_key
  1514 ;;		_reset_key
  1515 ;;		_silence_key
  1516 ;;		_test_key
  1517 ;; This function is called by:
  1518 ;;		_main
  1519 ;; This function uses a non-reentrant model
  1520 ;;
  1521                           
  1522                           	psect	text6
  1523  001056                     __ptext6:
  1524                           	opt stack 0
  1525  001056                     _fault_detection:
  1526                           	opt stack 27
  1527                           
  1528                           ;logic.c: 113: unsigned char i,k;
  1529                           ;logic.c: 115: unsigned char temp, led_data, red_led_data, green_led_data, j,l,rly_data;
  1530                           ;logic.c: 116: unsigned char input = 0;
  1531                           
  1532                           ; BSR set to: 15
  1533                           ;incstack = 0
  1534  001056  0E00               	movlw	0
  1535  001058  6E1B               	movwf	fault_detection@input,c
  1536                           
  1537                           ;logic.c: 117: unsigned char dipsw = 0;
  1538  00105A  0E00               	movlw	0
  1539  00105C  6E19               	movwf	fault_detection@dipsw,c
  1540                           
  1541                           ;logic.c: 118: unsigned char tmp,tmp2;
  1542                           ;logic.c: 120: for(i=0,k=0,l=0; i<12&&k<3&&l<6 ; i+=4,k++,l+=2)
  1543  00105E  0E00               	movlw	0
  1544  001060  6E21               	movwf	fault_detection@i,c
  1545  001062  0E00               	movlw	0
  1546  001064  6E22               	movwf	fault_detection@k,c
  1547  001066  0E00               	movlw	0
  1548  001068  6E20               	movwf	fault_detection@l,c
  1549  00106A  D1ED               	goto	l423
  1550  00106C                     
  1551                           ;logic.c: 121: {
  1552                           ;logic.c: 122: temp = (~logic_var.new_ip[i+3]);
  1553  00106C  5021               	movf	fault_detection@i,w,c
  1554  00106E  6E15               	movwf	??_fault_detection& (0+255),c
  1555  001070  6A16               	clrf	(??_fault_detection+1)& (0+255),c
  1556  001072  0E03               	movlw	3
  1557  001074  2615               	addwf	??_fault_detection,f,c
  1558  001076  0E00               	movlw	0
  1559  001078  2216               	addwfc	??_fault_detection+1,f,c
  1560  00107A  0E84               	movlw	low (_logic_var+36)
  1561  00107C  2415               	addwf	??_fault_detection,w,c
  1562  00107E  6ED9               	movwf	fsr2l,c
  1563  001080  0E00               	movlw	high (_logic_var+36)
  1564  001082  2016               	addwfc	??_fault_detection+1,w,c
  1565  001084  6EDA               	movwf	fsr2h,c
  1566  001086  50DF               	movf	indf2,w,c
  1567  001088  0AFF               	xorlw	255
  1568  00108A  6E18               	movwf	fault_detection@temp,c
  1569                           
  1570                           ;logic.c: 123: logic_var.cal_data[k].bytes = (~( temp ^ (logic_var.new_ip[i])));
  1571  00108C  5022               	movf	fault_detection@k,w,c
  1572  00108E  0D01               	mullw	1
  1573  001090  0E99               	movlw	low (_logic_var+57)
  1574  001092  24F3               	addwf	prodl,w,c
  1575  001094  6ED9               	movwf	fsr2l,c
  1576  001096  0E00               	movlw	high (_logic_var+57)
  1577  001098  20F4               	addwfc	prodh,w,c
  1578  00109A  6EDA               	movwf	fsr2h,c
  1579  00109C  5021               	movf	fault_detection@i,w,c
  1580  00109E  0D01               	mullw	1
  1581  0010A0  0E84               	movlw	low (_logic_var+36)
  1582  0010A2  24F3               	addwf	prodl,w,c
  1583  0010A4  6EE1               	movwf	fsr1l,c
  1584  0010A6  0E00               	movlw	high (_logic_var+36)
  1585  0010A8  20F4               	addwfc	prodh,w,c
  1586  0010AA  6EE2               	movwf	fsr1h,c
  1587  0010AC  50E7               	movf	indf1,w,c
  1588  0010AE  1818               	xorwf	fault_detection@temp,w,c
  1589  0010B0  0AFF               	xorlw	255
  1590  0010B2  6EDF               	movwf	indf2,c
  1591                           
  1592                           ;logic.c: 124: logic_var.hold_data[k].bytes |= logic_var.cal_data[k].bytes;
  1593  0010B4  5022               	movf	fault_detection@k,w,c
  1594  0010B6  0D01               	mullw	1
  1595  0010B8  0E99               	movlw	low (_logic_var+57)
  1596  0010BA  24F3               	addwf	prodl,w,c
  1597  0010BC  6ED9               	movwf	fsr2l,c
  1598  0010BE  0E00               	movlw	high (_logic_var+57)
  1599  0010C0  20F4               	addwfc	prodh,w,c
  1600  0010C2  6EDA               	movwf	fsr2h,c
  1601  0010C4  50DF               	movf	indf2,w,c
  1602  0010C6  6E15               	movwf	??_fault_detection& (0+255),c
  1603  0010C8  5022               	movf	fault_detection@k,w,c
  1604  0010CA  0D01               	mullw	1
  1605  0010CC  0E90               	movlw	low (_logic_var+48)
  1606  0010CE  24F3               	addwf	prodl,w,c
  1607  0010D0  6ED9               	movwf	fsr2l,c
  1608  0010D2  0E00               	movlw	high (_logic_var+48)
  1609  0010D4  20F4               	addwfc	prodh,w,c
  1610  0010D6  6EDA               	movwf	fsr2h,c
  1611  0010D8  5015               	movf	??_fault_detection,w,c
  1612  0010DA  12DF               	iorwf	indf2,f,c
  1613                           
  1614                           ;logic.c: 126: logic_var.flash_data[k].bytes = logic_var.hold_data[k].bytes ^ logic_var.
      +                          hist_hold_data[k].bytes;
  1615  0010DC  5022               	movf	fault_detection@k,w,c
  1616  0010DE  0D01               	mullw	1
  1617  0010E0  0E96               	movlw	low (_logic_var+54)
  1618  0010E2  24F3               	addwf	prodl,w,c
  1619  0010E4  6ED9               	movwf	fsr2l,c
  1620  0010E6  0E00               	movlw	high (_logic_var+54)
  1621  0010E8  20F4               	addwfc	prodh,w,c
  1622  0010EA  6EDA               	movwf	fsr2h,c
  1623  0010EC  5022               	movf	fault_detection@k,w,c
  1624  0010EE  0D01               	mullw	1
  1625  0010F0  0E93               	movlw	low (_logic_var+51)
  1626  0010F2  24F3               	addwf	prodl,w,c
  1627  0010F4  6EE1               	movwf	fsr1l,c
  1628  0010F6  0E00               	movlw	high (_logic_var+51)
  1629  0010F8  20F4               	addwfc	prodh,w,c
  1630  0010FA  6EE2               	movwf	fsr1h,c
  1631  0010FC  50E7               	movf	indf1,w,c
  1632  0010FE  6E15               	movwf	??_fault_detection& (0+255),c
  1633  001100  5022               	movf	fault_detection@k,w,c
  1634  001102  0D01               	mullw	1
  1635  001104  0E90               	movlw	low (_logic_var+48)
  1636  001106  24F3               	addwf	prodl,w,c
  1637  001108  6EE1               	movwf	fsr1l,c
  1638  00110A  0E00               	movlw	high (_logic_var+48)
  1639  00110C  20F4               	addwfc	prodh,w,c
  1640  00110E  6EE2               	movwf	fsr1h,c
  1641  001110  50E7               	movf	indf1,w,c
  1642  001112  1815               	xorwf	??_fault_detection,w,c
  1643  001114  6EDF               	movwf	indf2,c
  1644                           
  1645                           ;logic.c: 132: if(logic_var.flash_timer == 0)
  1646  001116  0100               	movlb	0	; () banked
  1647  001118  519F               	movf	(_logic_var+63)& (0+255),w,b
  1648  00111A  11A0               	iorwf	(_logic_var+64)& (0+255),w,b
  1649  00111C  A4D8               	btfss	status,2,c
  1650  00111E  D007               	goto	l425
  1651                           
  1652                           ; BSR set to: 0
  1653                           ;logic.c: 133: {
  1654                           ;logic.c: 134: logic_var.flash_flg = ~logic_var.flash_flg;
  1655  001120  51A1               	movf	(_logic_var+65)& (0+255),w,b
  1656  001122  0AFF               	xorlw	255
  1657  001124  6FA1               	movwf	(_logic_var+65)& (0+255),b
  1658                           
  1659                           ; BSR set to: 0
  1660                           ;logic.c: 135: logic_var.flash_timer = 500;
  1661  001126  0E01               	movlw	1
  1662  001128  6FA0               	movwf	(_logic_var+64)& (0+255),b
  1663  00112A  0EF4               	movlw	244
  1664  00112C  6F9F               	movwf	(_logic_var+63)& (0+255),b
  1665  00112E                     l425:
  1666                           
  1667                           ; BSR set to: 0
  1668                           ;logic.c: 136: }
  1669                           ;logic.c: 138: if(logic_var.flash_flg == 0)
  1670                           
  1671                           ; BSR set to: 0
  1672  00112E  51A1               	movf	(_logic_var+65)& (0+255),w,b
  1673  001130  A4D8               	btfss	status,2,c
  1674  001132  D0AE               	goto	l426
  1675                           
  1676                           ; BSR set to: 0
  1677                           ;logic.c: 139: {
  1678                           ;logic.c: 140: led_data = logic_var.hold_data[k].bytes & (~logic_var.flash_data[k].bytes
      +                          );
  1679  001134  5022               	movf	fault_detection@k,w,c
  1680  001136  0D01               	mullw	1
  1681  001138  0E90               	movlw	low (_logic_var+48)
  1682  00113A  24F3               	addwf	prodl,w,c
  1683  00113C  6ED9               	movwf	fsr2l,c
  1684  00113E  0E00               	movlw	high (_logic_var+48)
  1685  001140  20F4               	addwfc	prodh,w,c
  1686  001142  6EDA               	movwf	fsr2h,c
  1687  001144  50DF               	movf	indf2,w,c
  1688  001146  6E15               	movwf	??_fault_detection& (0+255),c
  1689  001148  5022               	movf	fault_detection@k,w,c
  1690  00114A  0D01               	mullw	1
  1691  00114C  0E96               	movlw	low (_logic_var+54)
  1692  00114E  24F3               	addwf	prodl,w,c
  1693  001150  6ED9               	movwf	fsr2l,c
  1694  001152  0E00               	movlw	high (_logic_var+54)
  1695  001154  20F4               	addwfc	prodh,w,c
  1696  001156  6EDA               	movwf	fsr2h,c
  1697  001158  50DF               	movf	indf2,w,c
  1698  00115A  0AFF               	xorlw	255
  1699  00115C  1415               	andwf	??_fault_detection,w,c
  1700  00115E  6E1D               	movwf	fault_detection@led_data,c
  1701                           
  1702                           ; BSR set to: 0
  1703                           ;logic.c: 142: red_led_data = (led_data & logic_var.new_ip[i+1]);
  1704  001160  5021               	movf	fault_detection@i,w,c
  1705  001162  6E15               	movwf	??_fault_detection& (0+255),c
  1706  001164  6A16               	clrf	(??_fault_detection+1)& (0+255),c
  1707  001166  0E01               	movlw	1
  1708  001168  2615               	addwf	??_fault_detection,f,c
  1709  00116A  0E00               	movlw	0
  1710  00116C  2216               	addwfc	??_fault_detection+1,f,c
  1711  00116E  0E84               	movlw	low (_logic_var+36)
  1712  001170  2415               	addwf	??_fault_detection,w,c
  1713  001172  6ED9               	movwf	fsr2l,c
  1714  001174  0E00               	movlw	high (_logic_var+36)
  1715  001176  2016               	addwfc	??_fault_detection+1,w,c
  1716  001178  6EDA               	movwf	fsr2h,c
  1717  00117A  50DF               	movf	indf2,w,c
  1718  00117C  141D               	andwf	fault_detection@led_data,w,c
  1719  00117E  6E1E               	movwf	fault_detection@red_led_data,c
  1720                           
  1721                           ; BSR set to: 0
  1722                           ;logic.c: 143: green_led_data = (led_data & (~logic_var.new_ip[i+1]));
  1723  001180  5021               	movf	fault_detection@i,w,c
  1724  001182  6E15               	movwf	??_fault_detection& (0+255),c
  1725  001184  6A16               	clrf	(??_fault_detection+1)& (0+255),c
  1726  001186  0E01               	movlw	1
  1727  001188  2615               	addwf	??_fault_detection,f,c
  1728  00118A  0E00               	movlw	0
  1729  00118C  2216               	addwfc	??_fault_detection+1,f,c
  1730  00118E  0E84               	movlw	low (_logic_var+36)
  1731  001190  2415               	addwf	??_fault_detection,w,c
  1732  001192  6ED9               	movwf	fsr2l,c
  1733  001194  0E00               	movlw	high (_logic_var+36)
  1734  001196  2016               	addwfc	??_fault_detection+1,w,c
  1735  001198  6EDA               	movwf	fsr2h,c
  1736  00119A  50DF               	movf	indf2,w,c
  1737  00119C  0AFF               	xorlw	255
  1738  00119E  141D               	andwf	fault_detection@led_data,w,c
  1739  0011A0  6E1F               	movwf	fault_detection@green_led_data,c
  1740                           
  1741                           ; BSR set to: 0
  1742                           ;logic.c: 145: for(j=0; j<8; j++)
  1743  0011A2  0E00               	movlw	0
  1744  0011A4  6E23               	movwf	fault_detection@j,c
  1745  0011A6                     l5266:
  1746                           
  1747                           ; BSR set to: 0
  1748  0011A6  0E07               	movlw	7
  1749  0011A8  6423               	cpfsgt	fault_detection@j,c
  1750  0011AA  D001               	goto	l427
  1751  0011AC  D10F               	goto	u4060
  1752  0011AE                     l427:
  1753                           
  1754                           ;logic.c: 146: {
  1755                           ;logic.c: 147: if(j<4)
  1756                           
  1757                           ; BSR set to: 0
  1758  0011AE  0E04               	movlw	4
  1759  0011B0  6023               	cpfslt	fault_detection@j,c
  1760  0011B2  D038               	goto	l429
  1761                           
  1762                           ;logic.c: 148: {
  1763                           ;logic.c: 149: if((red_led_data & 0x80) == 0)
  1764  0011B4  BE1E               	btfsc	fault_detection@red_led_data,7,c
  1765  0011B6  D01B               	goto	l430
  1766                           
  1767                           ;logic.c: 150: logic_var.led_byte[l+1].bytes &= ~red_led[j];
  1768  0011B8  5023               	movf	fault_detection@j,w,c
  1769  0011BA  0D01               	mullw	1
  1770  0011BC  0E19               	movlw	low _red_led
  1771  0011BE  24F3               	addwf	prodl,w,c
  1772  0011C0  6EF6               	movwf	tblptrl,c
  1773  0011C2  0E10               	movlw	high _red_led
  1774  0011C4  20F4               	addwfc	prodh,w,c
  1775  0011C6  6EF7               	movwf	tblptrh,c
  1776  0011C8                     	if	0	;There are less than 3 active tblptr bytes
  1777  0011C8                     	endif
  1778  0011C8  0008               	tblrd		*
  1779  0011CA  50F5               	movf	tablat,w,c
  1780  0011CC  0AFF               	xorlw	255
  1781  0011CE  6E15               	movwf	??_fault_detection& (0+255),c
  1782  0011D0  5020               	movf	fault_detection@l,w,c
  1783  0011D2  6E16               	movwf	(??_fault_detection+1)& (0+255),c
  1784  0011D4  6A17               	clrf	(??_fault_detection+2)& (0+255),c
  1785  0011D6  0E01               	movlw	1
  1786  0011D8  2616               	addwf	??_fault_detection+1,f,c
  1787  0011DA  0E00               	movlw	0
  1788  0011DC  2217               	addwfc	??_fault_detection+2,f,c
  1789  0011DE  0EA5               	movlw	low (_logic_var+69)
  1790  0011E0  2416               	addwf	??_fault_detection+1,w,c
  1791  0011E2  6ED9               	movwf	fsr2l,c
  1792  0011E4  0E00               	movlw	high (_logic_var+69)
  1793  0011E6  2017               	addwfc	??_fault_detection+2,w,c
  1794  0011E8  6EDA               	movwf	fsr2h,c
  1795  0011EA  5015               	movf	??_fault_detection,w,c
  1796  0011EC  16DF               	andwf	indf2,f,c
  1797  0011EE                     l430:
  1798                           
  1799                           ;logic.c: 152: if((green_led_data & 0x80) == 0)
  1800  0011EE  BE1F               	btfsc	fault_detection@green_led_data,7,c
  1801  0011F0  D049               	goto	l434
  1802                           
  1803                           ;logic.c: 153: logic_var.led_byte[l+1].bytes &= ~green_led[j];
  1804  0011F2  5023               	movf	fault_detection@j,w,c
  1805  0011F4  0D01               	mullw	1
  1806  0011F6  0E11               	movlw	low _green_led
  1807  0011F8  24F3               	addwf	prodl,w,c
  1808  0011FA  6EF6               	movwf	tblptrl,c
  1809  0011FC  0E10               	movlw	high _green_led
  1810  0011FE  20F4               	addwfc	prodh,w,c
  1811  001200  6EF7               	movwf	tblptrh,c
  1812  001202                     	if	0	;There are less than 3 active tblptr bytes
  1813  001202                     	endif
  1814  001202  0008               	tblrd		*
  1815  001204  50F5               	movf	tablat,w,c
  1816  001206  0AFF               	xorlw	255
  1817  001208  6E15               	movwf	??_fault_detection& (0+255),c
  1818  00120A  5020               	movf	fault_detection@l,w,c
  1819  00120C  6E16               	movwf	(??_fault_detection+1)& (0+255),c
  1820  00120E  6A17               	clrf	(??_fault_detection+2)& (0+255),c
  1821  001210  0E01               	movlw	1
  1822  001212  2616               	addwf	??_fault_detection+1,f,c
  1823  001214  0E00               	movlw	0
  1824  001216  2217               	addwfc	??_fault_detection+2,f,c
  1825  001218  0EA5               	movlw	low (_logic_var+69)
  1826  00121A  2416               	addwf	??_fault_detection+1,w,c
  1827  00121C  6ED9               	movwf	fsr2l,c
  1828  00121E  0E00               	movlw	high (_logic_var+69)
  1829  001220  2017               	addwfc	??_fault_detection+2,w,c
  1830  001222  D02D               	goto	L6
  1831  001224                     l429:
  1832                           
  1833                           ;logic.c: 158: else
  1834                           ;logic.c: 159: {
  1835                           ;logic.c: 160: if((red_led_data & 0x80) == 0)
  1836  001224  BE1E               	btfsc	fault_detection@red_led_data,7,c
  1837  001226  D016               	goto	l433
  1838                           
  1839                           ;logic.c: 161: logic_var.led_byte[l].bytes &= ~red_led[j];
  1840  001228  5023               	movf	fault_detection@j,w,c
  1841  00122A  0D01               	mullw	1
  1842  00122C  0E19               	movlw	low _red_led
  1843  00122E  24F3               	addwf	prodl,w,c
  1844  001230  6EF6               	movwf	tblptrl,c
  1845  001232  0E10               	movlw	high _red_led
  1846  001234  20F4               	addwfc	prodh,w,c
  1847  001236  6EF7               	movwf	tblptrh,c
  1848  001238                     	if	0	;There are less than 3 active tblptr bytes
  1849  001238                     	endif
  1850  001238  0008               	tblrd		*
  1851  00123A  50F5               	movf	tablat,w,c
  1852  00123C  0AFF               	xorlw	255
  1853  00123E  6E15               	movwf	??_fault_detection& (0+255),c
  1854  001240  5020               	movf	fault_detection@l,w,c
  1855  001242  0D01               	mullw	1
  1856  001244  0EA5               	movlw	low (_logic_var+69)
  1857  001246  24F3               	addwf	prodl,w,c
  1858  001248  6ED9               	movwf	fsr2l,c
  1859  00124A  0E00               	movlw	high (_logic_var+69)
  1860  00124C  20F4               	addwfc	prodh,w,c
  1861  00124E  6EDA               	movwf	fsr2h,c
  1862  001250  5015               	movf	??_fault_detection,w,c
  1863  001252  16DF               	andwf	indf2,f,c
  1864  001254                     l433:
  1865                           
  1866                           ;logic.c: 163: if((green_led_data & 0x80) == 0)
  1867  001254  BE1F               	btfsc	fault_detection@green_led_data,7,c
  1868  001256  D016               	goto	l434
  1869                           
  1870                           ;logic.c: 164: logic_var.led_byte[l].bytes &= ~green_led[j];
  1871  001258  5023               	movf	fault_detection@j,w,c
  1872  00125A  0D01               	mullw	1
  1873  00125C  0E11               	movlw	low _green_led
  1874  00125E  24F3               	addwf	prodl,w,c
  1875  001260  6EF6               	movwf	tblptrl,c
  1876  001262  0E10               	movlw	high _green_led
  1877  001264  20F4               	addwfc	prodh,w,c
  1878  001266  6EF7               	movwf	tblptrh,c
  1879  001268                     	if	0	;There are less than 3 active tblptr bytes
  1880  001268                     	endif
  1881  001268  0008               	tblrd		*
  1882  00126A  50F5               	movf	tablat,w,c
  1883  00126C  0AFF               	xorlw	255
  1884  00126E  6E15               	movwf	??_fault_detection& (0+255),c
  1885  001270  5020               	movf	fault_detection@l,w,c
  1886  001272  0D01               	mullw	1
  1887  001274  0EA5               	movlw	low (_logic_var+69)
  1888  001276  24F3               	addwf	prodl,w,c
  1889  001278  6ED9               	movwf	fsr2l,c
  1890  00127A  0E00               	movlw	high (_logic_var+69)
  1891  00127C  20F4               	addwfc	prodh,w,c
  1892  00127E                     L6:
  1893  00127E  6EDA               	movwf	fsr2h,c
  1894  001280  5015               	movf	??_fault_detection,w,c
  1895  001282  16DF               	andwf	indf2,f,c
  1896  001284                     l434:
  1897                           
  1898                           ;logic.c: 166: red_led_data <<= 1;
  1899  001284  90D8               	bcf	status,0,c
  1900  001286  361E               	rlcf	fault_detection@red_led_data,f,c
  1901                           
  1902                           ;logic.c: 167: green_led_data <<= 1;
  1903  001288  90D8               	bcf	status,0,c
  1904  00128A  361F               	rlcf	fault_detection@green_led_data,f,c
  1905  00128C  2A23               	incf	fault_detection@j,f,c
  1906  00128E  D78B               	goto	l5266
  1907  001290                     l426:
  1908                           
  1909                           ;logic.c: 172: else
  1910                           ;logic.c: 173: {
  1911                           ;logic.c: 174: led_data = logic_var.hold_data[k].bytes;
  1912  001290  5022               	movf	fault_detection@k,w,c
  1913  001292  0D01               	mullw	1
  1914  001294  0E90               	movlw	low (_logic_var+48)
  1915  001296  24F3               	addwf	prodl,w,c
  1916  001298  6ED9               	movwf	fsr2l,c
  1917  00129A  0E00               	movlw	high (_logic_var+48)
  1918  00129C  20F4               	addwfc	prodh,w,c
  1919  00129E  6EDA               	movwf	fsr2h,c
  1920  0012A0  50DF               	movf	indf2,w,c
  1921  0012A2  6E1D               	movwf	fault_detection@led_data,c
  1922                           
  1923                           ;logic.c: 176: red_led_data = (led_data & logic_var.new_ip[i+1]);
  1924  0012A4  5021               	movf	fault_detection@i,w,c
  1925  0012A6  6E15               	movwf	??_fault_detection& (0+255),c
  1926  0012A8  6A16               	clrf	(??_fault_detection+1)& (0+255),c
  1927  0012AA  0E01               	movlw	1
  1928  0012AC  2615               	addwf	??_fault_detection,f,c
  1929  0012AE  0E00               	movlw	0
  1930  0012B0  2216               	addwfc	??_fault_detection+1,f,c
  1931  0012B2  0E84               	movlw	low (_logic_var+36)
  1932  0012B4  2415               	addwf	??_fault_detection,w,c
  1933  0012B6  6ED9               	movwf	fsr2l,c
  1934  0012B8  0E00               	movlw	high (_logic_var+36)
  1935  0012BA  2016               	addwfc	??_fault_detection+1,w,c
  1936  0012BC  6EDA               	movwf	fsr2h,c
  1937  0012BE  50DF               	movf	indf2,w,c
  1938  0012C0  141D               	andwf	fault_detection@led_data,w,c
  1939  0012C2  6E1E               	movwf	fault_detection@red_led_data,c
  1940                           
  1941                           ;logic.c: 177: green_led_data = (led_data & (~logic_var.new_ip[i+1]));
  1942  0012C4  5021               	movf	fault_detection@i,w,c
  1943  0012C6  6E15               	movwf	??_fault_detection& (0+255),c
  1944  0012C8  6A16               	clrf	(??_fault_detection+1)& (0+255),c
  1945  0012CA  0E01               	movlw	1
  1946  0012CC  2615               	addwf	??_fault_detection,f,c
  1947  0012CE  0E00               	movlw	0
  1948  0012D0  2216               	addwfc	??_fault_detection+1,f,c
  1949  0012D2  0E84               	movlw	low (_logic_var+36)
  1950  0012D4  2415               	addwf	??_fault_detection,w,c
  1951  0012D6  6ED9               	movwf	fsr2l,c
  1952  0012D8  0E00               	movlw	high (_logic_var+36)
  1953  0012DA  2016               	addwfc	??_fault_detection+1,w,c
  1954  0012DC  6EDA               	movwf	fsr2h,c
  1955  0012DE  50DF               	movf	indf2,w,c
  1956  0012E0  0AFF               	xorlw	255
  1957  0012E2  141D               	andwf	fault_detection@led_data,w,c
  1958  0012E4  6E1F               	movwf	fault_detection@green_led_data,c
  1959                           
  1960                           ;logic.c: 179: for(j=0; j<8; j++)
  1961  0012E6  0E00               	movlw	0
  1962  0012E8  6E23               	movwf	fault_detection@j,c
  1963  0012EA                     l5306:
  1964  0012EA  0E07               	movlw	7
  1965  0012EC  6423               	cpfsgt	fault_detection@j,c
  1966  0012EE  D001               	goto	l436
  1967  0012F0  D06D               	goto	u4060
  1968  0012F2                     l436:
  1969                           
  1970                           ;logic.c: 180: {
  1971                           ;logic.c: 181: if(j<4)
  1972  0012F2  0E04               	movlw	4
  1973  0012F4  6023               	cpfslt	fault_detection@j,c
  1974  0012F6  D036               	goto	l438
  1975                           
  1976                           ;logic.c: 182: {
  1977                           ;logic.c: 183: if((red_led_data & 0x80) != 0)
  1978  0012F8  AE1E               	btfss	fault_detection@red_led_data,7,c
  1979  0012FA  D01A               	goto	l439
  1980                           
  1981                           ;logic.c: 184: logic_var.led_byte[l+1].bytes |= red_led[j];
  1982  0012FC  5023               	movf	fault_detection@j,w,c
  1983  0012FE  0D01               	mullw	1
  1984  001300  0E19               	movlw	low _red_led
  1985  001302  24F3               	addwf	prodl,w,c
  1986  001304  6EF6               	movwf	tblptrl,c
  1987  001306  0E10               	movlw	high _red_led
  1988  001308  20F4               	addwfc	prodh,w,c
  1989  00130A  6EF7               	movwf	tblptrh,c
  1990  00130C                     	if	0	;There are less than 3 active tblptr bytes
  1991  00130C                     	endif
  1992  00130C  0008               	tblrd		*
  1993  00130E  CFF5 F015          	movff	tablat,??_fault_detection
  1994  001312  5020               	movf	fault_detection@l,w,c
  1995  001314  6E16               	movwf	(??_fault_detection+1)& (0+255),c
  1996  001316  6A17               	clrf	(??_fault_detection+2)& (0+255),c
  1997  001318  0E01               	movlw	1
  1998  00131A  2616               	addwf	??_fault_detection+1,f,c
  1999  00131C  0E00               	movlw	0
  2000  00131E  2217               	addwfc	??_fault_detection+2,f,c
  2001  001320  0EA5               	movlw	low (_logic_var+69)
  2002  001322  2416               	addwf	??_fault_detection+1,w,c
  2003  001324  6ED9               	movwf	fsr2l,c
  2004  001326  0E00               	movlw	high (_logic_var+69)
  2005  001328  2017               	addwfc	??_fault_detection+2,w,c
  2006  00132A  6EDA               	movwf	fsr2h,c
  2007  00132C  5015               	movf	??_fault_detection,w,c
  2008  00132E  12DF               	iorwf	indf2,f,c
  2009  001330                     l439:
  2010                           
  2011                           ;logic.c: 186: if((green_led_data & 0x80) != 0)
  2012  001330  AE1F               	btfss	fault_detection@green_led_data,7,c
  2013  001332  D046               	goto	l443
  2014                           
  2015                           ;logic.c: 187: logic_var.led_byte[l+1].bytes |= green_led[j];
  2016  001334  5023               	movf	fault_detection@j,w,c
  2017  001336  0D01               	mullw	1
  2018  001338  0E11               	movlw	low _green_led
  2019  00133A  24F3               	addwf	prodl,w,c
  2020  00133C  6EF6               	movwf	tblptrl,c
  2021  00133E  0E10               	movlw	high _green_led
  2022  001340  20F4               	addwfc	prodh,w,c
  2023  001342  6EF7               	movwf	tblptrh,c
  2024  001344                     	if	0	;There are less than 3 active tblptr bytes
  2025  001344                     	endif
  2026  001344  0008               	tblrd		*
  2027  001346  CFF5 F015          	movff	tablat,??_fault_detection
  2028  00134A  5020               	movf	fault_detection@l,w,c
  2029  00134C  6E16               	movwf	(??_fault_detection+1)& (0+255),c
  2030  00134E  6A17               	clrf	(??_fault_detection+2)& (0+255),c
  2031  001350  0E01               	movlw	1
  2032  001352  2616               	addwf	??_fault_detection+1,f,c
  2033  001354  0E00               	movlw	0
  2034  001356  2217               	addwfc	??_fault_detection+2,f,c
  2035  001358  0EA5               	movlw	low (_logic_var+69)
  2036  00135A  2416               	addwf	??_fault_detection+1,w,c
  2037  00135C  6ED9               	movwf	fsr2l,c
  2038  00135E  0E00               	movlw	high (_logic_var+69)
  2039  001360  2017               	addwfc	??_fault_detection+2,w,c
  2040  001362  D02B               	goto	L7
  2041  001364                     l438:
  2042                           
  2043                           ;logic.c: 192: else
  2044                           ;logic.c: 193: {
  2045                           ;logic.c: 194: if((red_led_data & 0x80) != 0)
  2046  001364  AE1E               	btfss	fault_detection@red_led_data,7,c
  2047  001366  D015               	goto	l442
  2048                           
  2049                           ;logic.c: 195: logic_var.led_byte[l].bytes |= red_led[j];
  2050  001368  5023               	movf	fault_detection@j,w,c
  2051  00136A  0D01               	mullw	1
  2052  00136C  0E19               	movlw	low _red_led
  2053  00136E  24F3               	addwf	prodl,w,c
  2054  001370  6EF6               	movwf	tblptrl,c
  2055  001372  0E10               	movlw	high _red_led
  2056  001374  20F4               	addwfc	prodh,w,c
  2057  001376  6EF7               	movwf	tblptrh,c
  2058  001378                     	if	0	;There are less than 3 active tblptr bytes
  2059  001378                     	endif
  2060  001378  0008               	tblrd		*
  2061  00137A  CFF5 F015          	movff	tablat,??_fault_detection
  2062  00137E  5020               	movf	fault_detection@l,w,c
  2063  001380  0D01               	mullw	1
  2064  001382  0EA5               	movlw	low (_logic_var+69)
  2065  001384  24F3               	addwf	prodl,w,c
  2066  001386  6ED9               	movwf	fsr2l,c
  2067  001388  0E00               	movlw	high (_logic_var+69)
  2068  00138A  20F4               	addwfc	prodh,w,c
  2069  00138C  6EDA               	movwf	fsr2h,c
  2070  00138E  5015               	movf	??_fault_detection,w,c
  2071  001390  12DF               	iorwf	indf2,f,c
  2072  001392                     l442:
  2073                           
  2074                           ;logic.c: 197: if((green_led_data & 0x80) != 0)
  2075  001392  AE1F               	btfss	fault_detection@green_led_data,7,c
  2076  001394  D015               	goto	l443
  2077                           
  2078                           ;logic.c: 198: logic_var.led_byte[l].bytes |= green_led[j];
  2079  001396  5023               	movf	fault_detection@j,w,c
  2080  001398  0D01               	mullw	1
  2081  00139A  0E11               	movlw	low _green_led
  2082  00139C  24F3               	addwf	prodl,w,c
  2083  00139E  6EF6               	movwf	tblptrl,c
  2084  0013A0  0E10               	movlw	high _green_led
  2085  0013A2  20F4               	addwfc	prodh,w,c
  2086  0013A4  6EF7               	movwf	tblptrh,c
  2087  0013A6                     	if	0	;There are less than 3 active tblptr bytes
  2088  0013A6                     	endif
  2089  0013A6  0008               	tblrd		*
  2090  0013A8  CFF5 F015          	movff	tablat,??_fault_detection
  2091  0013AC  5020               	movf	fault_detection@l,w,c
  2092  0013AE  0D01               	mullw	1
  2093  0013B0  0EA5               	movlw	low (_logic_var+69)
  2094  0013B2  24F3               	addwf	prodl,w,c
  2095  0013B4  6ED9               	movwf	fsr2l,c
  2096  0013B6  0E00               	movlw	high (_logic_var+69)
  2097  0013B8  20F4               	addwfc	prodh,w,c
  2098  0013BA                     L7:
  2099  0013BA  6EDA               	movwf	fsr2h,c
  2100  0013BC  5015               	movf	??_fault_detection,w,c
  2101  0013BE  12DF               	iorwf	indf2,f,c
  2102  0013C0                     l443:
  2103                           
  2104                           ;logic.c: 200: red_led_data <<= 1;
  2105  0013C0  90D8               	bcf	status,0,c
  2106  0013C2  361E               	rlcf	fault_detection@red_led_data,f,c
  2107                           
  2108                           ;logic.c: 201: green_led_data <<= 1;
  2109  0013C4  90D8               	bcf	status,0,c
  2110  0013C6  361F               	rlcf	fault_detection@green_led_data,f,c
  2111  0013C8  2A23               	incf	fault_detection@j,f,c
  2112  0013CA  D78F               	goto	l5306
  2113  0013CC                     u4060:
  2114                           
  2115                           ;logic.c: 202: }
  2116                           ;logic.c: 203: }
  2117                           ;logic.c: 204: }
  2118                           ;logic.c: 273: tmp = logic_var.hold_data[k].bytes;
  2119  0013CC  5022               	movf	fault_detection@k,w,c
  2120  0013CE  0D01               	mullw	1
  2121  0013D0  0E90               	movlw	low (_logic_var+48)
  2122  0013D2  24F3               	addwf	prodl,w,c
  2123  0013D4  6ED9               	movwf	fsr2l,c
  2124  0013D6  0E00               	movlw	high (_logic_var+48)
  2125  0013D8  20F4               	addwfc	prodh,w,c
  2126  0013DA  6EDA               	movwf	fsr2h,c
  2127  0013DC  50DF               	movf	indf2,w,c
  2128  0013DE  6E1C               	movwf	fault_detection@tmp,c
  2129                           
  2130                           ;logic.c: 274: tmp2 = 0;
  2131  0013E0  0E00               	movlw	0
  2132  0013E2  6E1A               	movwf	fault_detection@tmp2,c
  2133                           
  2134                           ;logic.c: 276: for(j=0; j<8; j++)
  2135  0013E4  0E00               	movlw	0
  2136  0013E6  6E23               	movwf	fault_detection@j,c
  2137  0013E8                     l5344:
  2138  0013E8  0E07               	movlw	7
  2139  0013EA  6423               	cpfsgt	fault_detection@j,c
  2140  0013EC  D001               	goto	l444
  2141  0013EE  D01B               	goto	u4090
  2142  0013F0                     l444:
  2143                           
  2144                           ;logic.c: 277: {
  2145                           ;logic.c: 278: if(tmp & onebit_high_tbl[j])
  2146  0013F0  5023               	movf	fault_detection@j,w,c
  2147  0013F2  0D01               	mullw	1
  2148  0013F4  0E29               	movlw	low _onebit_high_tbl
  2149  0013F6  24F3               	addwf	prodl,w,c
  2150  0013F8  6EF6               	movwf	tblptrl,c
  2151  0013FA  0E10               	movlw	high _onebit_high_tbl
  2152  0013FC  20F4               	addwfc	prodh,w,c
  2153  0013FE  6EF7               	movwf	tblptrh,c
  2154  001400                     	if	0	;There are less than 3 active tblptr bytes
  2155  001400                     	endif
  2156  001400  0008               	tblrd		*
  2157  001402  50F5               	movf	tablat,w,c
  2158  001404  141C               	andwf	fault_detection@tmp,w,c
  2159  001406  0900               	iorlw	0
  2160  001408  B4D8               	btfsc	status,2,c
  2161  00140A  D00B               	goto	l446
  2162                           
  2163                           ;logic.c: 279: tmp2 |= rep_rly_tbl[j];
  2164  00140C  5023               	movf	fault_detection@j,w,c
  2165  00140E  0D01               	mullw	1
  2166  001410  0E21               	movlw	low _rep_rly_tbl
  2167  001412  24F3               	addwf	prodl,w,c
  2168  001414  6EF6               	movwf	tblptrl,c
  2169  001416  0E10               	movlw	high _rep_rly_tbl
  2170  001418  20F4               	addwfc	prodh,w,c
  2171  00141A  6EF7               	movwf	tblptrh,c
  2172  00141C                     	if	0	;There are less than 3 active tblptr bytes
  2173  00141C                     	endif
  2174  00141C  0008               	tblrd		*
  2175  00141E  50F5               	movf	tablat,w,c
  2176  001420  121A               	iorwf	fault_detection@tmp2,f,c
  2177  001422                     l446:
  2178  001422  2A23               	incf	fault_detection@j,f,c
  2179  001424  D7E1               	goto	l5344
  2180  001426                     u4090:
  2181                           
  2182                           ;logic.c: 280: }
  2183                           ;logic.c: 281: logic_var.repeat_rly[k].bytes = ~tmp2;
  2184  001426  5022               	movf	fault_detection@k,w,c
  2185  001428  0D01               	mullw	1
  2186  00142A  0EA2               	movlw	low (_logic_var+66)
  2187  00142C  24F3               	addwf	prodl,w,c
  2188  00142E  6ED9               	movwf	fsr2l,c
  2189  001430  0E00               	movlw	high (_logic_var+66)
  2190  001432  20F4               	addwfc	prodh,w,c
  2191  001434  6EDA               	movwf	fsr2h,c
  2192  001436  501A               	movf	fault_detection@tmp2,w,c
  2193  001438  0AFF               	xorlw	255
  2194  00143A  6EDF               	movwf	indf2,c
  2195  00143C  0E04               	movlw	4
  2196  00143E  2621               	addwf	fault_detection@i,f,c
  2197  001440  2A22               	incf	fault_detection@k,f,c
  2198  001442  0E02               	movlw	2
  2199  001444  2620               	addwf	fault_detection@l,f,c
  2200  001446                     l423:
  2201  001446  0E0C               	movlw	12
  2202  001448  6021               	cpfslt	fault_detection@i,c
  2203  00144A  D006               	goto	u4120
  2204  00144C  0E03               	movlw	3
  2205  00144E  6022               	cpfslt	fault_detection@k,c
  2206  001450  D003               	goto	u4120
  2207  001452  0E05               	movlw	5
  2208  001454  6420               	cpfsgt	fault_detection@l,c
  2209  001456  D60A               	goto	l424
  2210  001458                     u4120:
  2211                           
  2212                           ;logic.c: 282: }
  2213                           ;logic.c: 284: logic_var.key_data.bytes = logic_var.new_ip[2] & 0x0f;
  2214  001458  0100               	movlb	0	; () banked
  2215  00145A  5186               	movf	(_logic_var+38)& (0+255),w,b
  2216  00145C  0B0F               	andlw	15
  2217  00145E  6FAB               	movwf	(_logic_var+75)& (0+255),b
  2218                           
  2219                           ; BSR set to: 0
  2220                           ;logic.c: 302: if(PORTDbits.RD0 == 0)
  2221  001460  B083               	btfsc	3971,0,c	;volatile
  2222  001462  D003               	goto	l450
  2223                           
  2224                           ; BSR set to: 0
  2225                           ;logic.c: 303: test_key();
  2226  001464  EC71  F013         	call	_test_key	;wreg free
  2227  001468  D00D               	goto	l456
  2228  00146A                     l450:
  2229                           
  2230                           ; BSR set to: 0
  2231                           ;logic.c: 304: else if(PORTDbits.RD1 == 0)
  2232  00146A  B283               	btfsc	3971,1,c	;volatile
  2233  00146C  D003               	goto	l452
  2234                           
  2235                           ; BSR set to: 0
  2236                           ;logic.c: 305: silence_key();
  2237  00146E  ECDD  F013         	call	_silence_key	;wreg free
  2238  001472  D008               	goto	l456
  2239  001474                     l452:
  2240                           
  2241                           ; BSR set to: 0
  2242                           ;logic.c: 306: else if (PORTDbits.RD2 == 0)
  2243  001474  B483               	btfsc	3971,2,c	;volatile
  2244  001476  D003               	goto	l454
  2245                           
  2246                           ; BSR set to: 0
  2247                           ;logic.c: 307: accept_key();
  2248  001478  ECA9  F012         	call	_accept_key	;wreg free
  2249  00147C  D003               	goto	l456
  2250  00147E                     l454:
  2251                           
  2252                           ; BSR set to: 0
  2253                           ;logic.c: 308: else if (PORTDbits.RD3 == 0)
  2254  00147E  A683               	btfss	3971,3,c	;volatile
  2255                           
  2256                           ; BSR set to: 0
  2257                           ;logic.c: 309: reset_key();
  2258  001480  ECD9  F010         	call	_reset_key	;wreg free
  2259  001484                     l456:
  2260                           
  2261                           ;logic.c: 311: for(i=0,k=0;i<12&&k<3;i+=4,k++)
  2262  001484  0E00               	movlw	0
  2263  001486  6E21               	movwf	fault_detection@i,c
  2264  001488  0E00               	movlw	0
  2265  00148A  6E22               	movwf	fault_detection@k,c
  2266  00148C  D03D               	goto	l457
  2267  00148E                     
  2268                           ;logic.c: 312: {
  2269                           ;logic.c: 313: input = logic_var.silence_hist[k].bytes ^ logic_var.hold_data[k].bytes;
  2270  00148E  5022               	movf	fault_detection@k,w,c
  2271  001490  0D01               	mullw	1
  2272  001492  0E90               	movlw	low (_logic_var+48)
  2273  001494  24F3               	addwf	prodl,w,c
  2274  001496  6ED9               	movwf	fsr2l,c
  2275  001498  0E00               	movlw	high (_logic_var+48)
  2276  00149A  20F4               	addwfc	prodh,w,c
  2277  00149C  6EDA               	movwf	fsr2h,c
  2278  00149E  50DF               	movf	indf2,w,c
  2279  0014A0  6E15               	movwf	??_fault_detection& (0+255),c
  2280  0014A2  5022               	movf	fault_detection@k,w,c
  2281  0014A4  0D01               	mullw	1
  2282  0014A6  0E9C               	movlw	low (_logic_var+60)
  2283  0014A8  24F3               	addwf	prodl,w,c
  2284  0014AA  6ED9               	movwf	fsr2l,c
  2285  0014AC  0E00               	movlw	high (_logic_var+60)
  2286  0014AE  20F4               	addwfc	prodh,w,c
  2287  0014B0  6EDA               	movwf	fsr2h,c
  2288  0014B2  50DF               	movf	indf2,w,c
  2289  0014B4  1815               	xorwf	??_fault_detection,w,c
  2290  0014B6  6E1B               	movwf	fault_detection@input,c
  2291                           
  2292                           ;logic.c: 314: dipsw = logic_var.new_ip[i+1];
  2293  0014B8  5021               	movf	fault_detection@i,w,c
  2294  0014BA  6E15               	movwf	??_fault_detection& (0+255),c
  2295  0014BC  6A16               	clrf	(??_fault_detection+1)& (0+255),c
  2296  0014BE  0E01               	movlw	1
  2297  0014C0  2615               	addwf	??_fault_detection,f,c
  2298  0014C2  0E00               	movlw	0
  2299  0014C4  2216               	addwfc	??_fault_detection+1,f,c
  2300  0014C6  0E84               	movlw	low (_logic_var+36)
  2301  0014C8  2415               	addwf	??_fault_detection,w,c
  2302  0014CA  6ED9               	movwf	fsr2l,c
  2303  0014CC  0E00               	movlw	high (_logic_var+36)
  2304  0014CE  2016               	addwfc	??_fault_detection+1,w,c
  2305  0014D0  6EDA               	movwf	fsr2h,c
  2306  0014D2  50DF               	movf	indf2,w,c
  2307  0014D4  6E19               	movwf	fault_detection@dipsw,c
  2308                           
  2309                           ;logic.c: 315: tmp = input ^ dipsw;
  2310  0014D6  501B               	movf	fault_detection@input,w,c
  2311  0014D8  1819               	xorwf	fault_detection@dipsw,w,c
  2312  0014DA  6E1C               	movwf	fault_detection@tmp,c
  2313                           
  2314                           ;logic.c: 317: if(((~tmp) & input) != 0)
  2315  0014DC  501C               	movf	fault_detection@tmp,w,c
  2316  0014DE  0AFF               	xorlw	255
  2317  0014E0  141B               	andwf	fault_detection@input,w,c
  2318  0014E2  0900               	iorlw	0
  2319  0014E4  B4D8               	btfsc	status,2,c
  2320  0014E6  D004               	goto	l459
  2321                           
  2322                           ;logic.c: 318: {
  2323                           ;logic.c: 319: LATBbits.LATB4 = 0;
  2324  0014E8  988A               	bcf	3978,4,c	;volatile
  2325                           
  2326                           ;logic.c: 320: LATAbits.LATA0 = 0;
  2327  0014EA  9089               	bcf	3977,0,c	;volatile
  2328                           
  2329                           ;logic.c: 321: logic_var.rly_status |= 0x01;
  2330  0014EC  0100               	movlb	0	; () banked
  2331  0014EE  81B0               	bsf	(_logic_var+80)& (0+255),0,b
  2332  0014F0                     l459:
  2333                           
  2334                           ;logic.c: 323: }
  2335                           ;logic.c: 324: if(((tmp) & input) != 0)
  2336                           
  2337                           ; BSR set to: 0
  2338  0014F0  501C               	movf	fault_detection@tmp,w,c
  2339  0014F2  141B               	andwf	fault_detection@input,w,c
  2340  0014F4  0900               	iorlw	0
  2341  0014F6  B4D8               	btfsc	status,2,c
  2342  0014F8  D004               	goto	l460
  2343                           
  2344                           ;logic.c: 325: {
  2345                           ;logic.c: 326: LATBbits.LATB4 = 0;
  2346  0014FA  988A               	bcf	3978,4,c	;volatile
  2347                           
  2348                           ;logic.c: 327: LATBbits.LATB5 = 0;
  2349  0014FC  9A8A               	bcf	3978,5,c	;volatile
  2350                           
  2351                           ;logic.c: 328: logic_var.rly_status |= 0x02;
  2352  0014FE  0100               	movlb	0	; () banked
  2353  001500  83B0               	bsf	(_logic_var+80)& (0+255),1,b
  2354  001502                     l460:
  2355                           
  2356                           ; BSR set to: 0
  2357  001502  0E04               	movlw	4
  2358  001504  2621               	addwf	fault_detection@i,f,c
  2359  001506  2A22               	incf	fault_detection@k,f,c
  2360  001508                     l457:
  2361  001508  0E0C               	movlw	12
  2362  00150A  6021               	cpfslt	fault_detection@i,c
  2363  00150C  0012               	return	
  2364  00150E  0E02               	movlw	2
  2365  001510  6422               	cpfsgt	fault_detection@k,c
  2366  001512  D7BD               	goto	l458
  2367  001514  0012               	return	
  2368  001516                     __end_of_fault_detection:
  2369                           	opt stack 0
  2370                           tblptru	equ	0xFF8
  2371                           tblptrh	equ	0xFF7
  2372                           tblptrl	equ	0xFF6
  2373                           tablat	equ	0xFF5
  2374                           prodh	equ	0xFF4
  2375                           prodl	equ	0xFF3
  2376                           intcon	equ	0xFF2
  2377                           postinc0	equ	0xFEE
  2378                           wreg	equ	0xFE8
  2379                           indf1	equ	0xFE7
  2380                           fsr1h	equ	0xFE2
  2381                           fsr1l	equ	0xFE1
  2382                           indf2	equ	0xFDF
  2383                           fsr2h	equ	0xFDA
  2384                           fsr2l	equ	0xFD9
  2385                           status	equ	0xFD8
  2386                           
  2387 ;; *************** function _delay_ms *****************
  2388 ;; Defined at:
  2389 ;;		line 238 in file "main.c"
  2390 ;; Parameters:    Size  Location     Type
  2391 ;;  ms              2   45[BANK0 ] unsigned int 
  2392 ;; Auto vars:     Size  Location     Type
  2393 ;;		None
  2394 ;; Return value:  Size  Location     Type
  2395 ;;                  1    wreg      void 
  2396 ;; Registers used:
  2397 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2398 ;; Tracked objects:
  2399 ;;		On entry : 0/0
  2400 ;;		On exit  : 0/0
  2401 ;;		Unchanged: 0/0
  2402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2403 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2406 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2407 ;;Total ram usage:        2 bytes
  2408 ;; Hardware stack levels used:    1
  2409 ;; Hardware stack levels required when called:   10
  2410 ;; This function calls:
  2411 ;;		_basems_wait
  2412 ;; This function is called by:
  2413 ;;		_main
  2414 ;; This function uses a non-reentrant model
  2415 ;;
  2416                           
  2417                           	psect	text7
  2418  0029B0                     __ptext7:
  2419                           	opt stack 0
  2420  0029B0                     _delay_ms:
  2421                           	opt stack 20
  2422                           
  2423                           ;main.c: 240: while(ms > 0)
  2424                           
  2425                           ;incstack = 0
  2426  0029B0  D006               	goto	l191
  2427  0029B2                     
  2428                           ;main.c: 241: {
  2429                           ;main.c: 242: ms--;
  2430  0029B2  0100               	movlb	0	; () banked
  2431  0029B4  07F1               	decf	delay_ms@ms& (0+255),f,b
  2432  0029B6  A0D8               	btfss	status,0,c
  2433  0029B8  07F2               	decf	(delay_ms@ms+1)& (0+255),f,b
  2434                           
  2435                           ; BSR set to: 0
  2436                           ;main.c: 243: basems_wait();
  2437  0029BA  EC94  F010         	call	_basems_wait	;wreg free
  2438  0029BE                     l191:
  2439  0029BE  0100               	movlb	0	; () banked
  2440  0029C0  51F1               	movf	delay_ms@ms& (0+255),w,b
  2441  0029C2  11F2               	iorwf	(delay_ms@ms+1)& (0+255),w,b
  2442  0029C4  B4D8               	btfsc	status,2,c
  2443  0029C6  0012               	return	
  2444  0029C8  D7F4               	goto	l192
  2445  0029CA                     __end_of_delay_ms:
  2446                           	opt stack 0
  2447                           tblptru	equ	0xFF8
  2448                           tblptrh	equ	0xFF7
  2449                           tblptrl	equ	0xFF6
  2450                           tablat	equ	0xFF5
  2451                           prodh	equ	0xFF4
  2452                           prodl	equ	0xFF3
  2453                           intcon	equ	0xFF2
  2454                           postinc0	equ	0xFEE
  2455                           wreg	equ	0xFE8
  2456                           indf1	equ	0xFE7
  2457                           fsr1h	equ	0xFE2
  2458                           fsr1l	equ	0xFE1
  2459                           indf2	equ	0xFDF
  2460                           fsr2h	equ	0xFDA
  2461                           fsr2l	equ	0xFD9
  2462                           status	equ	0xFD8
  2463                           
  2464 ;; *************** function _basems_wait *****************
  2465 ;; Defined at:
  2466 ;;		line 256 in file "main.c"
  2467 ;; Parameters:    Size  Location     Type
  2468 ;;		None
  2469 ;; Auto vars:     Size  Location     Type
  2470 ;;		None
  2471 ;; Return value:  Size  Location     Type
  2472 ;;                  1    wreg      void 
  2473 ;; Registers used:
  2474 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2475 ;; Tracked objects:
  2476 ;;		On entry : 0/0
  2477 ;;		On exit  : 0/0
  2478 ;;		Unchanged: 0/0
  2479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2484 ;;Total ram usage:        0 bytes
  2485 ;; Hardware stack levels used:    1
  2486 ;; Hardware stack levels required when called:    9
  2487 ;; This function calls:
  2488 ;;		_decode_mbus_frame
  2489 ;;		_dicing_slicing
  2490 ;;		_noise_rejection_off
  2491 ;;		_poll_rtc
  2492 ;;		_read_165_dip
  2493 ;;		_read_165_fault
  2494 ;;		_send_to_master
  2495 ;;		_update_595
  2496 ;;		_update_repeat_relay
  2497 ;; This function is called by:
  2498 ;;		_delay_ms
  2499 ;;		_main
  2500 ;; This function uses a non-reentrant model
  2501 ;;
  2502                           
  2503                           	psect	text8
  2504  002128                     __ptext8:
  2505                           	opt stack 0
  2506  002128                     _basems_wait:
  2507                           	opt stack 20
  2508                           
  2509                           ;main.c: 259: {
  2510                           ;main.c: 260: gen_var.basems_flg = 0;
  2511                           
  2512                           ; BSR set to: 0
  2513                           ;incstack = 0
  2514                           ;main.c: 258: while(1)
  2515  002128  0E00               	movlw	0
  2516  00212A  6E36               	movwf	_gen_var,c
  2517  00212C  5036               	movf	_gen_var,w,c
  2518  00212E  B4D8               	btfsc	status,2,c
  2519  002130  D7FD               	goto	l199
  2520                           
  2521                           ;main.c: 262: gen_var.basems_flg = 0;
  2522  002132  0E00               	movlw	0
  2523  002134  6E36               	movwf	_gen_var,c
  2524                           
  2525                           ;main.c: 263: update_595();
  2526  002136  EC79  F00E         	call	_update_595	;wreg free
  2527                           
  2528                           ;main.c: 264: gen_var.isr_cntr++;
  2529  00213A  2A39               	incf	_gen_var+3,f,c
  2530                           
  2531                           ;main.c: 265: switch(gen_var.isr_cntr)
  2532  00213C  D01D               	goto	l201
  2533  00213E  EC79  F00E         	call	_update_595	;wreg free
  2534                           
  2535                           ;main.c: 268: break;
  2536  002142  D7F2               	goto	_basems_wait
  2537  002144  EC12  F012         	call	_read_165_fault	;wreg free
  2538                           
  2539                           ;main.c: 271: break;
  2540  002148  D7EF               	goto	_basems_wait
  2541  00214A  EC17  F00E         	call	_read_165_dip	;wreg free
  2542                           
  2543                           ;main.c: 274: break;
  2544  00214E  D7EC               	goto	_basems_wait
  2545  002150  ECBF  F00F         	call	_dicing_slicing	;wreg free
  2546                           
  2547                           ;main.c: 277: noise_rejection_off();
  2548  002154  EC07  F010         	call	_noise_rejection_off	;wreg free
  2549                           
  2550                           ;main.c: 278: break;
  2551  002158  D7E7               	goto	_basems_wait
  2552  00215A  ECDA  F00E         	call	_update_repeat_relay	;wreg free
  2553                           
  2554                           ;main.c: 281: break;
  2555  00215E  D7E4               	goto	_basems_wait
  2556  002160  EC4E  F010         	call	_poll_rtc	;wreg free
  2557                           
  2558                           ;main.c: 284: break;
  2559  002164  D7E1               	goto	_basems_wait
  2560  002166  EC35  F00C         	call	_decode_mbus_frame	;wreg free
  2561                           
  2562                           ;main.c: 287: break;
  2563  00216A  D7DE               	goto	_basems_wait
  2564  00216C  EC76  F00F         	call	_send_to_master	;wreg free
  2565                           
  2566                           ;main.c: 290: break;
  2567  002170  D7DB               	goto	_basems_wait
  2568  002172  0E00               	movlw	0
  2569  002174  6E39               	movwf	_gen_var+3,c
  2570                           
  2571                           ;main.c: 293: return;
  2572  002176  0012               	return	
  2573  002178                     l201:
  2574  002178  5039               	movf	_gen_var+3,w,c
  2575                           
  2576                           ; Switch size 1, requested type "space"
  2577                           ; Number of cases is 9, Range of values is 1 to 9
  2578                           ; switch strategies available:
  2579                           ; Name         Instructions Cycles
  2580                           ; simple_byte           28    15 (average)
  2581                           ;	Chosen strategy is simple_byte
  2582  00217A  0A01               	xorlw	1	; case 1
  2583  00217C  B4D8               	btfsc	status,2,c
  2584  00217E  D7DF               	goto	l202
  2585  002180  0A03               	xorlw	3	; case 2
  2586  002182  B4D8               	btfsc	status,2,c
  2587  002184  D7DF               	goto	l204
  2588  002186  0A01               	xorlw	1	; case 3
  2589  002188  B4D8               	btfsc	status,2,c
  2590  00218A  D7DF               	goto	l205
  2591  00218C  0A07               	xorlw	7	; case 4
  2592  00218E  B4D8               	btfsc	status,2,c
  2593  002190  D7DF               	goto	l206
  2594  002192  0A01               	xorlw	1	; case 5
  2595  002194  B4D8               	btfsc	status,2,c
  2596  002196  D7E1               	goto	l207
  2597  002198  0A03               	xorlw	3	; case 6
  2598  00219A  B4D8               	btfsc	status,2,c
  2599  00219C  D7E1               	goto	l208
  2600  00219E  0A01               	xorlw	1	; case 7
  2601  0021A0  B4D8               	btfsc	status,2,c
  2602  0021A2  D7E1               	goto	l209
  2603  0021A4  0A0F               	xorlw	15	; case 8
  2604  0021A6  B4D8               	btfsc	status,2,c
  2605  0021A8  D7E1               	goto	l210
  2606  0021AA  0A01               	xorlw	1	; case 9
  2607  0021AC  B4D8               	btfsc	status,2,c
  2608  0021AE  D7E1               	goto	l211
  2609  0021B0  D7BB               	goto	_basems_wait
  2610  0021B2                     __end_of_basems_wait:
  2611                           	opt stack 0
  2612                           tblptru	equ	0xFF8
  2613                           tblptrh	equ	0xFF7
  2614                           tblptrl	equ	0xFF6
  2615                           tablat	equ	0xFF5
  2616                           prodh	equ	0xFF4
  2617                           prodl	equ	0xFF3
  2618                           intcon	equ	0xFF2
  2619                           postinc0	equ	0xFEE
  2620                           wreg	equ	0xFE8
  2621                           indf1	equ	0xFE7
  2622                           fsr1h	equ	0xFE2
  2623                           fsr1l	equ	0xFE1
  2624                           indf2	equ	0xFDF
  2625                           fsr2h	equ	0xFDA
  2626                           fsr2l	equ	0xFD9
  2627                           status	equ	0xFD8
  2628                           
  2629 ;; *************** function _update_repeat_relay *****************
  2630 ;; Defined at:
  2631 ;;		line 84 in file "hw_layer.c"
  2632 ;; Parameters:    Size  Location     Type
  2633 ;;		None
  2634 ;; Auto vars:     Size  Location     Type
  2635 ;;  relay_buffer    3   21[COMRAM] unsigned char [3]
  2636 ;;  j               1   26[COMRAM] unsigned char 
  2637 ;;  tmp             1   25[COMRAM] unsigned char 
  2638 ;;  i               1   24[COMRAM] unsigned char 
  2639 ;; Return value:  Size  Location     Type
  2640 ;;                  1    wreg      void 
  2641 ;; Registers used:
  2642 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2643 ;; Tracked objects:
  2644 ;;		On entry : 0/0
  2645 ;;		On exit  : 0/0
  2646 ;;		Unchanged: 0/0
  2647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2649 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2650 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2651 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2652 ;;Total ram usage:        8 bytes
  2653 ;; Hardware stack levels used:    1
  2654 ;; Hardware stack levels required when called:    2
  2655 ;; This function calls:
  2656 ;;		Nothing
  2657 ;; This function is called by:
  2658 ;;		_basems_wait
  2659 ;; This function uses a non-reentrant model
  2660 ;;
  2661                           
  2662                           	psect	text9
  2663  001DB4                     __ptext9:
  2664                           	opt stack 0
  2665  001DB4                     _update_repeat_relay:
  2666                           	opt stack 26
  2667                           
  2668                           ;hw_layer.c: 87: unsigned char i,j,tmp;
  2669                           ;hw_layer.c: 88: unsigned char relay_buffer_595[3];
  2670                           ;hw_layer.c: 89: for(j = 0; j < 3; j++)
  2671                           
  2672                           ;incstack = 0
  2673  001DB4  0E00               	movlw	0
  2674  001DB6  6E1B               	movwf	update_repeat_relay@j,c
  2675  001DB8                     l3750:
  2676  001DB8  0E02               	movlw	2
  2677  001DBA  641B               	cpfsgt	update_repeat_relay@j,c
  2678  001DBC  D001               	goto	l265
  2679  001DBE  D042               	goto	u2460
  2680  001DC0                     l265:
  2681                           
  2682                           ;hw_layer.c: 90: {
  2683                           ;hw_layer.c: 92: relay_buffer_595[j] = logic_var.repeat_rly[2 - j].bytes;
  2684  001DC0  501B               	movf	update_repeat_relay@j,w,c
  2685  001DC2  6E14               	movwf	??_update_repeat_relay& (0+255),c
  2686  001DC4  6A15               	clrf	(??_update_repeat_relay+1)& (0+255),c
  2687  001DC6  1E14               	comf	??_update_repeat_relay,f,c
  2688  001DC8  1E15               	comf	??_update_repeat_relay+1,f,c
  2689  001DCA  4A14               	infsnz	??_update_repeat_relay,f,c
  2690  001DCC  2A15               	incf	??_update_repeat_relay+1,f,c
  2691  001DCE  0E02               	movlw	2
  2692  001DD0  2614               	addwf	??_update_repeat_relay,f,c
  2693  001DD2  0E00               	movlw	0
  2694  001DD4  2215               	addwfc	??_update_repeat_relay+1,f,c
  2695  001DD6  0EA2               	movlw	low (_logic_var+66)
  2696  001DD8  2414               	addwf	??_update_repeat_relay,w,c
  2697  001DDA  6ED9               	movwf	fsr2l,c
  2698  001DDC  0E00               	movlw	high (_logic_var+66)
  2699  001DDE  2015               	addwfc	??_update_repeat_relay+1,w,c
  2700  001DE0  6EDA               	movwf	fsr2h,c
  2701  001DE2  501B               	movf	update_repeat_relay@j,w,c
  2702  001DE4  0D01               	mullw	1
  2703  001DE6  0E16               	movlw	low update_repeat_relay@relay_buffer_595
  2704  001DE8  24F3               	addwf	prodl,w,c
  2705  001DEA  6EE1               	movwf	fsr1l,c
  2706  001DEC  0E00               	movlw	high update_repeat_relay@relay_buffer_595
  2707  001DEE  20F4               	addwfc	prodh,w,c
  2708  001DF0  6EE2               	movwf	fsr1h,c
  2709  001DF2  CFDF FFE7          	movff	indf2,indf1
  2710                           
  2711                           ;hw_layer.c: 93: tmp = relay_buffer_595[j];
  2712  001DF6  501B               	movf	update_repeat_relay@j,w,c
  2713  001DF8  0D01               	mullw	1
  2714  001DFA  0E16               	movlw	low update_repeat_relay@relay_buffer_595
  2715  001DFC  24F3               	addwf	prodl,w,c
  2716  001DFE  6ED9               	movwf	fsr2l,c
  2717  001E00  0E00               	movlw	high update_repeat_relay@relay_buffer_595
  2718  001E02  20F4               	addwfc	prodh,w,c
  2719  001E04  6EDA               	movwf	fsr2h,c
  2720  001E06  50DF               	movf	indf2,w,c
  2721  001E08  6E1A               	movwf	update_repeat_relay@tmp,c
  2722                           
  2723                           ;hw_layer.c: 95: LATAbits.LATA6 = 0;
  2724  001E0A  9C89               	bcf	3977,6,c	;volatile
  2725  001E0C  F000               	nop		;# 
  2726  001E0E  F000               	nop		;# 
  2727                           
  2728                           ;hw_layer.c: 99: for(i=0; i<8; i++)
  2729  001E10  0E00               	movlw	0
  2730  001E12  6E19               	movwf	update_repeat_relay@i,c
  2731  001E14                     l3762:
  2732  001E14  0E07               	movlw	7
  2733  001E16  6419               	cpfsgt	update_repeat_relay@i,c
  2734  001E18  D001               	goto	l267
  2735  001E1A  D012               	goto	u2450
  2736  001E1C                     l267:
  2737                           
  2738                           ;hw_layer.c: 100: {
  2739                           ;hw_layer.c: 101: if((tmp & 0x80) == 0x80)
  2740  001E1C  AE1A               	btfss	update_repeat_relay@tmp,7,c
  2741  001E1E  D002               	goto	l269
  2742                           
  2743                           ;hw_layer.c: 103: LATEbits.LATE2 = 1;
  2744  001E20  848D               	bsf	3981,2,c	;volatile
  2745  001E22  D001               	goto	l270
  2746  001E24                     l269:
  2747                           
  2748                           ;hw_layer.c: 104: else
  2749                           ;hw_layer.c: 105: LATEbits.LATE2 = 0;
  2750  001E24  948D               	bcf	3981,2,c	;volatile
  2751  001E26                     l270:
  2752                           
  2753                           ;hw_layer.c: 107: LATAbits.LATA6 = 1;
  2754  001E26  8C89               	bsf	3977,6,c	;volatile
  2755  001E28  F000               	nop		;# 
  2756  001E2A  F000               	nop		;# 
  2757                           
  2758                           ;hw_layer.c: 110: LATAbits.LATA6 = 0;
  2759  001E2C  9C89               	bcf	3977,6,c	;volatile
  2760  001E2E  F000               	nop		;# 
  2761  001E30  F000               	nop		;# 
  2762                           
  2763                           ;hw_layer.c: 113: tmp = tmp << 1;
  2764  001E32  501A               	movf	update_repeat_relay@tmp,w,c
  2765  001E34  241A               	addwf	update_repeat_relay@tmp,w,c
  2766  001E36  6E1A               	movwf	update_repeat_relay@tmp,c
  2767  001E38  F000               	nop		;# 
  2768  001E3A  F000               	nop		;# 
  2769  001E3C  2A19               	incf	update_repeat_relay@i,f,c
  2770  001E3E  D7EA               	goto	l3762
  2771  001E40                     u2450:
  2772  001E40  2A1B               	incf	update_repeat_relay@j,f,c
  2773  001E42  D7BA               	goto	l3750
  2774  001E44                     u2460:
  2775                           
  2776                           ;hw_layer.c: 116: }
  2777                           ;hw_layer.c: 117: }
  2778                           ;hw_layer.c: 119: LATAbits.LATA7 = 1;
  2779  001E44  8E89               	bsf	3977,7,c	;volatile
  2780  001E46  F000               	nop		;# 
  2781  001E48  F000               	nop		;# 
  2782                           
  2783                           ;hw_layer.c: 123: LATAbits.LATA7 = 0;
  2784  001E4A  9E89               	bcf	3977,7,c	;volatile
  2785  001E4C  F000               	nop		;# 
  2786  001E4E  F000               	nop		;# 
  2787  001E50  0012               	return		;funcret
  2788  001E52                     __end_of_update_repeat_relay:
  2789                           	opt stack 0
  2790                           tblptru	equ	0xFF8
  2791                           tblptrh	equ	0xFF7
  2792                           tblptrl	equ	0xFF6
  2793                           tablat	equ	0xFF5
  2794                           prodh	equ	0xFF4
  2795                           prodl	equ	0xFF3
  2796                           intcon	equ	0xFF2
  2797                           postinc0	equ	0xFEE
  2798                           wreg	equ	0xFE8
  2799                           indf1	equ	0xFE7
  2800                           fsr1h	equ	0xFE2
  2801                           fsr1l	equ	0xFE1
  2802                           indf2	equ	0xFDF
  2803                           fsr2h	equ	0xFDA
  2804                           fsr2l	equ	0xFD9
  2805                           status	equ	0xFD8
  2806                           
  2807 ;; *************** function _update_595 *****************
  2808 ;; Defined at:
  2809 ;;		line 14 in file "hw_layer.c"
  2810 ;; Parameters:    Size  Location     Type
  2811 ;;		None
  2812 ;; Auto vars:     Size  Location     Type
  2813 ;;  led_buffer_5    6   21[COMRAM] unsigned char [6]
  2814 ;;  j               1   29[COMRAM] unsigned char 
  2815 ;;  i               1   28[COMRAM] unsigned char 
  2816 ;;  tmp             1   27[COMRAM] unsigned char 
  2817 ;;  tmp2            1    0        unsigned char 
  2818 ;; Return value:  Size  Location     Type
  2819 ;;                  1    wreg      void 
  2820 ;; Registers used:
  2821 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  2822 ;; Tracked objects:
  2823 ;;		On entry : 0/0
  2824 ;;		On exit  : 0/0
  2825 ;;		Unchanged: 0/0
  2826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2828 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2829 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2830 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2831 ;;Total ram usage:       11 bytes
  2832 ;; Hardware stack levels used:    1
  2833 ;; Hardware stack levels required when called:    2
  2834 ;; This function calls:
  2835 ;;		Nothing
  2836 ;; This function is called by:
  2837 ;;		_basems_wait
  2838 ;; This function uses a non-reentrant model
  2839 ;;
  2840                           
  2841                           	psect	text10
  2842  001CF2                     __ptext10:
  2843                           	opt stack 0
  2844  001CF2                     _update_595:
  2845                           	opt stack 26
  2846                           
  2847                           ;hw_layer.c: 16: unsigned char i,j,tmp,tmp2;
  2848                           ;hw_layer.c: 17: unsigned char led_buffer_595[6] ;
  2849                           ;hw_layer.c: 19: for(j=0; j<6; j++)
  2850                           
  2851                           ;incstack = 0
  2852  001CF2  0E00               	movlw	0
  2853  001CF4  6E1E               	movwf	update_595@j,c
  2854  001CF6                     l3566:
  2855  001CF6  0E05               	movlw	5
  2856  001CF8  641E               	cpfsgt	update_595@j,c
  2857  001CFA  D001               	goto	l256
  2858  001CFC  D054               	goto	u2160
  2859  001CFE                     l256:
  2860                           
  2861                           ;hw_layer.c: 20: {
  2862                           ;hw_layer.c: 28: led_buffer_595[j] = logic_var.led_byte[5-j].bytes;
  2863  001CFE  501E               	movf	update_595@j,w,c
  2864  001D00  6E14               	movwf	??_update_595& (0+255),c
  2865  001D02  6A15               	clrf	(??_update_595+1)& (0+255),c
  2866  001D04  1E14               	comf	??_update_595,f,c
  2867  001D06  1E15               	comf	??_update_595+1,f,c
  2868  001D08  4A14               	infsnz	??_update_595,f,c
  2869  001D0A  2A15               	incf	??_update_595+1,f,c
  2870  001D0C  0E05               	movlw	5
  2871  001D0E  2614               	addwf	??_update_595,f,c
  2872  001D10  0E00               	movlw	0
  2873  001D12  2215               	addwfc	??_update_595+1,f,c
  2874  001D14  0EA5               	movlw	low (_logic_var+69)
  2875  001D16  2414               	addwf	??_update_595,w,c
  2876  001D18  6ED9               	movwf	fsr2l,c
  2877  001D1A  0E00               	movlw	high (_logic_var+69)
  2878  001D1C  2015               	addwfc	??_update_595+1,w,c
  2879  001D1E  6EDA               	movwf	fsr2h,c
  2880  001D20  501E               	movf	update_595@j,w,c
  2881  001D22  0D01               	mullw	1
  2882  001D24  0E16               	movlw	low update_595@led_buffer_595
  2883  001D26  24F3               	addwf	prodl,w,c
  2884  001D28  6EE1               	movwf	fsr1l,c
  2885  001D2A  0E00               	movlw	high update_595@led_buffer_595
  2886  001D2C  20F4               	addwfc	prodh,w,c
  2887  001D2E  6EE2               	movwf	fsr1h,c
  2888  001D30  CFDF FFE7          	movff	indf2,indf1
  2889                           
  2890                           ;hw_layer.c: 29: tmp = led_buffer_595[j];
  2891  001D34  501E               	movf	update_595@j,w,c
  2892  001D36  0D01               	mullw	1
  2893  001D38  0E16               	movlw	low update_595@led_buffer_595
  2894  001D3A  24F3               	addwf	prodl,w,c
  2895  001D3C  6ED9               	movwf	fsr2l,c
  2896  001D3E  0E00               	movlw	high update_595@led_buffer_595
  2897  001D40  20F4               	addwfc	prodh,w,c
  2898  001D42  6EDA               	movwf	fsr2h,c
  2899  001D44  50DF               	movf	indf2,w,c
  2900  001D46  6E1C               	movwf	update_595@tmp,c
  2901                           
  2902                           ;hw_layer.c: 31: LATCbits.LATC0 = 0;
  2903  001D48  908B               	bcf	3979,0,c	;volatile
  2904  001D4A  F000               	nop		;# 
  2905  001D4C  F000               	nop		;# 
  2906                           
  2907                           ;hw_layer.c: 36: for(i=0; i<8; i++)
  2908  001D4E  0E00               	movlw	0
  2909  001D50  6E1D               	movwf	update_595@i,c
  2910  001D52                     l3578:
  2911  001D52  0E07               	movlw	7
  2912  001D54  641D               	cpfsgt	update_595@i,c
  2913  001D56  D001               	goto	l258
  2914  001D58  D024               	goto	u2150
  2915  001D5A                     l258:
  2916                           
  2917                           ;hw_layer.c: 37: {
  2918                           ;hw_layer.c: 55: if((tmp & onebit_high_tbl2[i])== onebit_high_tbl2[i])
  2919  001D5A  501D               	movf	update_595@i,w,c
  2920  001D5C  0D01               	mullw	1
  2921  001D5E  0E31               	movlw	low _onebit_high_tbl2
  2922  001D60  24F3               	addwf	prodl,w,c
  2923  001D62  6EF6               	movwf	tblptrl,c
  2924  001D64  0E10               	movlw	high _onebit_high_tbl2
  2925  001D66  20F4               	addwfc	prodh,w,c
  2926  001D68  6EF7               	movwf	tblptrh,c
  2927  001D6A                     	if	0	;There are less than 3 active tblptr bytes
  2928  001D6A                     	endif
  2929  001D6A  0008               	tblrd		*
  2930  001D6C  50F5               	movf	tablat,w,c
  2931  001D6E  141C               	andwf	update_595@tmp,w,c
  2932  001D70  6E14               	movwf	??_update_595& (0+255),c
  2933  001D72  501D               	movf	update_595@i,w,c
  2934  001D74  0D01               	mullw	1
  2935  001D76  0E31               	movlw	low _onebit_high_tbl2
  2936  001D78  24F3               	addwf	prodl,w,c
  2937  001D7A  6EF6               	movwf	tblptrl,c
  2938  001D7C  0E10               	movlw	high _onebit_high_tbl2
  2939  001D7E  20F4               	addwfc	prodh,w,c
  2940  001D80  6EF7               	movwf	tblptrh,c
  2941  001D82                     	if	0	;There are less than 3 active tblptr bytes
  2942  001D82                     	endif
  2943  001D82  0008               	tblrd		*
  2944  001D84  50F5               	movf	tablat,w,c
  2945  001D86  1814               	xorwf	??_update_595,w,c
  2946  001D88  A4D8               	btfss	status,2,c
  2947  001D8A  D002               	goto	l260
  2948                           
  2949                           ;hw_layer.c: 56: LATCbits.LATC2 = 1;
  2950  001D8C  848B               	bsf	3979,2,c	;volatile
  2951  001D8E  D001               	goto	l261
  2952  001D90                     l260:
  2953                           
  2954                           ;hw_layer.c: 57: else
  2955                           ;hw_layer.c: 58: LATCbits.LATC2 = 0;
  2956  001D90  948B               	bcf	3979,2,c	;volatile
  2957  001D92                     l261:
  2958                           
  2959                           ;hw_layer.c: 61: LATCbits.LATC0 = 1;
  2960  001D92  808B               	bsf	3979,0,c	;volatile
  2961  001D94  F000               	nop		;# 
  2962  001D96  F000               	nop		;# 
  2963                           
  2964                           ;hw_layer.c: 65: LATCbits.LATC0 = 0;
  2965  001D98  908B               	bcf	3979,0,c	;volatile
  2966  001D9A  F000               	nop		;# 
  2967  001D9C  F000               	nop		;# 
  2968  001D9E  2A1D               	incf	update_595@i,f,c
  2969  001DA0  D7D8               	goto	l3578
  2970  001DA2                     u2150:
  2971  001DA2  2A1E               	incf	update_595@j,f,c
  2972  001DA4  D7A8               	goto	l3566
  2973  001DA6                     u2160:
  2974                           
  2975                           ;hw_layer.c: 68: }
  2976                           ;hw_layer.c: 69: }
  2977                           ;hw_layer.c: 72: LATCbits.LATC1 = 1;
  2978  001DA6  828B               	bsf	3979,1,c	;volatile
  2979  001DA8  F000               	nop		;# 
  2980  001DAA  F000               	nop		;# 
  2981                           
  2982                           ;hw_layer.c: 77: LATCbits.LATC1 = 0;
  2983  001DAC  928B               	bcf	3979,1,c	;volatile
  2984  001DAE  F000               	nop		;# 
  2985  001DB0  F000               	nop		;# 
  2986  001DB2  0012               	return		;funcret
  2987  001DB4                     __end_of_update_595:
  2988                           	opt stack 0
  2989                           tblptru	equ	0xFF8
  2990                           tblptrh	equ	0xFF7
  2991                           tblptrl	equ	0xFF6
  2992                           tablat	equ	0xFF5
  2993                           prodh	equ	0xFF4
  2994                           prodl	equ	0xFF3
  2995                           intcon	equ	0xFF2
  2996                           postinc0	equ	0xFEE
  2997                           wreg	equ	0xFE8
  2998                           indf1	equ	0xFE7
  2999                           fsr1h	equ	0xFE2
  3000                           fsr1l	equ	0xFE1
  3001                           indf2	equ	0xFDF
  3002                           fsr2h	equ	0xFDA
  3003                           fsr2l	equ	0xFD9
  3004                           status	equ	0xFD8
  3005                           
  3006 ;; *************** function _send_to_master *****************
  3007 ;; Defined at:
  3008 ;;		line 280 in file "modbus.c"
  3009 ;; Parameters:    Size  Location     Type
  3010 ;;		None
  3011 ;; Auto vars:     Size  Location     Type
  3012 ;;  i               2   23[COMRAM] unsigned int 
  3013 ;; Return value:  Size  Location     Type
  3014 ;;                  1    wreg      void 
  3015 ;; Registers used:
  3016 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3017 ;; Tracked objects:
  3018 ;;		On entry : 0/0
  3019 ;;		On exit  : 0/0
  3020 ;;		Unchanged: 0/0
  3021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3023 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3024 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3025 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3026 ;;Total ram usage:        3 bytes
  3027 ;; Hardware stack levels used:    1
  3028 ;; Hardware stack levels required when called:    3
  3029 ;; This function calls:
  3030 ;;		_calculate_parity
  3031 ;; This function is called by:
  3032 ;;		_basems_wait
  3033 ;; This function uses a non-reentrant model
  3034 ;;
  3035                           
  3036                           	psect	text11
  3037  001EEC                     __ptext11:
  3038                           	opt stack 0
  3039  001EEC                     _send_to_master:
  3040                           	opt stack 25
  3041                           
  3042                           ;modbus.c: 282: unsigned int i = 0;
  3043                           
  3044                           ;incstack = 0
  3045  001EEC  0E00               	movlw	0
  3046  001EEE  6E19               	movwf	send_to_master@i+1,c
  3047  001EF0  0E00               	movlw	0
  3048  001EF2  6E18               	movwf	send_to_master@i,c
  3049                           
  3050                           ;modbus.c: 284: if(mbus_var.frame_send_flag == 0)return;
  3051  001EF4  0101               	movlb	1	; () banked
  3052  001EF6  51CC               	movf	(_mbus_var+104)& (0+255),w,b
  3053  001EF8  B4D8               	btfsc	status,2,c
  3054  001EFA  0012               	return	
  3055                           
  3056                           ; BSR set to: 1
  3057                           ;modbus.c: 286: if(mbus_var.send_ptr > mbus_var.send_frame_cmpr)
  3058                           
  3059                           ; BSR set to: 1
  3060                           
  3061                           ; BSR set to: 1
  3062  001EFC  51CD               	movf	(_mbus_var+105)& (0+255),w,b
  3063  001EFE  5DC9               	subwf	(_mbus_var+101)& (0+255),w,b
  3064  001F00  B0D8               	btfsc	status,0,c
  3065  001F02  D009               	goto	l686
  3066                           
  3067                           ; BSR set to: 1
  3068                           ;modbus.c: 287: {
  3069                           ;modbus.c: 288: mbus_var.send_frame_cmpr = 0;
  3070  001F04  0E00               	movlw	0
  3071  001F06  6FC9               	movwf	(_mbus_var+101)& (0+255),b
  3072                           
  3073                           ;modbus.c: 289: mbus_var.frame_send_flag = 0;
  3074  001F08  0E00               	movlw	0
  3075  001F0A  6FCC               	movwf	(_mbus_var+104)& (0+255),b
  3076                           
  3077                           ;modbus.c: 290: mbus_var.send_ptr = 0;
  3078  001F0C  0E00               	movlw	0
  3079  001F0E  6FCD               	movwf	(_mbus_var+105)& (0+255),b
  3080                           
  3081                           ;modbus.c: 291: mbus_var.ptr = 0;
  3082  001F10  0E00               	movlw	0
  3083  001F12  6FCE               	movwf	(_mbus_var+106)& (0+255),b
  3084                           
  3085                           ; BSR set to: 1
  3086                           ;modbus.c: 292: return;
  3087  001F14  0012               	return	
  3088  001F16                     l686:
  3089                           
  3090                           ; BSR set to: 1
  3091                           
  3092                           ; BSR set to: 1
  3093                           ;modbus.c: 293: }
  3094                           ;modbus.c: 298: while(TX2IF == 0){}
  3095  001F16  A8A4               	btfss	4004,4,c	;volatile
  3096  001F18  D7FE               	goto	l686
  3097                           
  3098                           ;modbus.c: 299: TX2IF = 0;
  3099  001F1A  98A4               	bcf	4004,4,c	;volatile
  3100                           
  3101                           ;modbus.c: 300: LATDbits.LATD6 = 1;
  3102  001F1C  8C8C               	bsf	3980,6,c	;volatile
  3103                           
  3104                           ;modbus.c: 304: LATDbits.LATD5 = 1;
  3105  001F1E  8A8C               	bsf	3980,5,c	;volatile
  3106                           
  3107                           ;modbus.c: 306: TX9D2 = calculate_parity(mbus_var.tx_buff[mbus_var.send_ptr]);
  3108  001F20  0101               	movlb	1	; () banked
  3109  001F22  51CD               	movf	(_mbus_var+105)& (0+255),w,b
  3110  001F24  0D01               	mullw	1
  3111  001F26  0E65               	movlw	low (_mbus_var+1)
  3112  001F28  24F3               	addwf	prodl,w,c
  3113  001F2A  6ED9               	movwf	fsr2l,c
  3114  001F2C  0E01               	movlw	high (_mbus_var+1)
  3115  001F2E  20F4               	addwfc	prodh,w,c
  3116  001F30  6EDA               	movwf	fsr2h,c
  3117  001F32  50DF               	movf	indf2,w,c
  3118  001F34  ECB6  F014         	call	_calculate_parity
  3119  001F38  6E17               	movwf	??_send_to_master& (0+255),c
  3120  001F3A  3017               	rrcf	??_send_to_master,w,c
  3121  001F3C  A0D8               	btfss	status,0,c
  3122  001F3E  D002               	goto	u2610
  3123  001F40  8072               	bsf	3954,0,c	;volatile
  3124  001F42  D001               	goto	u2625
  3125  001F44                     u2610:
  3126  001F44  9072               	bcf	3954,0,c	;volatile
  3127  001F46                     u2625:
  3128                           
  3129                           ;modbus.c: 308: TXREG2 = mbus_var.tx_buff[mbus_var.send_ptr];
  3130  001F46  0101               	movlb	1	; () banked
  3131  001F48  51CD               	movf	(_mbus_var+105)& (0+255),w,b
  3132  001F4A  0D01               	mullw	1
  3133  001F4C  0E65               	movlw	low (_mbus_var+1)
  3134  001F4E  24F3               	addwf	prodl,w,c
  3135  001F50  6ED9               	movwf	fsr2l,c
  3136  001F52  0E01               	movlw	high (_mbus_var+1)
  3137  001F54  20F4               	addwfc	prodh,w,c
  3138  001F56  6EDA               	movwf	fsr2h,c
  3139  001F58  50DF               	movf	indf2,w,c
  3140  001F5A  6E73               	movwf	3955,c	;volatile
  3141                           
  3142                           ; BSR set to: 1
  3143                           ;modbus.c: 309: mbus_var.send_ptr++;
  3144  001F5C  2BCD               	incf	(_mbus_var+105)& (0+255),f,b
  3145                           
  3146                           ; BSR set to: 1
  3147                           ;modbus.c: 311: for(i=0;i<650;i++)
  3148  001F5E  0E00               	movlw	0
  3149  001F60  6E19               	movwf	send_to_master@i+1,c
  3150  001F62  0E00               	movlw	0
  3151  001F64  6E18               	movwf	send_to_master@i,c
  3152  001F66  D003               	goto	l3884
  3153  001F68                     l690:
  3154  001F68  F000               	nop		;# 
  3155  001F6A  4A18               	infsnz	send_to_master@i,f,c
  3156  001F6C  2A19               	incf	send_to_master@i+1,f,c
  3157  001F6E                     l3884:
  3158  001F6E  0E8A               	movlw	138
  3159  001F70  5C18               	subwf	send_to_master@i,w,c
  3160  001F72  0E02               	movlw	2
  3161  001F74  5819               	subwfb	send_to_master@i+1,w,c
  3162  001F76  A0D8               	btfss	status,0,c
  3163  001F78  D7F7               	goto	l690
  3164                           
  3165                           ;modbus.c: 314: }
  3166                           ;modbus.c: 315: LATDbits.LATD5 = 0;
  3167  001F7A  9A8C               	bcf	3980,5,c	;volatile
  3168  001F7C  0012               	return		;funcret
  3169  001F7E                     __end_of_send_to_master:
  3170                           	opt stack 0
  3171                           tblptru	equ	0xFF8
  3172                           tblptrh	equ	0xFF7
  3173                           tblptrl	equ	0xFF6
  3174                           tablat	equ	0xFF5
  3175                           prodh	equ	0xFF4
  3176                           prodl	equ	0xFF3
  3177                           intcon	equ	0xFF2
  3178                           postinc0	equ	0xFEE
  3179                           wreg	equ	0xFE8
  3180                           indf1	equ	0xFE7
  3181                           fsr1h	equ	0xFE2
  3182                           fsr1l	equ	0xFE1
  3183                           indf2	equ	0xFDF
  3184                           fsr2h	equ	0xFDA
  3185                           fsr2l	equ	0xFD9
  3186                           status	equ	0xFD8
  3187                           
  3188 ;; *************** function _calculate_parity *****************
  3189 ;; Defined at:
  3190 ;;		line 414 in file "hw_layer.c"
  3191 ;; Parameters:    Size  Location     Type
  3192 ;;  val             1    wreg     unsigned char 
  3193 ;; Auto vars:     Size  Location     Type
  3194 ;;  val             1   19[COMRAM] unsigned char 
  3195 ;;  i               1   21[COMRAM] unsigned char 
  3196 ;;  counter         1   20[COMRAM] unsigned char 
  3197 ;; Return value:  Size  Location     Type
  3198 ;;                  1    wreg      unsigned char 
  3199 ;; Registers used:
  3200 ;;		wreg, status,2, status,0
  3201 ;; Tracked objects:
  3202 ;;		On entry : 0/0
  3203 ;;		On exit  : 0/0
  3204 ;;		Unchanged: 0/0
  3205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3207 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3209 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3210 ;;Total ram usage:        3 bytes
  3211 ;; Hardware stack levels used:    1
  3212 ;; Hardware stack levels required when called:    2
  3213 ;; This function calls:
  3214 ;;		Nothing
  3215 ;; This function is called by:
  3216 ;;		_send_to_master
  3217 ;; This function uses a non-reentrant model
  3218 ;;
  3219                           
  3220                           	psect	text12
  3221  00296C                     __ptext12:
  3222                           	opt stack 0
  3223  00296C                     _calculate_parity:
  3224                           	opt stack 25
  3225                           
  3226                           ;incstack = 0
  3227                           ;calculate_parity@val stored from wreg
  3228  00296C  6E14               	movwf	calculate_parity@val,c
  3229                           
  3230                           ;hw_layer.c: 417: unsigned char i,counter;
  3231                           ;hw_layer.c: 418: counter = 0;
  3232  00296E  0E00               	movlw	0
  3233  002970  6E15               	movwf	calculate_parity@counter,c
  3234                           
  3235                           ;hw_layer.c: 420: for(i=0;i<8;i++)
  3236  002972  0E00               	movlw	0
  3237  002974  6E16               	movwf	calculate_parity@i,c
  3238  002976                     l3316:
  3239  002976  0E07               	movlw	7
  3240  002978  6416               	cpfsgt	calculate_parity@i,c
  3241  00297A  D001               	goto	l350
  3242  00297C  D006               	goto	u2030
  3243  00297E                     l350:
  3244                           
  3245                           ;hw_layer.c: 421: {
  3246                           ;hw_layer.c: 422: if((val & 0x01) == 0x01)
  3247  00297E  B014               	btfsc	calculate_parity@val,0,c
  3248                           
  3249                           ;hw_layer.c: 423: counter++;
  3250  002980  2A15               	incf	calculate_parity@counter,f,c
  3251                           
  3252                           ;hw_layer.c: 424: val >>= 1;
  3253  002982  90D8               	bcf	status,0,c
  3254  002984  3214               	rrcf	calculate_parity@val,f,c
  3255  002986  2A16               	incf	calculate_parity@i,f,c
  3256  002988  D7F6               	goto	l3316
  3257  00298A                     u2030:
  3258                           
  3259                           ;hw_layer.c: 425: }
  3260                           ;hw_layer.c: 427: return(counter & 0x01);
  3261  00298A  5015               	movf	calculate_parity@counter,w,c
  3262  00298C  0B01               	andlw	1
  3263  00298E  0012               	return	
  3264  002990                     __end_of_calculate_parity:
  3265                           	opt stack 0
  3266                           tblptru	equ	0xFF8
  3267                           tblptrh	equ	0xFF7
  3268                           tblptrl	equ	0xFF6
  3269                           tablat	equ	0xFF5
  3270                           prodh	equ	0xFF4
  3271                           prodl	equ	0xFF3
  3272                           intcon	equ	0xFF2
  3273                           postinc0	equ	0xFEE
  3274                           wreg	equ	0xFE8
  3275                           indf1	equ	0xFE7
  3276                           fsr1h	equ	0xFE2
  3277                           fsr1l	equ	0xFE1
  3278                           indf2	equ	0xFDF
  3279                           fsr2h	equ	0xFDA
  3280                           fsr2l	equ	0xFD9
  3281                           status	equ	0xFD8
  3282                           
  3283 ;; *************** function _read_165_fault *****************
  3284 ;; Defined at:
  3285 ;;		line 129 in file "hw_layer.c"
  3286 ;; Parameters:    Size  Location     Type
  3287 ;;		None
  3288 ;; Auto vars:     Size  Location     Type
  3289 ;;  j               1   21[COMRAM] unsigned char 
  3290 ;;  Data            1   20[COMRAM] unsigned char 
  3291 ;;  i               1   19[COMRAM] unsigned char 
  3292 ;; Return value:  Size  Location     Type
  3293 ;;                  1    wreg      void 
  3294 ;; Registers used:
  3295 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3296 ;; Tracked objects:
  3297 ;;		On entry : 0/0
  3298 ;;		On exit  : 0/0
  3299 ;;		Unchanged: 0/0
  3300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3302 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3304 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3305 ;;Total ram usage:        3 bytes
  3306 ;; Hardware stack levels used:    1
  3307 ;; Hardware stack levels required when called:    2
  3308 ;; This function calls:
  3309 ;;		Nothing
  3310 ;; This function is called by:
  3311 ;;		_basems_wait
  3312 ;; This function uses a non-reentrant model
  3313 ;;
  3314                           
  3315                           	psect	text13
  3316  002424                     __ptext13:
  3317                           	opt stack 0
  3318  002424                     _read_165_fault:
  3319                           	opt stack 26
  3320                           
  3321                           ;hw_layer.c: 131: unsigned char i,j,Data = 0;
  3322                           
  3323                           ;incstack = 0
  3324  002424  0E00               	movlw	0
  3325  002426  6E15               	movwf	read_165_fault@Data,c
  3326                           
  3327                           ;hw_layer.c: 133: LATAbits.LATA1 = 1;
  3328  002428  8289               	bsf	3977,1,c	;volatile
  3329  00242A  F000               	nop		;# 
  3330  00242C  F000               	nop		;# 
  3331                           
  3332                           ;hw_layer.c: 135: LATAbits.LATA1 = 0;
  3333  00242E  9289               	bcf	3977,1,c	;volatile
  3334  002430  F000               	nop		;# 
  3335  002432  F000               	nop		;# 
  3336  002434  F000               	nop		;# 
  3337  002436  F000               	nop		;# 
  3338  002438  F000               	nop		;# 
  3339  00243A  F000               	nop		;# 
  3340                           
  3341                           ;hw_layer.c: 138: LATAbits.LATA1 = 1;
  3342  00243C  8289               	bsf	3977,1,c	;volatile
  3343  00243E  F000               	nop		;# 
  3344  002440  F000               	nop		;# 
  3345                           
  3346                           ;hw_layer.c: 140: for(j = 0; j < 3; j++)
  3347  002442  0E00               	movlw	0
  3348  002444  6E16               	movwf	read_165_fault@j,c
  3349  002446                     l3602:
  3350  002446  0E02               	movlw	2
  3351  002448  6416               	cpfsgt	read_165_fault@j,c
  3352  00244A  D001               	goto	l274
  3353  00244C  0012               	return	
  3354  00244E                     l274:
  3355                           
  3356                           ;hw_layer.c: 141: {
  3357                           ;hw_layer.c: 142: Data = 0;
  3358  00244E  0E00               	movlw	0
  3359  002450  6E15               	movwf	read_165_fault@Data,c
  3360                           
  3361                           ;hw_layer.c: 143: for(i = 0; i < 8; i++)
  3362  002452  0E00               	movlw	0
  3363  002454  6E14               	movwf	read_165_fault@i,c
  3364  002456                     l3608:
  3365  002456  0E07               	movlw	7
  3366  002458  6414               	cpfsgt	read_165_fault@i,c
  3367  00245A  D001               	goto	l276
  3368  00245C  D00F               	goto	u2200
  3369  00245E                     l276:
  3370                           
  3371                           ;hw_layer.c: 144: {
  3372                           ;hw_layer.c: 145: Data = Data << 1;
  3373  00245E  5015               	movf	read_165_fault@Data,w,c
  3374  002460  2415               	addwf	read_165_fault@Data,w,c
  3375  002462  6E15               	movwf	read_165_fault@Data,c
  3376                           
  3377                           ;hw_layer.c: 146: if(PORTAbits.RA3 == 1)
  3378  002464  B680               	btfsc	3968,3,c	;volatile
  3379                           
  3380                           ;hw_layer.c: 147: {
  3381                           ;hw_layer.c: 148: Data |= 0x01;
  3382  002466  8015               	bsf	read_165_fault@Data,0,c
  3383                           
  3384                           ;hw_layer.c: 150: }
  3385                           ;hw_layer.c: 153: LATAbits.LATA2 = 1;
  3386  002468  8489               	bsf	3977,2,c	;volatile
  3387  00246A  F000               	nop		;# 
  3388  00246C  F000               	nop		;# 
  3389  00246E  F000               	nop		;# 
  3390  002470  F000               	nop		;# 
  3391  002472  F000               	nop		;# 
  3392  002474  F000               	nop		;# 
  3393                           
  3394                           ;hw_layer.c: 156: LATAbits.LATA2 = 0;
  3395  002476  9489               	bcf	3977,2,c	;volatile
  3396  002478  2A14               	incf	read_165_fault@i,f,c
  3397  00247A  D7ED               	goto	l3608
  3398  00247C                     u2200:
  3399                           
  3400                           ;hw_layer.c: 157: }
  3401                           ;hw_layer.c: 159: logic_var.input_buffer_165[j] = Data;
  3402  00247C  5016               	movf	read_165_fault@j,w,c
  3403  00247E  0D01               	mullw	1
  3404  002480  0E60               	movlw	low _logic_var
  3405  002482  24F3               	addwf	prodl,w,c
  3406  002484  6ED9               	movwf	fsr2l,c
  3407  002486  0E00               	movlw	high _logic_var
  3408  002488  20F4               	addwfc	prodh,w,c
  3409  00248A  6EDA               	movwf	fsr2h,c
  3410  00248C  C015  FFDF         	movff	read_165_fault@Data,indf2
  3411  002490  2A16               	incf	read_165_fault@j,f,c
  3412  002492  D7D9               	goto	l3602
  3413  002494                     __end_of_read_165_fault:
  3414                           	opt stack 0
  3415                           tblptru	equ	0xFF8
  3416                           tblptrh	equ	0xFF7
  3417                           tblptrl	equ	0xFF6
  3418                           tablat	equ	0xFF5
  3419                           prodh	equ	0xFF4
  3420                           prodl	equ	0xFF3
  3421                           intcon	equ	0xFF2
  3422                           postinc0	equ	0xFEE
  3423                           wreg	equ	0xFE8
  3424                           indf1	equ	0xFE7
  3425                           fsr1h	equ	0xFE2
  3426                           fsr1l	equ	0xFE1
  3427                           indf2	equ	0xFDF
  3428                           fsr2h	equ	0xFDA
  3429                           fsr2l	equ	0xFD9
  3430                           status	equ	0xFD8
  3431                           
  3432 ;; *************** function _read_165_dip *****************
  3433 ;; Defined at:
  3434 ;;		line 165 in file "hw_layer.c"
  3435 ;; Parameters:    Size  Location     Type
  3436 ;;		None
  3437 ;; Auto vars:     Size  Location     Type
  3438 ;;  i               1   23[COMRAM] unsigned char 
  3439 ;;  j               1   22[COMRAM] unsigned char 
  3440 ;;  Data            1   21[COMRAM] unsigned char 
  3441 ;; Return value:  Size  Location     Type
  3442 ;;                  1    wreg      void 
  3443 ;; Registers used:
  3444 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3445 ;; Tracked objects:
  3446 ;;		On entry : 0/0
  3447 ;;		On exit  : 0/0
  3448 ;;		Unchanged: 0/0
  3449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3451 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3452 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3453 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3454 ;;Total ram usage:        5 bytes
  3455 ;; Hardware stack levels used:    1
  3456 ;; Hardware stack levels required when called:    2
  3457 ;; This function calls:
  3458 ;;		Nothing
  3459 ;; This function is called by:
  3460 ;;		_basems_wait
  3461 ;; This function uses a non-reentrant model
  3462 ;;
  3463                           
  3464                           	psect	text14
  3465  001C2E                     __ptext14:
  3466                           	opt stack 0
  3467  001C2E                     _read_165_dip:
  3468                           	opt stack 26
  3469                           
  3470                           ;hw_layer.c: 167: unsigned char i,j,Data = 0;
  3471                           
  3472                           ;incstack = 0
  3473  001C2E  0E00               	movlw	0
  3474  001C30  6E16               	movwf	read_165_dip@Data,c
  3475                           
  3476                           ;hw_layer.c: 169: LATAbits.LATA5 = 1;
  3477  001C32  8A89               	bsf	3977,5,c	;volatile
  3478                           
  3479                           ;hw_layer.c: 170: for(i=0;i<50;i++)
  3480  001C34  0E00               	movlw	0
  3481  001C36  6E18               	movwf	read_165_dip@i,c
  3482  001C38  D007               	goto	l3640
  3483  001C3A                     l282:
  3484  001C3A  F000               	nop		;# 
  3485  001C3C  F000               	nop		;# 
  3486  001C3E  F000               	nop		;# 
  3487  001C40  F000               	nop		;# 
  3488  001C42  F000               	nop		;# 
  3489  001C44  F000               	nop		;# 
  3490  001C46  2A18               	incf	read_165_dip@i,f,c
  3491  001C48                     l3640:
  3492  001C48  0E31               	movlw	49
  3493  001C4A  6418               	cpfsgt	read_165_dip@i,c
  3494  001C4C  D7F6               	goto	l282
  3495                           
  3496                           ;hw_layer.c: 174: }
  3497                           ;hw_layer.c: 175: LATAbits.LATA5 = 0;
  3498  001C4E  9A89               	bcf	3977,5,c	;volatile
  3499                           
  3500                           ;hw_layer.c: 176: for(i=0;i<50;i++)
  3501  001C50  0E00               	movlw	0
  3502  001C52  6E18               	movwf	read_165_dip@i,c
  3503  001C54  D007               	goto	l3650
  3504  001C56                     l284:
  3505  001C56  F000               	nop		;# 
  3506  001C58  F000               	nop		;# 
  3507  001C5A  F000               	nop		;# 
  3508  001C5C  F000               	nop		;# 
  3509  001C5E  F000               	nop		;# 
  3510  001C60  F000               	nop		;# 
  3511  001C62  2A18               	incf	read_165_dip@i,f,c
  3512  001C64                     l3650:
  3513  001C64  0E31               	movlw	49
  3514  001C66  6418               	cpfsgt	read_165_dip@i,c
  3515  001C68  D7F6               	goto	l284
  3516                           
  3517                           ;hw_layer.c: 180: }
  3518                           ;hw_layer.c: 181: LATAbits.LATA5 = 1;
  3519  001C6A  8A89               	bsf	3977,5,c	;volatile
  3520                           
  3521                           ;hw_layer.c: 182: for(i=0;i<50;i++)
  3522  001C6C  0E00               	movlw	0
  3523  001C6E  6E18               	movwf	read_165_dip@i,c
  3524  001C70                     l3654:
  3525  001C70  0E31               	movlw	49
  3526  001C72  6418               	cpfsgt	read_165_dip@i,c
  3527  001C74  D001               	goto	l286
  3528  001C76  D008               	goto	u2270
  3529  001C78                     l286:
  3530  001C78  F000               	nop		;# 
  3531  001C7A  F000               	nop		;# 
  3532  001C7C  F000               	nop		;# 
  3533  001C7E  F000               	nop		;# 
  3534  001C80  F000               	nop		;# 
  3535  001C82  F000               	nop		;# 
  3536  001C84  2A18               	incf	read_165_dip@i,f,c
  3537  001C86  D7F4               	goto	l3654
  3538  001C88                     u2270:
  3539                           
  3540                           ;hw_layer.c: 186: }
  3541                           ;hw_layer.c: 187: for(j = 0; j < 6; j++)
  3542  001C88  0E00               	movlw	0
  3543  001C8A  6E17               	movwf	read_165_dip@j,c
  3544  001C8C                     l3664:
  3545  001C8C  0E05               	movlw	5
  3546  001C8E  6417               	cpfsgt	read_165_dip@j,c
  3547  001C90  D001               	goto	l288
  3548  001C92  0012               	return	
  3549  001C94                     l288:
  3550                           
  3551                           ;hw_layer.c: 188: {
  3552                           ;hw_layer.c: 189: Data = 0;
  3553  001C94  0E00               	movlw	0
  3554  001C96  6E16               	movwf	read_165_dip@Data,c
  3555                           
  3556                           ;hw_layer.c: 190: for(i = 0; i < 8; i++)
  3557  001C98  0E00               	movlw	0
  3558  001C9A  6E18               	movwf	read_165_dip@i,c
  3559  001C9C                     l3670:
  3560  001C9C  0E07               	movlw	7
  3561  001C9E  6418               	cpfsgt	read_165_dip@i,c
  3562  001CA0  D001               	goto	l290
  3563  001CA2  D016               	goto	u2330
  3564  001CA4                     l290:
  3565                           
  3566                           ;hw_layer.c: 191: {
  3567                           ;hw_layer.c: 192: Data = Data << 1;
  3568  001CA4  5016               	movf	read_165_dip@Data,w,c
  3569  001CA6  2416               	addwf	read_165_dip@Data,w,c
  3570  001CA8  6E16               	movwf	read_165_dip@Data,c
  3571                           
  3572                           ;hw_layer.c: 193: if(PORTEbits.RE0 == 1)
  3573  001CAA  B084               	btfsc	3972,0,c	;volatile
  3574                           
  3575                           ;hw_layer.c: 194: {
  3576                           ;hw_layer.c: 195: Data |= 0x01;
  3577  001CAC  8016               	bsf	read_165_dip@Data,0,c
  3578                           
  3579                           ;hw_layer.c: 197: }
  3580                           ;hw_layer.c: 200: LATAbits.LATA4 = 1;
  3581  001CAE  8889               	bsf	3977,4,c	;volatile
  3582                           
  3583                           ;hw_layer.c: 201: for(i=0;i<20;i++)
  3584  001CB0  0E00               	movlw	0
  3585  001CB2  6E18               	movwf	read_165_dip@i,c
  3586  001CB4  D007               	goto	l3690
  3587  001CB6                     l293:
  3588  001CB6  F000               	nop		;# 
  3589  001CB8  F000               	nop		;# 
  3590  001CBA  F000               	nop		;# 
  3591  001CBC  F000               	nop		;# 
  3592  001CBE  F000               	nop		;# 
  3593  001CC0  F000               	nop		;# 
  3594  001CC2  2A18               	incf	read_165_dip@i,f,c
  3595  001CC4                     l3690:
  3596  001CC4  0E13               	movlw	19
  3597  001CC6  6418               	cpfsgt	read_165_dip@i,c
  3598  001CC8  D7F6               	goto	l293
  3599                           
  3600                           ;hw_layer.c: 205: }
  3601                           ;hw_layer.c: 206: LATAbits.LATA4 = 0;
  3602  001CCA  9889               	bcf	3977,4,c	;volatile
  3603  001CCC  2A18               	incf	read_165_dip@i,f,c
  3604  001CCE  D7E6               	goto	l3670
  3605  001CD0                     u2330:
  3606                           
  3607                           ;hw_layer.c: 207: }
  3608                           ;hw_layer.c: 209: logic_var.input_buffer_165[j+3] = Data;
  3609  001CD0  5017               	movf	read_165_dip@j,w,c
  3610  001CD2  6E14               	movwf	??_read_165_dip& (0+255),c
  3611  001CD4  6A15               	clrf	(??_read_165_dip+1)& (0+255),c
  3612  001CD6  0E03               	movlw	3
  3613  001CD8  2614               	addwf	??_read_165_dip,f,c
  3614  001CDA  0E00               	movlw	0
  3615  001CDC  2215               	addwfc	??_read_165_dip+1,f,c
  3616  001CDE  0E60               	movlw	low _logic_var
  3617  001CE0  2414               	addwf	??_read_165_dip,w,c
  3618  001CE2  6ED9               	movwf	fsr2l,c
  3619  001CE4  0E00               	movlw	high _logic_var
  3620  001CE6  2015               	addwfc	??_read_165_dip+1,w,c
  3621  001CE8  6EDA               	movwf	fsr2h,c
  3622  001CEA  C016  FFDF         	movff	read_165_dip@Data,indf2
  3623  001CEE  2A17               	incf	read_165_dip@j,f,c
  3624  001CF0  D7CD               	goto	l3664
  3625  001CF2                     __end_of_read_165_dip:
  3626                           	opt stack 0
  3627                           tblptru	equ	0xFF8
  3628                           tblptrh	equ	0xFF7
  3629                           tblptrl	equ	0xFF6
  3630                           tablat	equ	0xFF5
  3631                           prodh	equ	0xFF4
  3632                           prodl	equ	0xFF3
  3633                           intcon	equ	0xFF2
  3634                           postinc0	equ	0xFEE
  3635                           wreg	equ	0xFE8
  3636                           indf1	equ	0xFE7
  3637                           fsr1h	equ	0xFE2
  3638                           fsr1l	equ	0xFE1
  3639                           indf2	equ	0xFDF
  3640                           fsr2h	equ	0xFDA
  3641                           fsr2l	equ	0xFD9
  3642                           status	equ	0xFD8
  3643                           
  3644 ;; *************** function _poll_rtc *****************
  3645 ;; Defined at:
  3646 ;;		line 367 in file "i2c_e2p_rtc.c"
  3647 ;; Parameters:    Size  Location     Type
  3648 ;;		None
  3649 ;; Auto vars:     Size  Location     Type
  3650 ;;  i               1   24[COMRAM] unsigned char 
  3651 ;; Return value:  Size  Location     Type
  3652 ;;                  1    wreg      void 
  3653 ;; Registers used:
  3654 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3655 ;; Tracked objects:
  3656 ;;		On entry : 0/0
  3657 ;;		On exit  : 0/0
  3658 ;;		Unchanged: 0/0
  3659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3661 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3663 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3664 ;;Total ram usage:        1 bytes
  3665 ;; Hardware stack levels used:    1
  3666 ;; Hardware stack levels required when called:    5
  3667 ;; This function calls:
  3668 ;;		_pbcd2hex
  3669 ;;		_rtc_byte_rd
  3670 ;; This function is called by:
  3671 ;;		_basems_wait
  3672 ;; This function uses a non-reentrant model
  3673 ;;
  3674                           
  3675                           	psect	text15
  3676  00209C                     __ptext15:
  3677                           	opt stack 0
  3678  00209C                     _poll_rtc:
  3679                           	opt stack 23
  3680                           
  3681                           ;i2c_e2p_rtc.c: 370: static unsigned int polltmr = 0;
  3682                           ;i2c_e2p_rtc.c: 371: unsigned char i;
  3683                           ;i2c_e2p_rtc.c: 373: polltmr++;
  3684                           
  3685                           ;incstack = 0
  3686  00209C  4A47               	infsnz	poll_rtc@polltmr,f,c
  3687  00209E  2A48               	incf	poll_rtc@polltmr+1,f,c
  3688                           
  3689                           ;i2c_e2p_rtc.c: 374: if(polltmr < 500)return;
  3690  0020A0  0EF4               	movlw	244
  3691  0020A2  5C47               	subwf	poll_rtc@polltmr,w,c
  3692  0020A4  0E01               	movlw	1
  3693  0020A6  5848               	subwfb	poll_rtc@polltmr+1,w,c
  3694  0020A8  A0D8               	btfss	status,0,c
  3695  0020AA  0012               	return	
  3696                           
  3697                           ;i2c_e2p_rtc.c: 375: polltmr = 0;
  3698  0020AC  0E00               	movlw	0
  3699  0020AE  6E48               	movwf	poll_rtc@polltmr+1,c
  3700  0020B0  0E00               	movlw	0
  3701  0020B2  6E47               	movwf	poll_rtc@polltmr,c
  3702                           
  3703                           ;i2c_e2p_rtc.c: 377: for(i=0; i<6; i++)
  3704  0020B4  0E00               	movlw	0
  3705  0020B6  6E19               	movwf	poll_rtc@i,c
  3706  0020B8                     l5102:
  3707  0020B8  0E05               	movlw	5
  3708  0020BA  6419               	cpfsgt	poll_rtc@i,c
  3709  0020BC  D001               	goto	l548
  3710  0020BE  D017               	goto	u3780
  3711  0020C0                     l548:
  3712                           
  3713                           ;i2c_e2p_rtc.c: 378: {
  3714                           ;i2c_e2p_rtc.c: 379: gen_var.rtc_read[i] = rtc_byte_rd(rtc_addr[i]);
  3715  0020C0  5019               	movf	poll_rtc@i,w,c
  3716  0020C2  0D01               	mullw	1
  3717  0020C4  0E3B               	movlw	low (_gen_var+5)
  3718  0020C6  24F3               	addwf	prodl,w,c
  3719  0020C8  6ED9               	movwf	fsr2l,c
  3720  0020CA  0E00               	movlw	high (_gen_var+5)
  3721  0020CC  20F4               	addwfc	prodh,w,c
  3722  0020CE  6EDA               	movwf	fsr2h,c
  3723  0020D0  5019               	movf	poll_rtc@i,w,c
  3724  0020D2  0D01               	mullw	1
  3725  0020D4  0E41               	movlw	low _rtc_addr
  3726  0020D6  24F3               	addwf	prodl,w,c
  3727  0020D8  6EF6               	movwf	tblptrl,c
  3728  0020DA  0E10               	movlw	high _rtc_addr
  3729  0020DC  20F4               	addwfc	prodh,w,c
  3730  0020DE  6EF7               	movwf	tblptrh,c
  3731  0020E0                     	if	0	;There are less than 3 active tblptr bytes
  3732  0020E0                     	endif
  3733  0020E0  0008               	tblrd		*
  3734  0020E2  50F5               	movf	tablat,w,c
  3735  0020E4  ECFF  F013         	call	_rtc_byte_rd
  3736  0020E8  6EDF               	movwf	indf2,c
  3737  0020EA  2A19               	incf	poll_rtc@i,f,c
  3738  0020EC  D7E5               	goto	l5102
  3739  0020EE                     u3780:
  3740                           
  3741                           ;i2c_e2p_rtc.c: 380: }
  3742                           ;i2c_e2p_rtc.c: 381: gen_var.rtc_read[5] &= 0x7f;
  3743  0020EE  9E40               	bcf	_gen_var+10,7,c
  3744                           
  3745                           ;i2c_e2p_rtc.c: 383: for(i=0; i<6; i++)
  3746  0020F0  0E00               	movlw	0
  3747  0020F2  6E19               	movwf	poll_rtc@i,c
  3748  0020F4                     l5116:
  3749  0020F4  0E05               	movlw	5
  3750  0020F6  6419               	cpfsgt	poll_rtc@i,c
  3751  0020F8  D001               	goto	l550
  3752  0020FA  0012               	return	
  3753  0020FC                     l550:
  3754                           
  3755                           ;i2c_e2p_rtc.c: 384: {
  3756                           ;i2c_e2p_rtc.c: 385: gen_var.rtc_read[i] = pbcd2hex(gen_var.rtc_read[i]);
  3757  0020FC  5019               	movf	poll_rtc@i,w,c
  3758  0020FE  0D01               	mullw	1
  3759  002100  0E3B               	movlw	low (_gen_var+5)
  3760  002102  24F3               	addwf	prodl,w,c
  3761  002104  6ED9               	movwf	fsr2l,c
  3762  002106  0E00               	movlw	high (_gen_var+5)
  3763  002108  20F4               	addwfc	prodh,w,c
  3764  00210A  6EDA               	movwf	fsr2h,c
  3765  00210C  5019               	movf	poll_rtc@i,w,c
  3766  00210E  0D01               	mullw	1
  3767  002110  0E3B               	movlw	low (_gen_var+5)
  3768  002112  24F3               	addwf	prodl,w,c
  3769  002114  6EE1               	movwf	fsr1l,c
  3770  002116  0E00               	movlw	high (_gen_var+5)
  3771  002118  20F4               	addwfc	prodh,w,c
  3772  00211A  6EE2               	movwf	fsr1h,c
  3773  00211C  50E7               	movf	indf1,w,c
  3774  00211E  ECC8  F014         	call	_pbcd2hex
  3775  002122  6EDF               	movwf	indf2,c
  3776  002124  2A19               	incf	poll_rtc@i,f,c
  3777  002126  D7E6               	goto	l5116
  3778  002128                     __end_of_poll_rtc:
  3779                           	opt stack 0
  3780                           tblptru	equ	0xFF8
  3781                           tblptrh	equ	0xFF7
  3782                           tblptrl	equ	0xFF6
  3783                           tablat	equ	0xFF5
  3784                           prodh	equ	0xFF4
  3785                           prodl	equ	0xFF3
  3786                           intcon	equ	0xFF2
  3787                           postinc0	equ	0xFEE
  3788                           wreg	equ	0xFE8
  3789                           indf1	equ	0xFE7
  3790                           fsr1h	equ	0xFE2
  3791                           fsr1l	equ	0xFE1
  3792                           indf2	equ	0xFDF
  3793                           fsr2h	equ	0xFDA
  3794                           fsr2l	equ	0xFD9
  3795                           status	equ	0xFD8
  3796                           
  3797 ;; *************** function _rtc_byte_rd *****************
  3798 ;; Defined at:
  3799 ;;		line 275 in file "i2c_e2p_rtc.c"
  3800 ;; Parameters:    Size  Location     Type
  3801 ;;  adr             1    wreg     unsigned char 
  3802 ;; Auto vars:     Size  Location     Type
  3803 ;;  adr             1   22[COMRAM] unsigned char 
  3804 ;;  temp            1   23[COMRAM] unsigned char 
  3805 ;; Return value:  Size  Location     Type
  3806 ;;                  1    wreg      unsigned char 
  3807 ;; Registers used:
  3808 ;;		wreg, status,2, status,0, cstack
  3809 ;; Tracked objects:
  3810 ;;		On entry : 0/0
  3811 ;;		On exit  : 0/0
  3812 ;;		Unchanged: 0/0
  3813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3815 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3817 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3818 ;;Total ram usage:        2 bytes
  3819 ;; Hardware stack levels used:    1
  3820 ;; Hardware stack levels required when called:    4
  3821 ;; This function calls:
  3822 ;;		_i2c_no_ackout
  3823 ;;		_i2c_shift_in
  3824 ;;		_i2c_shift_out
  3825 ;;		_i2c_start
  3826 ;;		_i2c_stop
  3827 ;; This function is called by:
  3828 ;;		_init_rtc
  3829 ;;		_poll_rtc
  3830 ;; This function uses a non-reentrant model
  3831 ;;
  3832                           
  3833                           	psect	text16
  3834  0027FE                     __ptext16:
  3835                           	opt stack 0
  3836  0027FE                     _rtc_byte_rd:
  3837                           	opt stack 25
  3838                           
  3839                           ;incstack = 0
  3840                           ;rtc_byte_rd@adr stored from wreg
  3841  0027FE  6E17               	movwf	rtc_byte_rd@adr,c
  3842                           
  3843                           ;i2c_e2p_rtc.c: 280: unsigned char temp=0;
  3844  002800  0E00               	movlw	0
  3845  002802  6E18               	movwf	rtc_byte_rd@temp,c
  3846                           
  3847                           ;i2c_e2p_rtc.c: 282: i2c_start();
  3848  002804  ECF0  F014         	call	_i2c_start	;wreg free
  3849                           
  3850                           ;i2c_e2p_rtc.c: 283: i2c_shift_out(0xd0,8);
  3851  002808  0E08               	movlw	8
  3852  00280A  6E14               	movwf	i2c_shift_out@cnts,c
  3853  00280C  0ED0               	movlw	208
  3854  00280E  ECD5  F012         	call	_i2c_shift_out
  3855                           
  3856                           ;i2c_e2p_rtc.c: 284: i2c_shift_out(adr,8);
  3857  002812  0E08               	movlw	8
  3858  002814  6E14               	movwf	i2c_shift_out@cnts,c
  3859  002816  5017               	movf	rtc_byte_rd@adr,w,c
  3860  002818  ECD5  F012         	call	_i2c_shift_out
  3861                           
  3862                           ;i2c_e2p_rtc.c: 286: i2c_start();
  3863  00281C  ECF0  F014         	call	_i2c_start	;wreg free
  3864                           
  3865                           ;i2c_e2p_rtc.c: 287: i2c_shift_out(0xd1,8);
  3866  002820  0E08               	movlw	8
  3867  002822  6E14               	movwf	i2c_shift_out@cnts,c
  3868  002824  0ED1               	movlw	209
  3869  002826  ECD5  F012         	call	_i2c_shift_out
  3870                           
  3871                           ;i2c_e2p_rtc.c: 288: temp = i2c_shift_in(8);
  3872  00282A  0E08               	movlw	8
  3873  00282C  EC3E  F014         	call	_i2c_shift_in
  3874  002830  6E18               	movwf	rtc_byte_rd@temp,c
  3875                           
  3876                           ;i2c_e2p_rtc.c: 289: i2c_no_ackout();
  3877  002832  ECF9  F014         	call	_i2c_no_ackout	;wreg free
  3878                           
  3879                           ;i2c_e2p_rtc.c: 290: i2c_stop();
  3880  002836  EC02  F015         	call	_i2c_stop	;wreg free
  3881                           
  3882                           ;i2c_e2p_rtc.c: 291: return(temp);
  3883  00283A  5018               	movf	rtc_byte_rd@temp,w,c
  3884  00283C  0012               	return	
  3885  00283E                     __end_of_rtc_byte_rd:
  3886                           	opt stack 0
  3887                           tblptru	equ	0xFF8
  3888                           tblptrh	equ	0xFF7
  3889                           tblptrl	equ	0xFF6
  3890                           tablat	equ	0xFF5
  3891                           prodh	equ	0xFF4
  3892                           prodl	equ	0xFF3
  3893                           intcon	equ	0xFF2
  3894                           postinc0	equ	0xFEE
  3895                           wreg	equ	0xFE8
  3896                           indf1	equ	0xFE7
  3897                           fsr1h	equ	0xFE2
  3898                           fsr1l	equ	0xFE1
  3899                           indf2	equ	0xFDF
  3900                           fsr2h	equ	0xFDA
  3901                           fsr2l	equ	0xFD9
  3902                           status	equ	0xFD8
  3903                           
  3904 ;; *************** function _pbcd2hex *****************
  3905 ;; Defined at:
  3906 ;;		line 336 in file "i2c_e2p_rtc.c"
  3907 ;; Parameters:    Size  Location     Type
  3908 ;;  pbcdbyte        1    wreg     unsigned char 
  3909 ;; Auto vars:     Size  Location     Type
  3910 ;;  pbcdbyte        1   21[COMRAM] unsigned char 
  3911 ;;  tmp2            1   20[COMRAM] unsigned char 
  3912 ;;  tmp             1   19[COMRAM] unsigned char 
  3913 ;; Return value:  Size  Location     Type
  3914 ;;                  1    wreg      unsigned char 
  3915 ;; Registers used:
  3916 ;;		wreg, status,2, status,0, prodl, prodh
  3917 ;; Tracked objects:
  3918 ;;		On entry : 0/0
  3919 ;;		On exit  : 0/0
  3920 ;;		Unchanged: 0/0
  3921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3923 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3925 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3926 ;;Total ram usage:        3 bytes
  3927 ;; Hardware stack levels used:    1
  3928 ;; Hardware stack levels required when called:    2
  3929 ;; This function calls:
  3930 ;;		Nothing
  3931 ;; This function is called by:
  3932 ;;		_poll_rtc
  3933 ;; This function uses a non-reentrant model
  3934 ;;
  3935                           
  3936                           	psect	text17
  3937  002990                     __ptext17:
  3938                           	opt stack 0
  3939  002990                     _pbcd2hex:
  3940                           	opt stack 25
  3941                           
  3942                           ;incstack = 0
  3943                           ;pbcd2hex@pbcdbyte stored from wreg
  3944  002990  6E16               	movwf	pbcd2hex@pbcdbyte,c
  3945                           
  3946                           ;i2c_e2p_rtc.c: 338: unsigned char tmp,tmp2;
  3947                           ;i2c_e2p_rtc.c: 340: tmp = pbcdbyte & 0x0f;
  3948  002992  5016               	movf	pbcd2hex@pbcdbyte,w,c
  3949  002994  0B0F               	andlw	15
  3950  002996  6E14               	movwf	pbcd2hex@tmp,c
  3951                           
  3952                           ;i2c_e2p_rtc.c: 341: tmp2 = (pbcdbyte >> 4) & 0x0f;
  3953  002998  3816               	swapf	pbcd2hex@pbcdbyte,w,c
  3954  00299A  0B0F               	andlw	15
  3955  00299C  0B0F               	andlw	15
  3956  00299E  6E15               	movwf	pbcd2hex@tmp2,c
  3957                           
  3958                           ;i2c_e2p_rtc.c: 342: tmp2 *= 10;
  3959  0029A0  0E0A               	movlw	10
  3960  0029A2  0215               	mulwf	pbcd2hex@tmp2,c
  3961  0029A4  50F3               	movf	prodl,w,c
  3962  0029A6  6E15               	movwf	pbcd2hex@tmp2,c
  3963                           
  3964                           ;i2c_e2p_rtc.c: 343: tmp += tmp2;
  3965  0029A8  5015               	movf	pbcd2hex@tmp2,w,c
  3966  0029AA  2614               	addwf	pbcd2hex@tmp,f,c
  3967                           
  3968                           ;i2c_e2p_rtc.c: 344: return(tmp);
  3969  0029AC  5014               	movf	pbcd2hex@tmp,w,c
  3970  0029AE  0012               	return	
  3971  0029B0                     __end_of_pbcd2hex:
  3972                           	opt stack 0
  3973                           tblptru	equ	0xFF8
  3974                           tblptrh	equ	0xFF7
  3975                           tblptrl	equ	0xFF6
  3976                           tablat	equ	0xFF5
  3977                           prodh	equ	0xFF4
  3978                           prodl	equ	0xFF3
  3979                           intcon	equ	0xFF2
  3980                           postinc0	equ	0xFEE
  3981                           wreg	equ	0xFE8
  3982                           indf1	equ	0xFE7
  3983                           fsr1h	equ	0xFE2
  3984                           fsr1l	equ	0xFE1
  3985                           indf2	equ	0xFDF
  3986                           fsr2h	equ	0xFDA
  3987                           fsr2l	equ	0xFD9
  3988                           status	equ	0xFD8
  3989                           
  3990 ;; *************** function _noise_rejection_off *****************
  3991 ;; Defined at:
  3992 ;;		line 19 in file "logic.c"
  3993 ;; Parameters:    Size  Location     Type
  3994 ;;		None
  3995 ;; Auto vars:     Size  Location     Type
  3996 ;;  i               1   24[COMRAM] unsigned char 
  3997 ;;  new_data        1   23[COMRAM] unsigned char 
  3998 ;;  temp1           1   22[COMRAM] unsigned char 
  3999 ;;  hist_data       1   21[COMRAM] unsigned char 
  4000 ;;  temp2           1   20[COMRAM] unsigned char 
  4001 ;; Return value:  Size  Location     Type
  4002 ;;                  1    wreg      void 
  4003 ;; Registers used:
  4004 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4005 ;; Tracked objects:
  4006 ;;		On entry : 0/0
  4007 ;;		On exit  : 0/0
  4008 ;;		Unchanged: 0/0
  4009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4011 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4012 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4013 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4014 ;;Total ram usage:        6 bytes
  4015 ;; Hardware stack levels used:    1
  4016 ;; Hardware stack levels required when called:    2
  4017 ;; This function calls:
  4018 ;;		Nothing
  4019 ;; This function is called by:
  4020 ;;		_basems_wait
  4021 ;; This function uses a non-reentrant model
  4022 ;;
  4023                           
  4024                           	psect	text18
  4025  00200E                     __ptext18:
  4026                           	opt stack 0
  4027  00200E                     _noise_rejection_off:
  4028                           	opt stack 26
  4029                           
  4030                           ;logic.c: 21: unsigned char temp1,temp2,new_data,hist_data;
  4031                           ;logic.c: 22: unsigned char i;
  4032                           ;logic.c: 24: for(i = 0; i < 9; i++)
  4033                           
  4034                           ;incstack = 0
  4035  00200E  0E00               	movlw	0
  4036  002010  6E19               	movwf	noise_rejection_off@i,c
  4037  002012                     l3734:
  4038  002012  0E08               	movlw	8
  4039  002014  6419               	cpfsgt	noise_rejection_off@i,c
  4040  002016  D001               	goto	l396
  4041  002018  0012               	return	
  4042  00201A                     l396:
  4043                           
  4044                           ;logic.c: 25: {
  4045                           ;logic.c: 26: new_data = logic_var.input_array[i].bytes;
  4046  00201A  5019               	movf	noise_rejection_off@i,w,c
  4047  00201C  0D01               	mullw	1
  4048  00201E  0E6C               	movlw	low (_logic_var+12)
  4049  002020  24F3               	addwf	prodl,w,c
  4050  002022  6ED9               	movwf	fsr2l,c
  4051  002024  0E00               	movlw	high (_logic_var+12)
  4052  002026  20F4               	addwfc	prodh,w,c
  4053  002028  6EDA               	movwf	fsr2h,c
  4054  00202A  50DF               	movf	indf2,w,c
  4055  00202C  6E18               	movwf	noise_rejection_off@new_data,c
  4056                           
  4057                           ;logic.c: 27: hist_data = logic_var.input_hist_array[i];
  4058  00202E  5019               	movf	noise_rejection_off@i,w,c
  4059  002030  0D01               	mullw	1
  4060  002032  0E78               	movlw	low (_logic_var+24)
  4061  002034  24F3               	addwf	prodl,w,c
  4062  002036  6ED9               	movwf	fsr2l,c
  4063  002038  0E00               	movlw	high (_logic_var+24)
  4064  00203A  20F4               	addwfc	prodh,w,c
  4065  00203C  6EDA               	movwf	fsr2h,c
  4066  00203E  50DF               	movf	indf2,w,c
  4067  002040  6E16               	movwf	noise_rejection_off@hist_data,c
  4068                           
  4069                           ;logic.c: 28: temp1 = ~ (new_data ^ hist_data);
  4070  002042  5018               	movf	noise_rejection_off@new_data,w,c
  4071  002044  1816               	xorwf	noise_rejection_off@hist_data,w,c
  4072  002046  0AFF               	xorlw	255
  4073  002048  6E17               	movwf	noise_rejection_off@temp1,c
  4074                           
  4075                           ;logic.c: 29: temp2 =~ temp1;
  4076  00204A  5017               	movf	noise_rejection_off@temp1,w,c
  4077  00204C  0AFF               	xorlw	255
  4078  00204E  6E15               	movwf	noise_rejection_off@temp2,c
  4079                           
  4080                           ;logic.c: 30: logic_var.new_ip[i] |= (temp2 & new_data);
  4081  002050  5015               	movf	noise_rejection_off@temp2,w,c
  4082  002052  1418               	andwf	noise_rejection_off@new_data,w,c
  4083  002054  6E14               	movwf	??_noise_rejection_off& (0+255),c
  4084  002056  5019               	movf	noise_rejection_off@i,w,c
  4085  002058  0D01               	mullw	1
  4086  00205A  0E84               	movlw	low (_logic_var+36)
  4087  00205C  24F3               	addwf	prodl,w,c
  4088  00205E  6ED9               	movwf	fsr2l,c
  4089  002060  0E00               	movlw	high (_logic_var+36)
  4090  002062  20F4               	addwfc	prodh,w,c
  4091  002064  6EDA               	movwf	fsr2h,c
  4092  002066  5014               	movf	??_noise_rejection_off,w,c
  4093  002068  12DF               	iorwf	indf2,f,c
  4094                           
  4095                           ;logic.c: 31: logic_var.new_ip[i] &= (temp1 | new_data);
  4096  00206A  5017               	movf	noise_rejection_off@temp1,w,c
  4097  00206C  1018               	iorwf	noise_rejection_off@new_data,w,c
  4098  00206E  6E14               	movwf	??_noise_rejection_off& (0+255),c
  4099  002070  5019               	movf	noise_rejection_off@i,w,c
  4100  002072  0D01               	mullw	1
  4101  002074  0E84               	movlw	low (_logic_var+36)
  4102  002076  24F3               	addwf	prodl,w,c
  4103  002078  6ED9               	movwf	fsr2l,c
  4104  00207A  0E00               	movlw	high (_logic_var+36)
  4105  00207C  20F4               	addwfc	prodh,w,c
  4106  00207E  6EDA               	movwf	fsr2h,c
  4107  002080  5014               	movf	??_noise_rejection_off,w,c
  4108  002082  16DF               	andwf	indf2,f,c
  4109                           
  4110                           ;logic.c: 32: logic_var.input_hist_array[i] = new_data;
  4111  002084  5019               	movf	noise_rejection_off@i,w,c
  4112  002086  0D01               	mullw	1
  4113  002088  0E78               	movlw	low (_logic_var+24)
  4114  00208A  24F3               	addwf	prodl,w,c
  4115  00208C  6ED9               	movwf	fsr2l,c
  4116  00208E  0E00               	movlw	high (_logic_var+24)
  4117  002090  20F4               	addwfc	prodh,w,c
  4118  002092  6EDA               	movwf	fsr2h,c
  4119  002094  C018  FFDF         	movff	noise_rejection_off@new_data,indf2
  4120  002098  2A19               	incf	noise_rejection_off@i,f,c
  4121  00209A  D7BB               	goto	l3734
  4122  00209C                     __end_of_noise_rejection_off:
  4123                           	opt stack 0
  4124                           tblptru	equ	0xFF8
  4125                           tblptrh	equ	0xFF7
  4126                           tblptrl	equ	0xFF6
  4127                           tablat	equ	0xFF5
  4128                           prodh	equ	0xFF4
  4129                           prodl	equ	0xFF3
  4130                           intcon	equ	0xFF2
  4131                           postinc0	equ	0xFEE
  4132                           wreg	equ	0xFE8
  4133                           indf1	equ	0xFE7
  4134                           fsr1h	equ	0xFE2
  4135                           fsr1l	equ	0xFE1
  4136                           indf2	equ	0xFDF
  4137                           fsr2h	equ	0xFDA
  4138                           fsr2l	equ	0xFD9
  4139                           status	equ	0xFD8
  4140                           
  4141 ;; *************** function _dicing_slicing *****************
  4142 ;; Defined at:
  4143 ;;		line 370 in file "hw_layer.c"
  4144 ;; Parameters:    Size  Location     Type
  4145 ;;		None
  4146 ;; Auto vars:     Size  Location     Type
  4147 ;;  j               1   24[COMRAM] unsigned char 
  4148 ;;  i               1   23[COMRAM] unsigned char 
  4149 ;;  n               1   22[COMRAM] unsigned char 
  4150 ;;  m               1   21[COMRAM] unsigned char 
  4151 ;;  tmp3            1    0        unsigned char 
  4152 ;;  tmp2            1    0        unsigned char 
  4153 ;;  tmp1            1    0        unsigned char 
  4154 ;; Return value:  Size  Location     Type
  4155 ;;                  1    wreg      void 
  4156 ;; Registers used:
  4157 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  4158 ;; Tracked objects:
  4159 ;;		On entry : 0/0
  4160 ;;		On exit  : 0/0
  4161 ;;		Unchanged: 0/0
  4162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4164 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4165 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4166 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4167 ;;Total ram usage:        6 bytes
  4168 ;; Hardware stack levels used:    1
  4169 ;; Hardware stack levels required when called:    2
  4170 ;; This function calls:
  4171 ;;		Nothing
  4172 ;; This function is called by:
  4173 ;;		_basems_wait
  4174 ;; This function uses a non-reentrant model
  4175 ;;
  4176                           
  4177                           	psect	text19
  4178  001F7E                     __ptext19:
  4179                           	opt stack 0
  4180  001F7E                     _dicing_slicing:
  4181                           	opt stack 26
  4182                           
  4183                           ;hw_layer.c: 372: unsigned char tmp1,tmp2,tmp3;
  4184                           ;hw_layer.c: 373: unsigned char m,n;
  4185                           ;hw_layer.c: 374: unsigned char i,j;
  4186                           ;hw_layer.c: 376: for(j=0;j<9;j++)
  4187                           
  4188                           ;incstack = 0
  4189  001F7E  0E00               	movlw	0
  4190  001F80  6E19               	movwf	dicing_slicing@j,c
  4191  001F82                     l3704:
  4192  001F82  0E08               	movlw	8
  4193  001F84  6419               	cpfsgt	dicing_slicing@j,c
  4194  001F86  D001               	goto	l342
  4195  001F88  0012               	return	
  4196  001F8A                     l342:
  4197                           
  4198                           ;hw_layer.c: 377: {
  4199                           ;hw_layer.c: 378: m = logic_var.input_buffer_165[j];
  4200  001F8A  5019               	movf	dicing_slicing@j,w,c
  4201  001F8C  0D01               	mullw	1
  4202  001F8E  0E60               	movlw	low _logic_var
  4203  001F90  24F3               	addwf	prodl,w,c
  4204  001F92  6ED9               	movwf	fsr2l,c
  4205  001F94  0E00               	movlw	high _logic_var
  4206  001F96  20F4               	addwfc	prodh,w,c
  4207  001F98  6EDA               	movwf	fsr2h,c
  4208  001F9A  50DF               	movf	indf2,w,c
  4209  001F9C  6E16               	movwf	dicing_slicing@m,c
  4210                           
  4211                           ;hw_layer.c: 379: n = 0;
  4212  001F9E  0E00               	movlw	0
  4213  001FA0  6E17               	movwf	dicing_slicing@n,c
  4214                           
  4215                           ;hw_layer.c: 380: for(i=0; i<8; i++)
  4216  001FA2  0E00               	movlw	0
  4217  001FA4  6E18               	movwf	dicing_slicing@i,c
  4218  001FA6                     l3714:
  4219  001FA6  0E07               	movlw	7
  4220  001FA8  6418               	cpfsgt	dicing_slicing@i,c
  4221  001FAA  D001               	goto	l344
  4222  001FAC  D024               	goto	u2380
  4223  001FAE                     l344:
  4224                           
  4225                           ;hw_layer.c: 381: {
  4226                           ;hw_layer.c: 382: if(m & onebit_high_tbl[i])
  4227  001FAE  5018               	movf	dicing_slicing@i,w,c
  4228  001FB0  0D01               	mullw	1
  4229  001FB2  0E29               	movlw	low _onebit_high_tbl
  4230  001FB4  24F3               	addwf	prodl,w,c
  4231  001FB6  6EF6               	movwf	tblptrl,c
  4232  001FB8  0E10               	movlw	high _onebit_high_tbl
  4233  001FBA  20F4               	addwfc	prodh,w,c
  4234  001FBC  6EF7               	movwf	tblptrh,c
  4235  001FBE                     	if	0	;There are less than 3 active tblptr bytes
  4236  001FBE                     	endif
  4237  001FBE  0008               	tblrd		*
  4238  001FC0  50F5               	movf	tablat,w,c
  4239  001FC2  1416               	andwf	dicing_slicing@m,w,c
  4240  001FC4  0900               	iorlw	0
  4241  001FC6  B4D8               	btfsc	status,2,c
  4242  001FC8  D014               	goto	l346
  4243                           
  4244                           ;hw_layer.c: 383: {
  4245                           ;hw_layer.c: 384: n |= onebit_high_tbl[7-i];
  4246  001FCA  5018               	movf	dicing_slicing@i,w,c
  4247  001FCC  6E14               	movwf	??_dicing_slicing& (0+255),c
  4248  001FCE  6A15               	clrf	(??_dicing_slicing+1)& (0+255),c
  4249  001FD0  1E14               	comf	??_dicing_slicing,f,c
  4250  001FD2  1E15               	comf	??_dicing_slicing+1,f,c
  4251  001FD4  4A14               	infsnz	??_dicing_slicing,f,c
  4252  001FD6  2A15               	incf	??_dicing_slicing+1,f,c
  4253  001FD8  0E07               	movlw	7
  4254  001FDA  2614               	addwf	??_dicing_slicing,f,c
  4255  001FDC  0E00               	movlw	0
  4256  001FDE  2215               	addwfc	??_dicing_slicing+1,f,c
  4257  001FE0  0E29               	movlw	low _onebit_high_tbl
  4258  001FE2  2414               	addwf	??_dicing_slicing,w,c
  4259  001FE4  6EF6               	movwf	tblptrl,c
  4260  001FE6  0E10               	movlw	high _onebit_high_tbl
  4261  001FE8  2015               	addwfc	??_dicing_slicing+1,w,c
  4262  001FEA  6EF7               	movwf	tblptrh,c
  4263  001FEC                     	if	0	;There are less than 3 active tblptr bytes
  4264  001FEC                     	endif
  4265  001FEC  0008               	tblrd		*
  4266  001FEE  50F5               	movf	tablat,w,c
  4267  001FF0  1217               	iorwf	dicing_slicing@n,f,c
  4268  001FF2                     l346:
  4269  001FF2  2A18               	incf	dicing_slicing@i,f,c
  4270  001FF4  D7D8               	goto	l3714
  4271  001FF6                     u2380:
  4272                           
  4273                           ;hw_layer.c: 385: }
  4274                           ;hw_layer.c: 386: }
  4275                           ;hw_layer.c: 388: logic_var.input_array[j].bytes = n;
  4276  001FF6  5019               	movf	dicing_slicing@j,w,c
  4277  001FF8  0D01               	mullw	1
  4278  001FFA  0E6C               	movlw	low (_logic_var+12)
  4279  001FFC  24F3               	addwf	prodl,w,c
  4280  001FFE  6ED9               	movwf	fsr2l,c
  4281  002000  0E00               	movlw	high (_logic_var+12)
  4282  002002  20F4               	addwfc	prodh,w,c
  4283  002004  6EDA               	movwf	fsr2h,c
  4284  002006  C017  FFDF         	movff	dicing_slicing@n,indf2
  4285  00200A  2A19               	incf	dicing_slicing@j,f,c
  4286  00200C  D7BA               	goto	l3704
  4287  00200E                     __end_of_dicing_slicing:
  4288                           	opt stack 0
  4289                           tblptru	equ	0xFF8
  4290                           tblptrh	equ	0xFF7
  4291                           tblptrl	equ	0xFF6
  4292                           tablat	equ	0xFF5
  4293                           prodh	equ	0xFF4
  4294                           prodl	equ	0xFF3
  4295                           intcon	equ	0xFF2
  4296                           postinc0	equ	0xFEE
  4297                           wreg	equ	0xFE8
  4298                           indf1	equ	0xFE7
  4299                           fsr1h	equ	0xFE2
  4300                           fsr1l	equ	0xFE1
  4301                           indf2	equ	0xFDF
  4302                           fsr2h	equ	0xFDA
  4303                           fsr2l	equ	0xFD9
  4304                           status	equ	0xFD8
  4305                           
  4306 ;; *************** function _decode_mbus_frame *****************
  4307 ;; Defined at:
  4308 ;;		line 46 in file "modbus.c"
  4309 ;; Parameters:    Size  Location     Type
  4310 ;;		None
  4311 ;; Auto vars:     Size  Location     Type
  4312 ;;  un1             2   43[BANK0 ] struct int_char
  4313 ;;  address         2   41[BANK0 ] unsigned int 
  4314 ;;  length          2   39[BANK0 ] unsigned int 
  4315 ;;  rec_no          2   37[BANK0 ] unsigned int 
  4316 ;;  temp            2   35[BANK0 ] unsigned int 
  4317 ;; Return value:  Size  Location     Type
  4318 ;;                  1    wreg      void 
  4319 ;; Registers used:
  4320 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4321 ;; Tracked objects:
  4322 ;;		On entry : 0/0
  4323 ;;		On exit  : 0/0
  4324 ;;		Unchanged: 0/0
  4325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4327 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4328 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4329 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4330 ;;Total ram usage:       14 bytes
  4331 ;; Hardware stack levels used:    1
  4332 ;; Hardware stack levels required when called:    8
  4333 ;; This function calls:
  4334 ;;		_CRC_16
  4335 ;;		_address_error
  4336 ;;		_function_error
  4337 ;;		_send_continuous
  4338 ;;		_send_log_rd
  4339 ;;		_write_single_holding
  4340 ;; This function is called by:
  4341 ;;		_basems_wait
  4342 ;; This function uses a non-reentrant model
  4343 ;;
  4344                           
  4345                           	psect	text20
  4346  00186A                     __ptext20:
  4347                           	opt stack 0
  4348  00186A                     _decode_mbus_frame:
  4349                           	opt stack 20
  4350                           
  4351                           ;modbus.c: 48: unsigned int rec_no;
  4352                           ;modbus.c: 49: union int_char un1;
  4353                           ;modbus.c: 50: unsigned int address,length;
  4354                           ;modbus.c: 51: unsigned int temp;
  4355                           ;modbus.c: 53: if(mbus_var.rx_framecmplt_flg == 0)return;
  4356                           
  4357                           ;incstack = 0
  4358  00186A  0101               	movlb	1	; () banked
  4359  00186C  51CA               	movf	(_mbus_var+102)& (0+255),w,b
  4360  00186E  B4D8               	btfsc	status,2,c
  4361  001870  0012               	return	
  4362                           
  4363                           ; BSR set to: 1
  4364                           ;modbus.c: 55: mbus_var.rx_framestart_flg = 0;
  4365                           
  4366                           ; BSR set to: 1
  4367                           
  4368                           ; BSR set to: 1
  4369  001872  0E00               	movlw	0
  4370  001874  6FCB               	movwf	(_mbus_var+103)& (0+255),b
  4371                           
  4372                           ;modbus.c: 56: mbus_var.rx_framecmplt_flg = 0;
  4373  001876  0E00               	movlw	0
  4374  001878  6FCA               	movwf	(_mbus_var+102)& (0+255),b
  4375                           
  4376                           ;modbus.c: 57: mbus_var.rx_tmr = 0;
  4377  00187A  0E00               	movlw	0
  4378  00187C  6F64               	movwf	_mbus_var& (0+255),b
  4379                           
  4380                           ; BSR set to: 1
  4381                           ;modbus.c: 59: if(mbus_var.rx_buff[0] != mbus_var.slave_id)
  4382  00187E  5197               	movf	(_mbus_var+51)& (0+255),w,b
  4383  001880  19CF               	xorwf	(_mbus_var+107)& (0+255),w,b
  4384  001882  B4D8               	btfsc	status,2,c
  4385  001884  D003               	goto	l658
  4386                           
  4387                           ; BSR set to: 1
  4388                           ;modbus.c: 60: {
  4389                           ;modbus.c: 61: mbus_var.ptr = 0;
  4390  001886  0E00               	movlw	0
  4391  001888  6FCE               	movwf	(_mbus_var+106)& (0+255),b
  4392                           
  4393                           ; BSR set to: 1
  4394                           ;modbus.c: 62: return;
  4395  00188A  0012               	return	
  4396  00188C                     l658:
  4397                           
  4398                           ; BSR set to: 1
  4399                           ;modbus.c: 63: }
  4400                           ;modbus.c: 65: temp = CRC_16(mbus_var.rx_buff,mbus_var.ptr-2);
  4401                           
  4402                           ; BSR set to: 1
  4403  00188C  0E97               	movlw	low (_mbus_var+51)
  4404  00188E  6E14               	movwf	CRC_16@ptr,c
  4405  001890  0E01               	movlw	high (_mbus_var+51)
  4406  001892  6E15               	movwf	CRC_16@ptr+1,c
  4407  001894  51CE               	movf	(_mbus_var+106)& (0+255),w,b
  4408  001896  0FFE               	addlw	254
  4409  001898  6E16               	movwf	CRC_16@cnts,c
  4410  00189A  EC4A  F012         	call	_CRC_16	;wreg free
  4411  00189E  C014  F0E7         	movff	?_CRC_16,decode_mbus_frame@temp
  4412  0018A2  C015  F0E8         	movff	?_CRC_16+1,decode_mbus_frame@temp+1
  4413                           
  4414                           ;modbus.c: 66: un1.char_val[1] = mbus_var.rx_buff[mbus_var.ptr-1];
  4415  0018A6  0EFF               	movlw	255
  4416  0018A8  0100               	movlb	0	; () banked
  4417  0018AA  6FE3               	movwf	??_decode_mbus_frame& (0+255),b
  4418  0018AC  0EFF               	movlw	255
  4419  0018AE  6FE4               	movwf	(??_decode_mbus_frame+1)& (0+255),b
  4420  0018B0  0101               	movlb	1	; () banked
  4421  0018B2  51CE               	movf	(_mbus_var+106)& (0+255),w,b
  4422  0018B4  0100               	movlb	0	; () banked
  4423  0018B6  6FE5               	movwf	(??_decode_mbus_frame+2)& (0+255),b
  4424  0018B8  6BE6               	clrf	(??_decode_mbus_frame+3)& (0+255),b
  4425  0018BA  51E3               	movf	??_decode_mbus_frame& (0+255),w,b
  4426  0018BC  27E5               	addwf	(??_decode_mbus_frame+2)& (0+255),f,b
  4427  0018BE  51E4               	movf	(??_decode_mbus_frame+1)& (0+255),w,b
  4428  0018C0  23E6               	addwfc	(??_decode_mbus_frame+3)& (0+255),f,b
  4429  0018C2  0E97               	movlw	low (_mbus_var+51)
  4430  0018C4  25E5               	addwf	(??_decode_mbus_frame+2)& (0+255),w,b
  4431  0018C6  6ED9               	movwf	fsr2l,c
  4432  0018C8  0E01               	movlw	high (_mbus_var+51)
  4433  0018CA  21E6               	addwfc	(??_decode_mbus_frame+3)& (0+255),w,b
  4434  0018CC  6EDA               	movwf	fsr2h,c
  4435  0018CE  50DF               	movf	indf2,w,c
  4436  0018D0  6FF0               	movwf	(decode_mbus_frame@un1+1)& (0+255),b
  4437                           
  4438                           ; BSR set to: 0
  4439                           ;modbus.c: 67: un1.char_val[0] = mbus_var.rx_buff[mbus_var.ptr-2];
  4440  0018D2  0EFE               	movlw	254
  4441  0018D4  6FE3               	movwf	??_decode_mbus_frame& (0+255),b
  4442  0018D6  0EFF               	movlw	255
  4443  0018D8  6FE4               	movwf	(??_decode_mbus_frame+1)& (0+255),b
  4444  0018DA  0101               	movlb	1	; () banked
  4445  0018DC  51CE               	movf	(_mbus_var+106)& (0+255),w,b
  4446  0018DE  0100               	movlb	0	; () banked
  4447  0018E0  6FE5               	movwf	(??_decode_mbus_frame+2)& (0+255),b
  4448  0018E2  6BE6               	clrf	(??_decode_mbus_frame+3)& (0+255),b
  4449  0018E4  51E3               	movf	??_decode_mbus_frame& (0+255),w,b
  4450  0018E6  27E5               	addwf	(??_decode_mbus_frame+2)& (0+255),f,b
  4451  0018E8  51E4               	movf	(??_decode_mbus_frame+1)& (0+255),w,b
  4452  0018EA  23E6               	addwfc	(??_decode_mbus_frame+3)& (0+255),f,b
  4453  0018EC  0E97               	movlw	low (_mbus_var+51)
  4454  0018EE  25E5               	addwf	(??_decode_mbus_frame+2)& (0+255),w,b
  4455  0018F0  6ED9               	movwf	fsr2l,c
  4456  0018F2  0E01               	movlw	high (_mbus_var+51)
  4457  0018F4  21E6               	addwfc	(??_decode_mbus_frame+3)& (0+255),w,b
  4458  0018F6  6EDA               	movwf	fsr2h,c
  4459  0018F8  50DF               	movf	indf2,w,c
  4460  0018FA  6FEF               	movwf	decode_mbus_frame@un1& (0+255),b
  4461                           
  4462                           ; BSR set to: 0
  4463                           ;modbus.c: 70: if(un1.int_val != temp)
  4464  0018FC  51E7               	movf	decode_mbus_frame@temp& (0+255),w,b
  4465  0018FE  19EF               	xorwf	decode_mbus_frame@un1& (0+255),w,b
  4466  001900  E104               	bnz	u3830
  4467  001902  51E8               	movf	(decode_mbus_frame@temp+1)& (0+255),w,b
  4468  001904  19F0               	xorwf	(decode_mbus_frame@un1+1)& (0+255),w,b
  4469  001906  B4D8               	btfsc	status,2,c
  4470  001908  D004               	goto	l659
  4471  00190A                     u3830:
  4472                           
  4473                           ; BSR set to: 0
  4474                           ;modbus.c: 71: {
  4475                           ;modbus.c: 72: mbus_var.ptr = 0;
  4476  00190A  0E00               	movlw	0
  4477  00190C  0101               	movlb	1	; () banked
  4478  00190E  6FCE               	movwf	(_mbus_var+106)& (0+255),b
  4479                           
  4480                           ; BSR set to: 1
  4481                           ;modbus.c: 73: return;
  4482  001910  0012               	return	
  4483  001912                     l659:
  4484                           
  4485                           ; BSR set to: 0
  4486                           ;modbus.c: 74: }
  4487                           ;modbus.c: 76: un1.char_val[0] = mbus_var.rx_buff[3];
  4488  001912  C19A  F0EF         	movff	_mbus_var+54,decode_mbus_frame@un1
  4489                           
  4490                           ;modbus.c: 77: un1.char_val[1] = mbus_var.rx_buff[2];
  4491  001916  C199  F0F0         	movff	_mbus_var+53,decode_mbus_frame@un1+1
  4492                           
  4493                           ;modbus.c: 78: address=un1.int_val;
  4494  00191A  C0EF  F0ED         	movff	decode_mbus_frame@un1,decode_mbus_frame@address
  4495  00191E  C0F0  F0EE         	movff	decode_mbus_frame@un1+1,decode_mbus_frame@address+1
  4496                           
  4497                           ;modbus.c: 80: un1.char_val[0] = mbus_var.rx_buff[5];
  4498  001922  C19C  F0EF         	movff	_mbus_var+56,decode_mbus_frame@un1
  4499                           
  4500                           ;modbus.c: 81: un1.char_val[1] = mbus_var.rx_buff[4];
  4501  001926  C19B  F0F0         	movff	_mbus_var+55,decode_mbus_frame@un1+1
  4502                           
  4503                           ;modbus.c: 82: length=un1.int_val;
  4504  00192A  C0EF  F0EB         	movff	decode_mbus_frame@un1,decode_mbus_frame@length
  4505  00192E  C0F0  F0EC         	movff	decode_mbus_frame@un1+1,decode_mbus_frame@length+1
  4506                           
  4507                           ;modbus.c: 85: switch(mbus_var.rx_buff[1])
  4508  001932  D050               	goto	l660
  4509  001934                     
  4510                           ;modbus.c: 88: if((address < 25)&&(length < 25))
  4511                           
  4512                           ; BSR set to: 0
  4513  001934  0100               	movlb	0	; () banked
  4514  001936  51EE               	movf	(decode_mbus_frame@address+1)& (0+255),w,b
  4515  001938  E115               	bnz	l5156
  4516  00193A  0E19               	movlw	25
  4517  00193C  5DED               	subwf	decode_mbus_frame@address& (0+255),w,b
  4518  00193E  B0D8               	btfsc	status,0,c
  4519  001940  D011               	goto	l662
  4520                           
  4521                           ; BSR set to: 0
  4522  001942  51EC               	movf	(decode_mbus_frame@length+1)& (0+255),w,b
  4523  001944  E10F               	bnz	l5156
  4524  001946  0E19               	movlw	25
  4525  001948  5DEB               	subwf	decode_mbus_frame@length& (0+255),w,b
  4526  00194A  B0D8               	btfsc	status,0,c
  4527  00194C  D00B               	goto	l662
  4528                           
  4529                           ; BSR set to: 0
  4530                           ;modbus.c: 89: {
  4531                           ;modbus.c: 90: send_continuous(length,address);
  4532  00194E  C0EB  F01C         	movff	decode_mbus_frame@length,send_continuous@length
  4533  001952  C0EC  F01D         	movff	decode_mbus_frame@length+1,send_continuous@length+1
  4534  001956  C0ED  F01E         	movff	decode_mbus_frame@address,send_continuous@address
  4535  00195A  C0EE  F01F         	movff	decode_mbus_frame@address+1,send_continuous@address+1
  4536  00195E  ECF6  F00C         	call	_send_continuous	;wreg free
  4537                           
  4538                           ;modbus.c: 91: }
  4539  001962  0012               	return	
  4540  001964                     l662:
  4541  001964                     l5156:
  4542                           
  4543                           ;modbus.c: 92: else
  4544                           ;modbus.c: 93: address_error(mbus_var.rx_buff[1]);
  4545  001964  C198  F01C         	movff	_mbus_var+52,address_error@func
  4546  001968  6A1D               	clrf	address_error@func+1,c
  4547  00196A  EC95  F013         	call	_address_error	;wreg free
  4548                           
  4549                           ;modbus.c: 94: break;
  4550  00196E  0012               	return	
  4551  001970                     
  4552                           ;modbus.c: 97: if(address < 12)
  4553  001970  0100               	movlb	0	; () banked
  4554  001972  51EE               	movf	(decode_mbus_frame@address+1)& (0+255),w,b
  4555  001974  E10F               	bnz	l5162
  4556  001976  0E0C               	movlw	12
  4557  001978  5DED               	subwf	decode_mbus_frame@address& (0+255),w,b
  4558  00197A  B0D8               	btfsc	status,0,c
  4559  00197C  D00B               	goto	l666
  4560                           
  4561                           ; BSR set to: 0
  4562                           ;modbus.c: 98: {
  4563                           ;modbus.c: 99: write_single_holding(length,address);
  4564  00197E  C0EB  F031         	movff	decode_mbus_frame@length,write_single_holding@length
  4565  001982  C0EC  F032         	movff	decode_mbus_frame@length+1,write_single_holding@length+1
  4566  001986  C0ED  F033         	movff	decode_mbus_frame@address,write_single_holding@address
  4567  00198A  C0EE  F034         	movff	decode_mbus_frame@address+1,write_single_holding@address+1
  4568  00198E  EC67  F00B         	call	_write_single_holding	;wreg free
  4569                           
  4570                           ;modbus.c: 100: }
  4571  001992  0012               	return	
  4572  001994                     l666:
  4573  001994                     l5162:
  4574                           
  4575                           ;modbus.c: 101: else
  4576                           ;modbus.c: 102: address_error(mbus_var.rx_buff[1]);
  4577  001994  C198  F01C         	movff	_mbus_var+52,address_error@func
  4578  001998  6A1D               	clrf	address_error@func+1,c
  4579  00199A  EC95  F013         	call	_address_error	;wreg free
  4580                           
  4581                           ;modbus.c: 103: break;
  4582  00199E  0012               	return	
  4583  0019A0                     l668:
  4584                           
  4585                           ; BSR set to: 1
  4586  0019A0  C199  F0E9         	movff	_mbus_var+53,decode_mbus_frame@rec_no
  4587  0019A4  0100               	movlb	0	; () banked
  4588  0019A6  6BEA               	clrf	(decode_mbus_frame@rec_no+1)& (0+255),b
  4589                           
  4590                           ; BSR set to: 0
  4591                           ;modbus.c: 147: rec_no <<= 8;
  4592  0019A8  51E9               	movf	decode_mbus_frame@rec_no& (0+255),w,b
  4593  0019AA  6FEA               	movwf	(decode_mbus_frame@rec_no+1)& (0+255),b
  4594  0019AC  6BE9               	clrf	decode_mbus_frame@rec_no& (0+255),b
  4595                           
  4596                           ; BSR set to: 0
  4597                           ;modbus.c: 148: rec_no += (int)mbus_var.rx_buff[3];
  4598  0019AE  0101               	movlb	1	; () banked
  4599  0019B0  519A               	movf	(_mbus_var+54)& (0+255),w,b
  4600  0019B2  0100               	movlb	0	; () banked
  4601  0019B4  27E9               	addwf	decode_mbus_frame@rec_no& (0+255),f,b
  4602  0019B6  0E00               	movlw	0
  4603  0019B8  23EA               	addwfc	(decode_mbus_frame@rec_no+1)& (0+255),f,b
  4604                           
  4605                           ; BSR set to: 0
  4606                           ;modbus.c: 149: send_log_rd(rec_no);
  4607  0019BA  C0E9  F022         	movff	decode_mbus_frame@rec_no,send_log_rd@record
  4608  0019BE  C0EA  F023         	movff	decode_mbus_frame@rec_no+1,send_log_rd@record+1
  4609  0019C2  ECAF  F00D         	call	_send_log_rd	;wreg free
  4610                           
  4611                           ;modbus.c: 151: break;
  4612  0019C6  0012               	return	
  4613  0019C8  C198  F01C         	movff	_mbus_var+52,function_error@func
  4614  0019CC  6A1D               	clrf	function_error@func+1,c
  4615  0019CE  ECB9  F013         	call	_function_error	;wreg free
  4616                           
  4617                           ;modbus.c: 156: }
  4618                           
  4619                           ;modbus.c: 155: break;
  4620  0019D2  0012               	return	
  4621  0019D4                     l660:
  4622  0019D4  0101               	movlb	1	; () banked
  4623  0019D6  5198               	movf	(_mbus_var+52)& (0+255),w,b
  4624                           
  4625                           ; Switch size 1, requested type "space"
  4626                           ; Number of cases is 3, Range of values is 3 to 8
  4627                           ; switch strategies available:
  4628                           ; Name         Instructions Cycles
  4629                           ; simple_byte           10     6 (average)
  4630                           ;	Chosen strategy is simple_byte
  4631  0019D8  0A03               	xorlw	3	; case 3
  4632  0019DA  B4D8               	btfsc	status,2,c
  4633  0019DC  D7AB               	goto	l661
  4634  0019DE  0A05               	xorlw	5	; case 6
  4635  0019E0  B4D8               	btfsc	status,2,c
  4636  0019E2  D7C6               	goto	l665
  4637  0019E4  0A0E               	xorlw	14	; case 8
  4638  0019E6  B4D8               	btfsc	status,2,c
  4639  0019E8  D7DB               	goto	l668
  4640  0019EA  D7EE               	goto	l669
  4641  0019EC                     __end_of_decode_mbus_frame:
  4642                           	opt stack 0
  4643                           tblptru	equ	0xFF8
  4644                           tblptrh	equ	0xFF7
  4645                           tblptrl	equ	0xFF6
  4646                           tablat	equ	0xFF5
  4647                           prodh	equ	0xFF4
  4648                           prodl	equ	0xFF3
  4649                           intcon	equ	0xFF2
  4650                           postinc0	equ	0xFEE
  4651                           wreg	equ	0xFE8
  4652                           indf1	equ	0xFE7
  4653                           fsr1h	equ	0xFE2
  4654                           fsr1l	equ	0xFE1
  4655                           indf2	equ	0xFDF
  4656                           fsr2h	equ	0xFDA
  4657                           fsr2l	equ	0xFD9
  4658                           status	equ	0xFD8
  4659                           
  4660 ;; *************** function _write_single_holding *****************
  4661 ;; Defined at:
  4662 ;;		line 386 in file "modbus.c"
  4663 ;; Parameters:    Size  Location     Type
  4664 ;;  length          2   48[COMRAM] unsigned int 
  4665 ;;  address         2   50[COMRAM] unsigned int 
  4666 ;; Auto vars:     Size  Location     Type
  4667 ;;		None
  4668 ;; Return value:  Size  Location     Type
  4669 ;;                  1    wreg      void 
  4670 ;; Registers used:
  4671 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4672 ;; Tracked objects:
  4673 ;;		On entry : 0/0
  4674 ;;		On exit  : 0/0
  4675 ;;		Unchanged: 0/0
  4676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4677 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4679 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4680 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4681 ;;Total ram usage:        6 bytes
  4682 ;; Hardware stack levels used:    1
  4683 ;; Hardware stack levels required when called:    7
  4684 ;; This function calls:
  4685 ;;		_FillNSend_Echo_Frame
  4686 ;;		_accept_key
  4687 ;;		_address_error
  4688 ;;		_hex2pbcd
  4689 ;;		_i2c_int_wr
  4690 ;;		_log_wr
  4691 ;;		_reset_key
  4692 ;;		_rtc_byte_wr
  4693 ;;		_silence_key
  4694 ;;		_test_key
  4695 ;; This function is called by:
  4696 ;;		_decode_mbus_frame
  4697 ;; This function uses a non-reentrant model
  4698 ;;
  4699                           
  4700                           	psect	text21
  4701  0016CE                     __ptext21:
  4702                           	opt stack 0
  4703  0016CE                     _write_single_holding:
  4704                           	opt stack 20
  4705                           
  4706                           ;modbus.c: 388: switch(address)
  4707                           
  4708                           ;incstack = 0
  4709  0016CE  D0A1               	goto	l700
  4710  0016D0  0431               	decf	write_single_holding@length,w,c
  4711  0016D2  1032               	iorwf	write_single_holding@length+1,w,c
  4712  0016D4  A4D8               	btfss	status,2,c
  4713  0016D6  D005               	goto	l702
  4714                           
  4715                           ;modbus.c: 391: {
  4716                           ;modbus.c: 392: silence_key();
  4717  0016D8  ECDD  F013         	call	_silence_key	;wreg free
  4718                           
  4719                           ;modbus.c: 393: FillNSend_Echo_Frame();
  4720  0016DC  EC4B  F013         	call	_FillNSend_Echo_Frame	;wreg free
  4721                           
  4722                           ;modbus.c: 394: }
  4723  0016E0  0012               	return	
  4724  0016E2                     l702:
  4725                           
  4726                           ;modbus.c: 395: else
  4727                           ;modbus.c: 396: address_error(mbus_var.rx_buff[1]);
  4728  0016E2  C198  F01C         	movff	_mbus_var+52,address_error@func
  4729  0016E6  6A1D               	clrf	address_error@func+1,c
  4730  0016E8  EC95  F013         	call	_address_error	;wreg free
  4731                           
  4732                           ;modbus.c: 397: break;
  4733  0016EC  0012               	return	
  4734  0016EE  0E02               	movlw	2
  4735  0016F0  1831               	xorwf	write_single_holding@length,w,c
  4736  0016F2  1032               	iorwf	write_single_holding@length+1,w,c
  4737  0016F4  A4D8               	btfss	status,2,c
  4738  0016F6  D005               	goto	l706
  4739                           
  4740                           ;modbus.c: 400: {
  4741                           ;modbus.c: 401: accept_key();
  4742  0016F8  ECA9  F012         	call	_accept_key	;wreg free
  4743                           
  4744                           ;modbus.c: 402: FillNSend_Echo_Frame();
  4745  0016FC  EC4B  F013         	call	_FillNSend_Echo_Frame	;wreg free
  4746                           
  4747                           ;modbus.c: 403: }
  4748  001700  0012               	return	
  4749  001702                     l706:
  4750                           
  4751                           ;modbus.c: 404: else
  4752                           ;modbus.c: 405: address_error(mbus_var.rx_buff[1]);
  4753  001702  C198  F01C         	movff	_mbus_var+52,address_error@func
  4754  001706  6A1D               	clrf	address_error@func+1,c
  4755  001708  EC95  F013         	call	_address_error	;wreg free
  4756                           
  4757                           ;modbus.c: 406: break;
  4758  00170C  0012               	return	
  4759  00170E  0E03               	movlw	3
  4760  001710  1831               	xorwf	write_single_holding@length,w,c
  4761  001712  1032               	iorwf	write_single_holding@length+1,w,c
  4762  001714  A4D8               	btfss	status,2,c
  4763  001716  D005               	goto	l709
  4764                           
  4765                           ;modbus.c: 409: {
  4766                           ;modbus.c: 410: reset_key();
  4767  001718  ECD9  F010         	call	_reset_key	;wreg free
  4768                           
  4769                           ;modbus.c: 411: FillNSend_Echo_Frame();
  4770  00171C  EC4B  F013         	call	_FillNSend_Echo_Frame	;wreg free
  4771                           
  4772                           ;modbus.c: 412: }
  4773  001720  0012               	return	
  4774  001722                     l709:
  4775                           
  4776                           ;modbus.c: 413: else
  4777                           ;modbus.c: 414: address_error(mbus_var.rx_buff[1]);
  4778  001722  C198  F01C         	movff	_mbus_var+52,address_error@func
  4779  001726  6A1D               	clrf	address_error@func+1,c
  4780  001728  EC95  F013         	call	_address_error	;wreg free
  4781                           
  4782                           ;modbus.c: 415: break;
  4783  00172C  0012               	return	
  4784  00172E  0E04               	movlw	4
  4785  001730  1831               	xorwf	write_single_holding@length,w,c
  4786  001732  1032               	iorwf	write_single_holding@length+1,w,c
  4787  001734  A4D8               	btfss	status,2,c
  4788  001736  D005               	goto	l712
  4789                           
  4790                           ;modbus.c: 418: {
  4791                           ;modbus.c: 419: test_key();
  4792  001738  EC71  F013         	call	_test_key	;wreg free
  4793                           
  4794                           ;modbus.c: 420: FillNSend_Echo_Frame();
  4795  00173C  EC4B  F013         	call	_FillNSend_Echo_Frame	;wreg free
  4796                           
  4797                           ;modbus.c: 421: }
  4798  001740  0012               	return	
  4799  001742                     l712:
  4800                           
  4801                           ;modbus.c: 422: else
  4802                           ;modbus.c: 423: address_error(mbus_var.rx_buff[1]);
  4803  001742  C198  F01C         	movff	_mbus_var+52,address_error@func
  4804  001746  6A1D               	clrf	address_error@func+1,c
  4805  001748  EC95  F013         	call	_address_error	;wreg free
  4806                           
  4807                           ;modbus.c: 425: break;
  4808  00174C  0012               	return	
  4809  00174E  0EEF               	movlw	239
  4810  001750  1831               	xorwf	write_single_holding@length,w,c
  4811  001752  E103               	bnz	u3751
  4812  001754  0EEF               	movlw	239
  4813  001756  1832               	xorwf	write_single_holding@length+1,w,c
  4814  001758  A4D8               	btfss	status,2,c
  4815  00175A                     u3751:
  4816  00175A  0012               	return	
  4817                           
  4818                           ;modbus.c: 428: {
  4819                           ;modbus.c: 429: gen_var.log_data_cntr = 0;
  4820  00175C  0E00               	movlw	0
  4821  00175E  6E42               	movwf	_gen_var+12,c
  4822  001760  0E00               	movlw	0
  4823  001762  6E41               	movwf	_gen_var+11,c
  4824                           
  4825                           ;modbus.c: 430: log_wr();
  4826  001764  EC8B  F00A         	call	_log_wr	;wreg free
  4827                           
  4828                           ;modbus.c: 431: FillNSend_Echo_Frame();
  4829  001768  EC4B  F013         	call	_FillNSend_Echo_Frame	;wreg free
  4830                           
  4831                           ;modbus.c: 432: }
  4832                           ;modbus.c: 433: break;
  4833  00176C  0012               	return	
  4834  00176E                     l716:
  4835                           
  4836                           ; BSR set to: 0
  4837  00176E  C031  F03D         	movff	write_single_holding@length,_gen_var+7
  4838                           
  4839                           ; BSR set to: 0
  4840                           ;modbus.c: 436: rtc_byte_wr(6,hex2pbcd(gen_var.rtc_read[2]));
  4841  001772  503D               	movf	_gen_var+7,w,c
  4842  001774  ECA1  F014         	call	_hex2pbcd
  4843  001778  6E17               	movwf	rtc_byte_wr@dta,c
  4844  00177A  0E06               	movlw	6
  4845  00177C  EC8C  F014         	call	_rtc_byte_wr
  4846                           
  4847                           ;modbus.c: 437: FillNSend_Echo_Frame();
  4848  001780  EC4B  F013         	call	_FillNSend_Echo_Frame	;wreg free
  4849                           
  4850                           ;modbus.c: 438: break;
  4851  001784  0012               	return	
  4852  001786                     l717:
  4853                           
  4854                           ; BSR set to: 0
  4855  001786  C031  F03C         	movff	write_single_holding@length,_gen_var+6
  4856                           
  4857                           ; BSR set to: 0
  4858                           ;modbus.c: 441: rtc_byte_wr(5,hex2pbcd(gen_var.rtc_read[1]));
  4859  00178A  503C               	movf	_gen_var+6,w,c
  4860  00178C  ECA1  F014         	call	_hex2pbcd
  4861  001790  6E17               	movwf	rtc_byte_wr@dta,c
  4862  001792  0E05               	movlw	5
  4863  001794  EC8C  F014         	call	_rtc_byte_wr
  4864                           
  4865                           ;modbus.c: 442: FillNSend_Echo_Frame();
  4866  001798  EC4B  F013         	call	_FillNSend_Echo_Frame	;wreg free
  4867                           
  4868                           ;modbus.c: 443: break;
  4869  00179C  0012               	return	
  4870  00179E                     l718:
  4871                           
  4872                           ; BSR set to: 0
  4873  00179E  C031  F03B         	movff	write_single_holding@length,_gen_var+5
  4874                           
  4875                           ; BSR set to: 0
  4876                           ;modbus.c: 446: rtc_byte_wr(4,hex2pbcd(gen_var.rtc_read[0]));
  4877  0017A2  503B               	movf	_gen_var+5,w,c
  4878  0017A4  ECA1  F014         	call	_hex2pbcd
  4879  0017A8  6E17               	movwf	rtc_byte_wr@dta,c
  4880  0017AA  0E04               	movlw	4
  4881  0017AC  EC8C  F014         	call	_rtc_byte_wr
  4882                           
  4883                           ;modbus.c: 447: FillNSend_Echo_Frame();
  4884  0017B0  EC4B  F013         	call	_FillNSend_Echo_Frame	;wreg free
  4885                           
  4886                           ;modbus.c: 448: break;
  4887  0017B4  0012               	return	
  4888  0017B6                     l719:
  4889                           
  4890                           ; BSR set to: 0
  4891  0017B6  C031  F03E         	movff	write_single_holding@length,_gen_var+8
  4892                           
  4893                           ; BSR set to: 0
  4894                           ;modbus.c: 451: rtc_byte_wr(2,hex2pbcd(gen_var.rtc_read[3]));
  4895  0017BA  503E               	movf	_gen_var+8,w,c
  4896  0017BC  ECA1  F014         	call	_hex2pbcd
  4897  0017C0  6E17               	movwf	rtc_byte_wr@dta,c
  4898  0017C2  0E02               	movlw	2
  4899  0017C4  EC8C  F014         	call	_rtc_byte_wr
  4900                           
  4901                           ;modbus.c: 452: FillNSend_Echo_Frame();
  4902  0017C8  EC4B  F013         	call	_FillNSend_Echo_Frame	;wreg free
  4903                           
  4904                           ;modbus.c: 453: break;
  4905  0017CC  0012               	return	
  4906  0017CE                     l720:
  4907                           
  4908                           ; BSR set to: 0
  4909  0017CE  C031  F03F         	movff	write_single_holding@length,_gen_var+9
  4910                           
  4911                           ; BSR set to: 0
  4912                           ;modbus.c: 456: rtc_byte_wr(1,hex2pbcd(gen_var.rtc_read[4]));
  4913  0017D2  503F               	movf	_gen_var+9,w,c
  4914  0017D4  ECA1  F014         	call	_hex2pbcd
  4915  0017D8  6E17               	movwf	rtc_byte_wr@dta,c
  4916  0017DA  0E01               	movlw	1
  4917  0017DC  EC8C  F014         	call	_rtc_byte_wr
  4918                           
  4919                           ;modbus.c: 457: FillNSend_Echo_Frame();
  4920  0017E0  EC4B  F013         	call	_FillNSend_Echo_Frame	;wreg free
  4921                           
  4922                           ;modbus.c: 458: break;
  4923  0017E4  0012               	return	
  4924  0017E6                     l721:
  4925                           
  4926                           ; BSR set to: 0
  4927  0017E6  C031  F041         	movff	write_single_holding@length,_gen_var+11
  4928  0017EA  C032  F042         	movff	write_single_holding@length+1,_gen_var+12
  4929                           
  4930                           ; BSR set to: 0
  4931                           ;modbus.c: 467: i2c_int_wr(0,1,gen_var.log_data_cntr);
  4932  0017EE  0E01               	movlw	1
  4933  0017F0  6E22               	movwf	i2c_int_wr@adr,c
  4934  0017F2  0E00               	movlw	0
  4935  0017F4  6E23               	movwf	i2c_int_wr@adr+1,c
  4936  0017F6  0E00               	movlw	0
  4937  0017F8  6E24               	movwf	i2c_int_wr@adr+2,c
  4938  0017FA  0E00               	movlw	0
  4939  0017FC  6E25               	movwf	i2c_int_wr@adr+3,c
  4940  0017FE  C041  F026         	movff	_gen_var+11,i2c_int_wr@dta
  4941  001802  C042  F027         	movff	_gen_var+12,i2c_int_wr@dta+1
  4942  001806  0E00               	movlw	0
  4943  001808  EC25  F013         	call	_i2c_int_wr
  4944                           
  4945                           ;modbus.c: 468: FillNSend_Echo_Frame();
  4946  00180C  EC4B  F013         	call	_FillNSend_Echo_Frame	;wreg free
  4947                           
  4948                           ;modbus.c: 473: }
  4949                           
  4950                           ;modbus.c: 469: break;
  4951  001810  0012               	return	
  4952  001812                     l700:
  4953  001812  C033  F0E1         	movff	write_single_holding@address,??_write_single_holding
  4954  001816  C034  F0E2         	movff	write_single_holding@address+1,??_write_single_holding+1
  4955                           
  4956                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4957                           ; Switch size 1, requested type "space"
  4958                           ; Number of cases is 1, Range of values is 0 to 0
  4959                           ; switch strategies available:
  4960                           ; Name         Instructions Cycles
  4961                           ; simple_byte            4     3 (average)
  4962                           ;	Chosen strategy is simple_byte
  4963  00181A  0100               	movlb	0	; () banked
  4964  00181C  51E2               	movf	(??_write_single_holding+1)& (0+255),w,b
  4965  00181E  0A00               	xorlw	0	; case 0
  4966  001820  A4D8               	btfss	status,2,c
  4967  001822  0012               	return	
  4968                           
  4969                           ; BSR set to: 0
  4970                           ; Switch size 1, requested type "space"
  4971                           ; Number of cases is 11, Range of values is 0 to 11
  4972                           ; switch strategies available:
  4973                           ; Name         Instructions Cycles
  4974                           ; simple_byte           34    18 (average)
  4975                           ;	Chosen strategy is simple_byte
  4976  001824  51E1               	movf	??_write_single_holding& (0+255),w,b
  4977  001826  0A00               	xorlw	0	; case 0
  4978  001828  B4D8               	btfsc	status,2,c
  4979  00182A  D752               	goto	l701
  4980  00182C  0A01               	xorlw	1	; case 1
  4981  00182E  B4D8               	btfsc	status,2,c
  4982  001830  D75E               	goto	l705
  4983  001832  0A03               	xorlw	3	; case 2
  4984  001834  B4D8               	btfsc	status,2,c
  4985  001836  D76B               	goto	l708
  4986  001838  0A06               	xorlw	6	; case 4
  4987  00183A  B4D8               	btfsc	status,2,c
  4988  00183C  D778               	goto	l711
  4989  00183E  0A01               	xorlw	1	; case 5
  4990  001840  B4D8               	btfsc	status,2,c
  4991  001842  D785               	goto	l714
  4992  001844  0A03               	xorlw	3	; case 6
  4993  001846  B4D8               	btfsc	status,2,c
  4994  001848  D792               	goto	l716
  4995  00184A  0A01               	xorlw	1	; case 7
  4996  00184C  B4D8               	btfsc	status,2,c
  4997  00184E  D79B               	goto	l717
  4998  001850  0A0F               	xorlw	15	; case 8
  4999  001852  B4D8               	btfsc	status,2,c
  5000  001854  D7A4               	goto	l718
  5001  001856  0A01               	xorlw	1	; case 9
  5002  001858  B4D8               	btfsc	status,2,c
  5003  00185A  D7AD               	goto	l719
  5004  00185C  0A03               	xorlw	3	; case 10
  5005  00185E  B4D8               	btfsc	status,2,c
  5006  001860  D7B6               	goto	l720
  5007  001862  0A01               	xorlw	1	; case 11
  5008  001864  A4D8               	btfss	status,2,c
  5009  001866  0012               	return	
  5010  001868  D7BE               	goto	l721
  5011  00186A                     __end_of_write_single_holding:
  5012                           	opt stack 0
  5013                           tblptru	equ	0xFF8
  5014                           tblptrh	equ	0xFF7
  5015                           tblptrl	equ	0xFF6
  5016                           tablat	equ	0xFF5
  5017                           prodh	equ	0xFF4
  5018                           prodl	equ	0xFF3
  5019                           intcon	equ	0xFF2
  5020                           postinc0	equ	0xFEE
  5021                           wreg	equ	0xFE8
  5022                           indf1	equ	0xFE7
  5023                           fsr1h	equ	0xFE2
  5024                           fsr1l	equ	0xFE1
  5025                           indf2	equ	0xFDF
  5026                           fsr2h	equ	0xFDA
  5027                           fsr2l	equ	0xFD9
  5028                           status	equ	0xFD8
  5029                           
  5030 ;; *************** function _test_key *****************
  5031 ;; Defined at:
  5032 ;;		line 37 in file "logic.c"
  5033 ;; Parameters:    Size  Location     Type
  5034 ;;		None
  5035 ;; Auto vars:     Size  Location     Type
  5036 ;;  i               1   19[COMRAM] unsigned char 
  5037 ;; Return value:  Size  Location     Type
  5038 ;;                  1    wreg      void 
  5039 ;; Registers used:
  5040 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5041 ;; Tracked objects:
  5042 ;;		On entry : 0/0
  5043 ;;		On exit  : 0/0
  5044 ;;		Unchanged: 0/0
  5045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5047 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5049 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5050 ;;Total ram usage:        1 bytes
  5051 ;; Hardware stack levels used:    1
  5052 ;; Hardware stack levels required when called:    2
  5053 ;; This function calls:
  5054 ;;		Nothing
  5055 ;; This function is called by:
  5056 ;;		_fault_detection
  5057 ;;		_write_single_holding
  5058 ;; This function uses a non-reentrant model
  5059 ;;
  5060                           
  5061                           	psect	text22
  5062  0026E2                     __ptext22:
  5063                           	opt stack 0
  5064  0026E2                     _test_key:
  5065                           	opt stack 27
  5066                           
  5067                           ;logic.c: 39: unsigned char i;
  5068                           ;logic.c: 40: logic_var.status_flg |= 0x01;
  5069                           
  5070                           ;incstack = 0
  5071  0026E2  0100               	movlb	0	; () banked
  5072  0026E4  81AF               	bsf	(_logic_var+79)& (0+255),0,b
  5073                           
  5074                           ; BSR set to: 0
  5075                           ;logic.c: 41: for(i = 0; i < 3; i++)
  5076  0026E6  0E00               	movlw	0
  5077  0026E8  6E14               	movwf	test_key@i,c
  5078  0026EA                     l4738:
  5079                           
  5080                           ; BSR set to: 0
  5081  0026EA  0E02               	movlw	2
  5082  0026EC  6414               	cpfsgt	test_key@i,c
  5083  0026EE  D001               	goto	l401
  5084  0026F0  D016               	goto	u3570
  5085  0026F2                     l401:
  5086                           
  5087                           ;logic.c: 42: {
  5088                           ;logic.c: 43: logic_var.hist_hold_data[i].bytes = 0;
  5089                           
  5090                           ; BSR set to: 0
  5091  0026F2  5014               	movf	test_key@i,w,c
  5092  0026F4  0D01               	mullw	1
  5093  0026F6  0E93               	movlw	low (_logic_var+51)
  5094  0026F8  24F3               	addwf	prodl,w,c
  5095  0026FA  6ED9               	movwf	fsr2l,c
  5096  0026FC  0E00               	movlw	high (_logic_var+51)
  5097  0026FE  20F4               	addwfc	prodh,w,c
  5098  002700  6EDA               	movwf	fsr2h,c
  5099  002702  0E00               	movlw	0
  5100  002704  6EDF               	movwf	indf2,c
  5101                           
  5102                           ;logic.c: 44: logic_var.hold_data[i].bytes = 0xff;
  5103  002706  5014               	movf	test_key@i,w,c
  5104  002708  0D01               	mullw	1
  5105  00270A  0E90               	movlw	low (_logic_var+48)
  5106  00270C  24F3               	addwf	prodl,w,c
  5107  00270E  6ED9               	movwf	fsr2l,c
  5108  002710  0E00               	movlw	high (_logic_var+48)
  5109  002712  20F4               	addwfc	prodh,w,c
  5110  002714  6EDA               	movwf	fsr2h,c
  5111  002716  0EFF               	movlw	255
  5112  002718  6EDF               	movwf	indf2,c
  5113  00271A  2A14               	incf	test_key@i,f,c
  5114  00271C  D7E6               	goto	l4738
  5115  00271E                     u3570:
  5116                           
  5117                           ;logic.c: 47: }
  5118                           ;logic.c: 49: logic_var.rly_status |= 0x03;
  5119  00271E  0E03               	movlw	3
  5120  002720  0100               	movlb	0	; () banked
  5121  002722  13B0               	iorwf	(_logic_var+80)& (0+255),f,b
  5122                           
  5123                           ; BSR set to: 0
  5124                           ;logic.c: 50: LATBbits.LATB4 = 0;
  5125  002724  988A               	bcf	3978,4,c	;volatile
  5126                           
  5127                           ; BSR set to: 0
  5128                           ;logic.c: 51: LATBbits.LATB5 = 0;
  5129  002726  9A8A               	bcf	3978,5,c	;volatile
  5130                           
  5131                           ; BSR set to: 0
  5132  002728  0012               	return		;funcret
  5133  00272A                     __end_of_test_key:
  5134                           	opt stack 0
  5135                           tblptru	equ	0xFF8
  5136                           tblptrh	equ	0xFF7
  5137                           tblptrl	equ	0xFF6
  5138                           tablat	equ	0xFF5
  5139                           prodh	equ	0xFF4
  5140                           prodl	equ	0xFF3
  5141                           intcon	equ	0xFF2
  5142                           postinc0	equ	0xFEE
  5143                           wreg	equ	0xFE8
  5144                           indf1	equ	0xFE7
  5145                           fsr1h	equ	0xFE2
  5146                           fsr1l	equ	0xFE1
  5147                           indf2	equ	0xFDF
  5148                           fsr2h	equ	0xFDA
  5149                           fsr2l	equ	0xFD9
  5150                           status	equ	0xFD8
  5151                           
  5152 ;; *************** function _silence_key *****************
  5153 ;; Defined at:
  5154 ;;		line 55 in file "logic.c"
  5155 ;; Parameters:    Size  Location     Type
  5156 ;;		None
  5157 ;; Auto vars:     Size  Location     Type
  5158 ;;  i               1   19[COMRAM] unsigned char 
  5159 ;; Return value:  Size  Location     Type
  5160 ;;                  1    wreg      void 
  5161 ;; Registers used:
  5162 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5163 ;; Tracked objects:
  5164 ;;		On entry : 0/0
  5165 ;;		On exit  : 0/0
  5166 ;;		Unchanged: 0/0
  5167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5169 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5171 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5172 ;;Total ram usage:        1 bytes
  5173 ;; Hardware stack levels used:    1
  5174 ;; Hardware stack levels required when called:    2
  5175 ;; This function calls:
  5176 ;;		Nothing
  5177 ;; This function is called by:
  5178 ;;		_fault_detection
  5179 ;;		_write_single_holding
  5180 ;; This function uses a non-reentrant model
  5181 ;;
  5182                           
  5183                           	psect	text23
  5184  0027BA                     __ptext23:
  5185                           	opt stack 0
  5186  0027BA                     _silence_key:
  5187                           	opt stack 27
  5188                           
  5189                           ;logic.c: 57: unsigned char i;
  5190                           ;logic.c: 59: logic_var.status_flg|=0x08;
  5191                           
  5192                           ; BSR set to: 0
  5193                           ;incstack = 0
  5194  0027BA  0100               	movlb	0	; () banked
  5195  0027BC  87AF               	bsf	(_logic_var+79)& (0+255),3,b
  5196                           
  5197                           ; BSR set to: 0
  5198                           ;logic.c: 60: for(i = 0; i < 3; i++)
  5199  0027BE  0E00               	movlw	0
  5200  0027C0  6E14               	movwf	silence_key@i,c
  5201  0027C2                     l4758:
  5202                           
  5203                           ; BSR set to: 0
  5204  0027C2  0E02               	movlw	2
  5205  0027C4  6414               	cpfsgt	silence_key@i,c
  5206  0027C6  D001               	goto	l406
  5207  0027C8  D014               	goto	u3590
  5208  0027CA                     l406:
  5209                           
  5210                           ;logic.c: 61: {
  5211                           ;logic.c: 62: logic_var.silence_hist[i].bytes = logic_var.hold_data[i].bytes;
  5212                           
  5213                           ; BSR set to: 0
  5214  0027CA  5014               	movf	silence_key@i,w,c
  5215  0027CC  0D01               	mullw	1
  5216  0027CE  0E90               	movlw	low (_logic_var+48)
  5217  0027D0  24F3               	addwf	prodl,w,c
  5218  0027D2  6ED9               	movwf	fsr2l,c
  5219  0027D4  0E00               	movlw	high (_logic_var+48)
  5220  0027D6  20F4               	addwfc	prodh,w,c
  5221  0027D8  6EDA               	movwf	fsr2h,c
  5222  0027DA  5014               	movf	silence_key@i,w,c
  5223  0027DC  0D01               	mullw	1
  5224  0027DE  0E9C               	movlw	low (_logic_var+60)
  5225  0027E0  24F3               	addwf	prodl,w,c
  5226  0027E2  6EE1               	movwf	fsr1l,c
  5227  0027E4  0E00               	movlw	high (_logic_var+60)
  5228  0027E6  20F4               	addwfc	prodh,w,c
  5229  0027E8  6EE2               	movwf	fsr1h,c
  5230  0027EA  CFDF FFE7          	movff	indf2,indf1
  5231  0027EE  2A14               	incf	silence_key@i,f,c
  5232  0027F0  D7E8               	goto	l4758
  5233  0027F2                     u3590:
  5234                           
  5235                           ;logic.c: 63: }
  5236                           ;logic.c: 64: logic_var.rly_status &= ~0x03;
  5237  0027F2  0EFC               	movlw	252
  5238  0027F4  0100               	movlb	0	; () banked
  5239  0027F6  17B0               	andwf	(_logic_var+80)& (0+255),f,b
  5240                           
  5241                           ; BSR set to: 0
  5242                           ;logic.c: 65: LATBbits.LATB4 = 1;
  5243  0027F8  888A               	bsf	3978,4,c	;volatile
  5244                           
  5245                           ; BSR set to: 0
  5246                           ;logic.c: 66: LATBbits.LATB5 = 1;
  5247  0027FA  8A8A               	bsf	3978,5,c	;volatile
  5248                           
  5249                           ; BSR set to: 0
  5250  0027FC  0012               	return		;funcret
  5251  0027FE                     __end_of_silence_key:
  5252                           	opt stack 0
  5253                           tblptru	equ	0xFF8
  5254                           tblptrh	equ	0xFF7
  5255                           tblptrl	equ	0xFF6
  5256                           tablat	equ	0xFF5
  5257                           prodh	equ	0xFF4
  5258                           prodl	equ	0xFF3
  5259                           intcon	equ	0xFF2
  5260                           postinc0	equ	0xFEE
  5261                           wreg	equ	0xFE8
  5262                           indf1	equ	0xFE7
  5263                           fsr1h	equ	0xFE2
  5264                           fsr1l	equ	0xFE1
  5265                           indf2	equ	0xFDF
  5266                           fsr2h	equ	0xFDA
  5267                           fsr2l	equ	0xFD9
  5268                           status	equ	0xFD8
  5269                           
  5270 ;; *************** function _rtc_byte_wr *****************
  5271 ;; Defined at:
  5272 ;;		line 265 in file "i2c_e2p_rtc.c"
  5273 ;; Parameters:    Size  Location     Type
  5274 ;;  adr             1    wreg     unsigned char 
  5275 ;;  dta             1   22[COMRAM] unsigned char 
  5276 ;; Auto vars:     Size  Location     Type
  5277 ;;  adr             1   23[COMRAM] unsigned char 
  5278 ;; Return value:  Size  Location     Type
  5279 ;;                  1    wreg      void 
  5280 ;; Registers used:
  5281 ;;		wreg, status,2, status,0, cstack
  5282 ;; Tracked objects:
  5283 ;;		On entry : 0/0
  5284 ;;		On exit  : 0/0
  5285 ;;		Unchanged: 0/0
  5286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5287 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5288 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5290 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5291 ;;Total ram usage:        2 bytes
  5292 ;; Hardware stack levels used:    1
  5293 ;; Hardware stack levels required when called:    4
  5294 ;; This function calls:
  5295 ;;		_i2c_shift_out
  5296 ;;		_i2c_start
  5297 ;;		_i2c_stop
  5298 ;; This function is called by:
  5299 ;;		_init_rtc
  5300 ;;		_write_single_holding
  5301 ;; This function uses a non-reentrant model
  5302 ;;
  5303                           
  5304                           	psect	text24
  5305  002918                     __ptext24:
  5306                           	opt stack 0
  5307  002918                     _rtc_byte_wr:
  5308                           	opt stack 25
  5309                           
  5310                           ; BSR set to: 0
  5311                           ;incstack = 0
  5312                           ;rtc_byte_wr@adr stored from wreg
  5313  002918  6E18               	movwf	rtc_byte_wr@adr,c
  5314                           
  5315                           ;i2c_e2p_rtc.c: 267: i2c_start();
  5316  00291A  ECF0  F014         	call	_i2c_start	;wreg free
  5317                           
  5318                           ;i2c_e2p_rtc.c: 268: i2c_shift_out(0xd0,8);
  5319  00291E  0E08               	movlw	8
  5320  002920  6E14               	movwf	i2c_shift_out@cnts,c
  5321  002922  0ED0               	movlw	208
  5322  002924  ECD5  F012         	call	_i2c_shift_out
  5323                           
  5324                           ;i2c_e2p_rtc.c: 269: i2c_shift_out(adr,8);
  5325  002928  0E08               	movlw	8
  5326  00292A  6E14               	movwf	i2c_shift_out@cnts,c
  5327  00292C  5018               	movf	rtc_byte_wr@adr,w,c
  5328  00292E  ECD5  F012         	call	_i2c_shift_out
  5329                           
  5330                           ;i2c_e2p_rtc.c: 270: i2c_shift_out(dta,8);
  5331  002932  0E08               	movlw	8
  5332  002934  6E14               	movwf	i2c_shift_out@cnts,c
  5333  002936  5017               	movf	rtc_byte_wr@dta,w,c
  5334  002938  ECD5  F012         	call	_i2c_shift_out
  5335                           
  5336                           ;i2c_e2p_rtc.c: 271: i2c_stop();
  5337  00293C  EC02  F015         	call	_i2c_stop	;wreg free
  5338  002940  0012               	return		;funcret
  5339  002942                     __end_of_rtc_byte_wr:
  5340                           	opt stack 0
  5341                           tblptru	equ	0xFF8
  5342                           tblptrh	equ	0xFF7
  5343                           tblptrl	equ	0xFF6
  5344                           tablat	equ	0xFF5
  5345                           prodh	equ	0xFF4
  5346                           prodl	equ	0xFF3
  5347                           intcon	equ	0xFF2
  5348                           postinc0	equ	0xFEE
  5349                           wreg	equ	0xFE8
  5350                           indf1	equ	0xFE7
  5351                           fsr1h	equ	0xFE2
  5352                           fsr1l	equ	0xFE1
  5353                           indf2	equ	0xFDF
  5354                           fsr2h	equ	0xFDA
  5355                           fsr2l	equ	0xFD9
  5356                           status	equ	0xFD8
  5357                           
  5358 ;; *************** function _reset_key *****************
  5359 ;; Defined at:
  5360 ;;		line 86 in file "logic.c"
  5361 ;; Parameters:    Size  Location     Type
  5362 ;;		None
  5363 ;; Auto vars:     Size  Location     Type
  5364 ;;  i               1   19[COMRAM] unsigned char 
  5365 ;; Return value:  Size  Location     Type
  5366 ;;                  1    wreg      void 
  5367 ;; Registers used:
  5368 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5369 ;; Tracked objects:
  5370 ;;		On entry : 0/0
  5371 ;;		On exit  : 0/0
  5372 ;;		Unchanged: 0/0
  5373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5375 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5377 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5378 ;;Total ram usage:        1 bytes
  5379 ;; Hardware stack levels used:    1
  5380 ;; Hardware stack levels required when called:    2
  5381 ;; This function calls:
  5382 ;;		Nothing
  5383 ;; This function is called by:
  5384 ;;		_fault_detection
  5385 ;;		_write_single_holding
  5386 ;; This function uses a non-reentrant model
  5387 ;;
  5388                           
  5389                           	psect	text25
  5390  0021B2                     __ptext25:
  5391                           	opt stack 0
  5392  0021B2                     _reset_key:
  5393                           	opt stack 27
  5394                           
  5395                           ;logic.c: 88: unsigned char i;
  5396                           ;logic.c: 90: if((logic_var.status_flg & 0x04) == 0x04)
  5397                           
  5398                           ;incstack = 0
  5399  0021B2  0100               	movlb	0	; () banked
  5400  0021B4  A5AF               	btfss	(_logic_var+79)& (0+255),2,b
  5401  0021B6  0012               	return	
  5402                           
  5403                           ; BSR set to: 0
  5404                           ;logic.c: 91: {
  5405                           ;logic.c: 92: for(i = 0; i < 3; i++)
  5406  0021B8  0E00               	movlw	0
  5407  0021BA  6E14               	movwf	reset_key@i,c
  5408  0021BC                     l4798:
  5409                           
  5410                           ; BSR set to: 0
  5411  0021BC  0E02               	movlw	2
  5412  0021BE  6414               	cpfsgt	reset_key@i,c
  5413  0021C0  D001               	goto	l418
  5414  0021C2  D034               	goto	u3650
  5415  0021C4                     l418:
  5416                           
  5417                           ;logic.c: 93: {
  5418                           ;logic.c: 94: logic_var.hold_data[i].bytes = 0;
  5419                           
  5420                           ; BSR set to: 0
  5421  0021C4  5014               	movf	reset_key@i,w,c
  5422  0021C6  0D01               	mullw	1
  5423  0021C8  0E90               	movlw	low (_logic_var+48)
  5424  0021CA  24F3               	addwf	prodl,w,c
  5425  0021CC  6ED9               	movwf	fsr2l,c
  5426  0021CE  0E00               	movlw	high (_logic_var+48)
  5427  0021D0  20F4               	addwfc	prodh,w,c
  5428  0021D2  6EDA               	movwf	fsr2h,c
  5429  0021D4  0E00               	movlw	0
  5430  0021D6  6EDF               	movwf	indf2,c
  5431                           
  5432                           ;logic.c: 95: logic_var.flash_data[i].bytes = 0;
  5433  0021D8  5014               	movf	reset_key@i,w,c
  5434  0021DA  0D01               	mullw	1
  5435  0021DC  0E96               	movlw	low (_logic_var+54)
  5436  0021DE  24F3               	addwf	prodl,w,c
  5437  0021E0  6ED9               	movwf	fsr2l,c
  5438  0021E2  0E00               	movlw	high (_logic_var+54)
  5439  0021E4  20F4               	addwfc	prodh,w,c
  5440  0021E6  6EDA               	movwf	fsr2h,c
  5441  0021E8  0E00               	movlw	0
  5442  0021EA  6EDF               	movwf	indf2,c
  5443                           
  5444                           ;logic.c: 96: logic_var.hist_hold_data[i].bytes = 0;
  5445  0021EC  5014               	movf	reset_key@i,w,c
  5446  0021EE  0D01               	mullw	1
  5447  0021F0  0E93               	movlw	low (_logic_var+51)
  5448  0021F2  24F3               	addwf	prodl,w,c
  5449  0021F4  6ED9               	movwf	fsr2l,c
  5450  0021F6  0E00               	movlw	high (_logic_var+51)
  5451  0021F8  20F4               	addwfc	prodh,w,c
  5452  0021FA  6EDA               	movwf	fsr2h,c
  5453  0021FC  0E00               	movlw	0
  5454  0021FE  6EDF               	movwf	indf2,c
  5455                           
  5456                           ;logic.c: 97: logic_var.silence_hist[i].bytes = 0;
  5457  002200  5014               	movf	reset_key@i,w,c
  5458  002202  0D01               	mullw	1
  5459  002204  0E9C               	movlw	low (_logic_var+60)
  5460  002206  24F3               	addwf	prodl,w,c
  5461  002208  6ED9               	movwf	fsr2l,c
  5462  00220A  0E00               	movlw	high (_logic_var+60)
  5463  00220C  20F4               	addwfc	prodh,w,c
  5464  00220E  6EDA               	movwf	fsr2h,c
  5465  002210  0E00               	movlw	0
  5466  002212  6EDF               	movwf	indf2,c
  5467                           
  5468                           ;logic.c: 98: gen_var.loghist_data[i].bytes = 0;
  5469  002214  5014               	movf	reset_key@i,w,c
  5470  002216  0D01               	mullw	1
  5471  002218  0E44               	movlw	low (_gen_var+14)
  5472  00221A  24F3               	addwf	prodl,w,c
  5473  00221C  6ED9               	movwf	fsr2l,c
  5474  00221E  0E00               	movlw	high (_gen_var+14)
  5475  002220  20F4               	addwfc	prodh,w,c
  5476  002222  6EDA               	movwf	fsr2h,c
  5477  002224  0E00               	movlw	0
  5478  002226  6EDF               	movwf	indf2,c
  5479  002228  2A14               	incf	reset_key@i,f,c
  5480  00222A  D7C8               	goto	l4798
  5481  00222C                     u3650:
  5482                           
  5483                           ;logic.c: 100: }
  5484                           ;logic.c: 101: logic_var.status_flg &= ~0x0d;
  5485  00222C  0EF2               	movlw	242
  5486  00222E  0100               	movlb	0	; () banked
  5487  002230  17AF               	andwf	(_logic_var+79)& (0+255),f,b
  5488                           
  5489                           ;logic.c: 102: logic_var.rly_status &= ~0x03;
  5490  002232  0EFC               	movlw	252
  5491  002234  17B0               	andwf	(_logic_var+80)& (0+255),f,b
  5492  002236  0012               	return	
  5493  002238                     __end_of_reset_key:
  5494                           	opt stack 0
  5495                           tblptru	equ	0xFF8
  5496                           tblptrh	equ	0xFF7
  5497                           tblptrl	equ	0xFF6
  5498                           tablat	equ	0xFF5
  5499                           prodh	equ	0xFF4
  5500                           prodl	equ	0xFF3
  5501                           intcon	equ	0xFF2
  5502                           postinc0	equ	0xFEE
  5503                           wreg	equ	0xFE8
  5504                           indf1	equ	0xFE7
  5505                           fsr1h	equ	0xFE2
  5506                           fsr1l	equ	0xFE1
  5507                           indf2	equ	0xFDF
  5508                           fsr2h	equ	0xFDA
  5509                           fsr2l	equ	0xFD9
  5510                           status	equ	0xFD8
  5511                           
  5512 ;; *************** function _log_wr *****************
  5513 ;; Defined at:
  5514 ;;		line 25 in file "data_log.c"
  5515 ;; Parameters:    Size  Location     Type
  5516 ;;		None
  5517 ;; Auto vars:     Size  Location     Type
  5518 ;;  log_buffer     20    0[BANK0 ] unsigned char [20]
  5519 ;;  templ           4   25[BANK0 ] unsigned long 
  5520 ;;  chip_start      4   20[BANK0 ] unsigned long 
  5521 ;;  i               1   24[BANK0 ] unsigned char 
  5522 ;; Return value:  Size  Location     Type
  5523 ;;                  1    wreg      void 
  5524 ;; Registers used:
  5525 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5526 ;; Tracked objects:
  5527 ;;		On entry : 0/0
  5528 ;;		On exit  : 0/0
  5529 ;;		Unchanged: 0/0
  5530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5532 ;;      Locals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5533 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5534 ;;      Totals:         6      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5535 ;;Total ram usage:       35 bytes
  5536 ;; Hardware stack levels used:    1
  5537 ;; Hardware stack levels required when called:    6
  5538 ;; This function calls:
  5539 ;;		_i2c_byte_wr
  5540 ;;		_i2c_int_wr
  5541 ;; This function is called by:
  5542 ;;		_main
  5543 ;;		_write_single_holding
  5544 ;; This function uses a non-reentrant model
  5545 ;;
  5546                           
  5547                           	psect	text26
  5548  001516                     __ptext26:
  5549                           	opt stack 0
  5550  001516                     _log_wr:
  5551                           	opt stack 24
  5552                           
  5553                           ;data_log.c: 28: unsigned long templ,chip_start;
  5554                           ;data_log.c: 30: unsigned char i;
  5555                           ;data_log.c: 31: unsigned char log_buffer[20];
  5556                           ;data_log.c: 33: gen_var.log_data_cntr++;
  5557                           
  5558                           ; BSR set to: 0
  5559                           ;incstack = 0
  5560  001516  4A41               	infsnz	_gen_var+11,f,c
  5561  001518  2A42               	incf	_gen_var+12,f,c
  5562                           
  5563                           ;data_log.c: 34: i2c_int_wr(0,1,gen_var.log_data_cntr);
  5564  00151A  0E01               	movlw	1
  5565  00151C  6E22               	movwf	i2c_int_wr@adr,c
  5566  00151E  0E00               	movlw	0
  5567  001520  6E23               	movwf	i2c_int_wr@adr+1,c
  5568  001522  0E00               	movlw	0
  5569  001524  6E24               	movwf	i2c_int_wr@adr+2,c
  5570  001526  0E00               	movlw	0
  5571  001528  6E25               	movwf	i2c_int_wr@adr+3,c
  5572  00152A  C041  F026         	movff	_gen_var+11,i2c_int_wr@dta
  5573  00152E  C042  F027         	movff	_gen_var+12,i2c_int_wr@dta+1
  5574  001532  0E00               	movlw	0
  5575  001534  EC25  F013         	call	_i2c_int_wr
  5576                           
  5577                           ;data_log.c: 36: templ = (long)(gen_var.log_data_cntr * 16) + 16;
  5578  001538  EE20  F041         	lfsr	2,_gen_var+11
  5579  00153C  CFDE F02B          	movff	postinc2,??_log_wr
  5580  001540  CFDD F02C          	movff	postdec2,??_log_wr+1
  5581  001544  3A2B               	swapf	??_log_wr,f,c
  5582  001546  3A2C               	swapf	??_log_wr+1,f,c
  5583  001548  0EF0               	movlw	240
  5584  00154A  162C               	andwf	??_log_wr+1,f,c
  5585  00154C  502B               	movf	??_log_wr,w,c
  5586  00154E  0B0F               	andlw	15
  5587  001550  122C               	iorwf	??_log_wr+1,f,c
  5588  001552  0EF0               	movlw	240
  5589  001554  162B               	andwf	??_log_wr,f,c
  5590  001556  502B               	movf	??_log_wr,w,c
  5591  001558  6E2D               	movwf	(??_log_wr+2)& (0+255),c
  5592  00155A  502C               	movf	??_log_wr+1,w,c
  5593  00155C  6E2E               	movwf	(??_log_wr+3)& (0+255),c
  5594  00155E  6A2F               	clrf	(??_log_wr+4)& (0+255),c
  5595  001560  6A30               	clrf	(??_log_wr+5)& (0+255),c
  5596  001562  0E10               	movlw	16
  5597  001564  242D               	addwf	??_log_wr+2,w,c
  5598  001566  0100               	movlb	0	; () banked
  5599  001568  6FDD               	movwf	log_wr@templ& (0+255),b
  5600  00156A  0E00               	movlw	0
  5601  00156C  202E               	addwfc	??_log_wr+3,w,c
  5602  00156E  6FDE               	movwf	(log_wr@templ+1)& (0+255),b
  5603  001570  0E00               	movlw	0
  5604  001572  202F               	addwfc	??_log_wr+4,w,c
  5605  001574  6FDF               	movwf	(log_wr@templ+2)& (0+255),b
  5606  001576  0E00               	movlw	0
  5607  001578  2030               	addwfc	??_log_wr+5,w,c
  5608  00157A  6FE0               	movwf	(log_wr@templ+3)& (0+255),b
  5609                           
  5610                           ; BSR set to: 0
  5611                           ;data_log.c: 38: if (templ <= 0x0ffff)
  5612  00157C  51E0               	movf	(log_wr@templ+3)& (0+255),w,b
  5613  00157E  E10D               	bnz	l4646
  5614  001580  05DF               	decf	(log_wr@templ+2)& (0+255),w,b
  5615  001582  B0D8               	btfsc	status,0,c
  5616  001584  D00A               	goto	l577
  5617  001586  D00F               	goto	u3470
  5618  001588                     l4644:
  5619                           
  5620                           ; BSR set to: 0
  5621                           ;data_log.c: 41: chip_start = templ;
  5622  001588  C0DD  F0D8         	movff	log_wr@templ,log_wr@chip_start
  5623  00158C  C0DE  F0D9         	movff	log_wr@templ+1,log_wr@chip_start+1
  5624  001590  C0DF  F0DA         	movff	log_wr@templ+2,log_wr@chip_start+2
  5625  001594  C0E0  F0DB         	movff	log_wr@templ+3,log_wr@chip_start+3
  5626                           
  5627                           ;data_log.c: 42: }
  5628  001598  D053               	goto	l591
  5629  00159A                     l577:
  5630  00159A                     l4646:
  5631                           
  5632                           ; BSR set to: 0
  5633                           ;data_log.c: 43: else if (templ <= 0x1ffff)
  5634  00159A  51E0               	movf	(log_wr@templ+3)& (0+255),w,b
  5635  00159C  E107               	bnz	l4652
  5636  00159E  0E02               	movlw	2
  5637  0015A0  5DDF               	subwf	(log_wr@templ+2)& (0+255),w,b
  5638  0015A2  B0D8               	btfsc	status,0,c
  5639  0015A4  D003               	goto	l579
  5640  0015A6                     u3470:
  5641                           
  5642                           ; BSR set to: 0
  5643                           ;data_log.c: 44: {
  5644                           ;data_log.c: 45: chip_address = 0;
  5645  0015A6  0E00               	movlw	0
  5646  0015A8  6FC3               	movwf	_chip_address& (0+255),b
  5647  0015AA  D7EE               	goto	l4644
  5648  0015AC                     l579:
  5649  0015AC                     l4652:
  5650                           
  5651                           ; BSR set to: 0
  5652                           ;data_log.c: 48: else if (templ <= 0x2ffff)
  5653  0015AC  51E0               	movf	(log_wr@templ+3)& (0+255),w,b
  5654  0015AE  E10D               	bnz	l4658
  5655  0015B0  0E03               	movlw	3
  5656  0015B2  5DDF               	subwf	(log_wr@templ+2)& (0+255),w,b
  5657  0015B4  B0D8               	btfsc	status,0,c
  5658  0015B6  D009               	goto	l581
  5659  0015B8  D00E               	goto	u3490
  5660  0015BA                     l4656:
  5661                           
  5662                           ; BSR set to: 0
  5663                           ;data_log.c: 51: chip_start = templ - 0x20000;
  5664  0015BA  0E00               	movlw	0
  5665  0015BC  25DD               	addwf	log_wr@templ& (0+255),w,b
  5666  0015BE  6FD8               	movwf	log_wr@chip_start& (0+255),b
  5667  0015C0  0E00               	movlw	0
  5668  0015C2  21DE               	addwfc	(log_wr@templ+1)& (0+255),w,b
  5669  0015C4  6FD9               	movwf	(log_wr@chip_start+1)& (0+255),b
  5670  0015C6  0EFE               	movlw	254
  5671  0015C8  D036               	goto	L3
  5672  0015CA                     l581:
  5673  0015CA                     l4658:
  5674                           
  5675                           ; BSR set to: 0
  5676                           ;data_log.c: 53: else if (templ <= 0x3ffff)
  5677  0015CA  51E0               	movf	(log_wr@templ+3)& (0+255),w,b
  5678  0015CC  E107               	bnz	l4664
  5679  0015CE  0E04               	movlw	4
  5680  0015D0  5DDF               	subwf	(log_wr@templ+2)& (0+255),w,b
  5681  0015D2  B0D8               	btfsc	status,0,c
  5682  0015D4  D003               	goto	l583
  5683  0015D6                     u3490:
  5684                           
  5685                           ; BSR set to: 0
  5686                           ;data_log.c: 54: {
  5687                           ;data_log.c: 55: chip_address = 1;
  5688  0015D6  0E01               	movlw	1
  5689  0015D8  6FC3               	movwf	_chip_address& (0+255),b
  5690  0015DA  D7EF               	goto	l4656
  5691  0015DC                     l583:
  5692  0015DC                     l4664:
  5693                           
  5694                           ; BSR set to: 0
  5695                           ;data_log.c: 58: else if (templ <= 0x4ffff)
  5696  0015DC  51E0               	movf	(log_wr@templ+3)& (0+255),w,b
  5697  0015DE  E10D               	bnz	l4670
  5698  0015E0  0E05               	movlw	5
  5699  0015E2  5DDF               	subwf	(log_wr@templ+2)& (0+255),w,b
  5700  0015E4  B0D8               	btfsc	status,0,c
  5701  0015E6  D009               	goto	l585
  5702  0015E8  D00E               	goto	u3510
  5703  0015EA                     l4668:
  5704                           
  5705                           ; BSR set to: 0
  5706                           ;data_log.c: 61: chip_start = templ - 0x40000;
  5707  0015EA  0E00               	movlw	0
  5708  0015EC  25DD               	addwf	log_wr@templ& (0+255),w,b
  5709  0015EE  6FD8               	movwf	log_wr@chip_start& (0+255),b
  5710  0015F0  0E00               	movlw	0
  5711  0015F2  21DE               	addwfc	(log_wr@templ+1)& (0+255),w,b
  5712  0015F4  6FD9               	movwf	(log_wr@chip_start+1)& (0+255),b
  5713  0015F6  0EFC               	movlw	252
  5714  0015F8  D01E               	goto	L3
  5715  0015FA                     l585:
  5716  0015FA                     l4670:
  5717                           
  5718                           ; BSR set to: 0
  5719                           ;data_log.c: 63: else if (templ <= 0x5ffff)
  5720  0015FA  51E0               	movf	(log_wr@templ+3)& (0+255),w,b
  5721  0015FC  E107               	bnz	l4676
  5722  0015FE  0E06               	movlw	6
  5723  001600  5DDF               	subwf	(log_wr@templ+2)& (0+255),w,b
  5724  001602  B0D8               	btfsc	status,0,c
  5725  001604  D003               	goto	l587
  5726  001606                     u3510:
  5727                           
  5728                           ; BSR set to: 0
  5729                           ;data_log.c: 64: {
  5730                           ;data_log.c: 65: chip_address = 2;
  5731  001606  0E02               	movlw	2
  5732  001608  6FC3               	movwf	_chip_address& (0+255),b
  5733  00160A  D7EF               	goto	l4668
  5734  00160C                     l587:
  5735  00160C                     l4676:
  5736                           
  5737                           ; BSR set to: 0
  5738                           ;data_log.c: 68: else if (templ <= 0x6ffff)
  5739  00160C  51E0               	movf	(log_wr@templ+3)& (0+255),w,b
  5740  00160E  E104               	bnz	l4682
  5741  001610  0E07               	movlw	7
  5742  001612  5DDF               	subwf	(log_wr@templ+2)& (0+255),w,b
  5743  001614  A0D8               	btfss	status,0,c
  5744  001616  D006               	goto	L8
  5745  001618                     l4682:
  5746                           
  5747                           ; BSR set to: 0
  5748                           ;data_log.c: 73: else if (templ <= 0x7ffff)
  5749  001618  51E0               	movf	(log_wr@templ+3)& (0+255),w,b
  5750  00161A  E112               	bnz	l4688
  5751  00161C  0E08               	movlw	8
  5752  00161E  5DDF               	subwf	(log_wr@templ+2)& (0+255),w,b
  5753  001620  B0D8               	btfsc	status,0,c
  5754  001622  D00E               	goto	l591
  5755  001624                     L8:
  5756                           
  5757                           ; BSR set to: 0
  5758                           ;data_log.c: 74: {
  5759                           ;data_log.c: 75: chip_address = 3;
  5760  001624  0E03               	movlw	3
  5761  001626  6FC3               	movwf	_chip_address& (0+255),b
  5762                           
  5763                           ; BSR set to: 0
  5764                           ;data_log.c: 76: chip_start = templ - 0x60000;
  5765  001628  0E00               	movlw	0
  5766  00162A  25DD               	addwf	log_wr@templ& (0+255),w,b
  5767  00162C  6FD8               	movwf	log_wr@chip_start& (0+255),b
  5768  00162E  0E00               	movlw	0
  5769  001630  21DE               	addwfc	(log_wr@templ+1)& (0+255),w,b
  5770  001632  6FD9               	movwf	(log_wr@chip_start+1)& (0+255),b
  5771  001634  0EFA               	movlw	250
  5772  001636                     L3:
  5773  001636  21DF               	addwfc	(log_wr@templ+2)& (0+255),w,b
  5774  001638  6FDA               	movwf	(log_wr@chip_start+2)& (0+255),b
  5775  00163A  0EFF               	movlw	255
  5776  00163C  21E0               	addwfc	(log_wr@templ+3)& (0+255),w,b
  5777  00163E  6FDB               	movwf	(log_wr@chip_start+3)& (0+255),b
  5778  001640                     l591:
  5779  001640                     l4688:
  5780                           
  5781                           ; BSR set to: 0
  5782                           ;data_log.c: 77: }
  5783                           ;data_log.c: 79: log_buffer[0] = gen_var.rtc_read[0];
  5784  001640  C03B  F0C4         	movff	_gen_var+5,log_wr@log_buffer
  5785                           
  5786                           ; BSR set to: 0
  5787                           ;data_log.c: 80: log_buffer[1] = gen_var.rtc_read[1];
  5788  001644  C03C  F0C5         	movff	_gen_var+6,log_wr@log_buffer+1
  5789                           
  5790                           ; BSR set to: 0
  5791                           ;data_log.c: 81: log_buffer[2] = gen_var.rtc_read[2];
  5792  001648  C03D  F0C6         	movff	_gen_var+7,log_wr@log_buffer+2
  5793                           
  5794                           ; BSR set to: 0
  5795                           ;data_log.c: 82: log_buffer[3] = gen_var.rtc_read[3];
  5796  00164C  C03E  F0C7         	movff	_gen_var+8,log_wr@log_buffer+3
  5797                           
  5798                           ; BSR set to: 0
  5799                           ;data_log.c: 83: log_buffer[4] = gen_var.rtc_read[4];
  5800  001650  C03F  F0C8         	movff	_gen_var+9,log_wr@log_buffer+4
  5801                           
  5802                           ; BSR set to: 0
  5803                           ;data_log.c: 84: log_buffer[5] = gen_var.rtc_read[5];
  5804  001654  C040  F0C9         	movff	_gen_var+10,log_wr@log_buffer+5
  5805                           
  5806                           ; BSR set to: 0
  5807                           ;data_log.c: 86: log_buffer[6] = logic_var.status_flg;
  5808  001658  C0AF  F0CA         	movff	_logic_var+79,log_wr@log_buffer+6
  5809                           
  5810                           ; BSR set to: 0
  5811                           ;data_log.c: 88: log_buffer[7] = logic_var.flash_data[0].bytes;
  5812  00165C  C096  F0CB         	movff	_logic_var+54,log_wr@log_buffer+7
  5813                           
  5814                           ; BSR set to: 0
  5815                           ;data_log.c: 89: log_buffer[8] = logic_var.flash_data[1].bytes;
  5816  001660  C097  F0CC         	movff	_logic_var+55,log_wr@log_buffer+8
  5817                           
  5818                           ; BSR set to: 0
  5819                           ;data_log.c: 90: log_buffer[9] = logic_var.flash_data[2].bytes;
  5820  001664  C098  F0CD         	movff	_logic_var+56,log_wr@log_buffer+9
  5821                           
  5822                           ; BSR set to: 0
  5823                           ;data_log.c: 92: log_buffer[10] = logic_var.new_ip[2];
  5824  001668  C086  F0CE         	movff	_logic_var+38,log_wr@log_buffer+10
  5825                           
  5826                           ; BSR set to: 0
  5827                           ;data_log.c: 93: log_buffer[11] = logic_var.new_ip[6];
  5828  00166C  C08A  F0CF         	movff	_logic_var+42,log_wr@log_buffer+11
  5829                           
  5830                           ; BSR set to: 0
  5831                           ;data_log.c: 94: log_buffer[12] = logic_var.new_ip[10];
  5832  001670  C08E  F0D0         	movff	_logic_var+46,log_wr@log_buffer+12
  5833                           
  5834                           ; BSR set to: 0
  5835                           ;data_log.c: 96: log_buffer[13] = logic_var.new_ip[1];
  5836  001674  C085  F0D1         	movff	_logic_var+37,log_wr@log_buffer+13
  5837                           
  5838                           ; BSR set to: 0
  5839                           ;data_log.c: 97: log_buffer[14] = logic_var.new_ip[5];
  5840  001678  C089  F0D2         	movff	_logic_var+41,log_wr@log_buffer+14
  5841                           
  5842                           ; BSR set to: 0
  5843                           ;data_log.c: 98: log_buffer[15] = logic_var.new_ip[9];
  5844  00167C  C08D  F0D3         	movff	_logic_var+45,log_wr@log_buffer+15
  5845                           
  5846                           ; BSR set to: 0
  5847                           ;data_log.c: 100: for(i=0; i<16; i++)
  5848  001680  0E00               	movlw	0
  5849  001682  6FDC               	movwf	log_wr@i& (0+255),b
  5850  001684  0E0F               	movlw	15
  5851  001686  65DC               	cpfsgt	log_wr@i& (0+255),b
  5852  001688  D001               	goto	l592
  5853  00168A  D01E               	goto	u3550
  5854  00168C                     l592:
  5855                           
  5856                           ; BSR set to: 0
  5857                           ;data_log.c: 101: {
  5858                           ;data_log.c: 102: i2c_byte_wr(chip_address,(long)chip_start, log_buffer[i]);
  5859                           
  5860                           ; BSR set to: 0
  5861  00168C  C0D8  F017         	movff	log_wr@chip_start,i2c_byte_wr@adr
  5862  001690  C0D9  F018         	movff	log_wr@chip_start+1,i2c_byte_wr@adr+1
  5863  001694  C0DA  F019         	movff	log_wr@chip_start+2,i2c_byte_wr@adr+2
  5864  001698  C0DB  F01A         	movff	log_wr@chip_start+3,i2c_byte_wr@adr+3
  5865  00169C  51DC               	movf	log_wr@i& (0+255),w,b
  5866  00169E  0D01               	mullw	1
  5867  0016A0  0EC4               	movlw	low log_wr@log_buffer
  5868  0016A2  24F3               	addwf	prodl,w,c
  5869  0016A4  6ED9               	movwf	fsr2l,c
  5870  0016A6  0E00               	movlw	high log_wr@log_buffer
  5871  0016A8  20F4               	addwfc	prodh,w,c
  5872  0016AA  6EDA               	movwf	fsr2h,c
  5873  0016AC  50DF               	movf	indf2,w,c
  5874  0016AE  6E1B               	movwf	i2c_byte_wr@dta,c
  5875  0016B0  51C3               	movf	_chip_address& (0+255),w,b
  5876  0016B2  EC9B  F011         	call	_i2c_byte_wr
  5877                           
  5878                           ;data_log.c: 103: chip_start++;
  5879  0016B6  0E01               	movlw	1
  5880  0016B8  0100               	movlb	0	; () banked
  5881  0016BA  27D8               	addwf	log_wr@chip_start& (0+255),f,b
  5882  0016BC  0E00               	movlw	0
  5883  0016BE  23D9               	addwfc	(log_wr@chip_start+1)& (0+255),f,b
  5884  0016C0  23DA               	addwfc	(log_wr@chip_start+2)& (0+255),f,b
  5885  0016C2  23DB               	addwfc	(log_wr@chip_start+3)& (0+255),f,b
  5886                           
  5887                           ; BSR set to: 0
  5888  0016C4  2BDC               	incf	log_wr@i& (0+255),f,b
  5889  0016C6  D7DE               	goto	L2
  5890  0016C8                     u3550:
  5891                           
  5892                           ; BSR set to: 0
  5893                           ;data_log.c: 104: }
  5894                           ;data_log.c: 105: gen_var.logevent_flg = 0;
  5895                           
  5896                           ; BSR set to: 0
  5897  0016C8  0E00               	movlw	0
  5898  0016CA  6E43               	movwf	_gen_var+13,c
  5899                           
  5900                           ; BSR set to: 0
  5901  0016CC  0012               	return		;funcret
  5902  0016CE                     __end_of_log_wr:
  5903                           	opt stack 0
  5904                           tblptru	equ	0xFF8
  5905                           tblptrh	equ	0xFF7
  5906                           tblptrl	equ	0xFF6
  5907                           tablat	equ	0xFF5
  5908                           prodh	equ	0xFF4
  5909                           prodl	equ	0xFF3
  5910                           intcon	equ	0xFF2
  5911                           postinc0	equ	0xFEE
  5912                           wreg	equ	0xFE8
  5913                           indf1	equ	0xFE7
  5914                           fsr1h	equ	0xFE2
  5915                           fsr1l	equ	0xFE1
  5916                           indf2	equ	0xFDF
  5917                           postinc2	equ	0xFDE
  5918                           postdec2	equ	0xFDD
  5919                           fsr2h	equ	0xFDA
  5920                           fsr2l	equ	0xFD9
  5921                           status	equ	0xFD8
  5922                           
  5923 ;; *************** function _i2c_int_wr *****************
  5924 ;; Defined at:
  5925 ;;		line 252 in file "i2c_e2p_rtc.c"
  5926 ;; Parameters:    Size  Location     Type
  5927 ;;  dev_addr        1    wreg     unsigned char 
  5928 ;;  adr             4   33[COMRAM] unsigned long 
  5929 ;;  dta             2   37[COMRAM] unsigned int 
  5930 ;; Auto vars:     Size  Location     Type
  5931 ;;  dev_addr        1   39[COMRAM] unsigned char 
  5932 ;;  un1             2   40[COMRAM] struct int_char
  5933 ;; Return value:  Size  Location     Type
  5934 ;;                  1    wreg      void 
  5935 ;; Registers used:
  5936 ;;		wreg, status,2, status,0, cstack
  5937 ;; Tracked objects:
  5938 ;;		On entry : 0/0
  5939 ;;		On exit  : 0/0
  5940 ;;		Unchanged: 0/0
  5941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5942 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5943 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5945 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5946 ;;Total ram usage:        9 bytes
  5947 ;; Hardware stack levels used:    1
  5948 ;; Hardware stack levels required when called:    5
  5949 ;; This function calls:
  5950 ;;		_i2c_byte_wr
  5951 ;; This function is called by:
  5952 ;;		_log_wr
  5953 ;;		_write_single_holding
  5954 ;; This function uses a non-reentrant model
  5955 ;;
  5956                           
  5957                           	psect	text27
  5958  00264A                     __ptext27:
  5959                           	opt stack 0
  5960  00264A                     _i2c_int_wr:
  5961                           	opt stack 24
  5962                           
  5963                           ; BSR set to: 0
  5964                           ;incstack = 0
  5965                           ;i2c_int_wr@dev_addr stored from wreg
  5966  00264A  6E28               	movwf	i2c_int_wr@dev_addr,c
  5967                           
  5968                           ;i2c_e2p_rtc.c: 254: union int_char un1;
  5969                           ;i2c_e2p_rtc.c: 256: un1.int_val = dta;
  5970  00264C  C026  F029         	movff	i2c_int_wr@dta,i2c_int_wr@un1
  5971  002650  C027  F02A         	movff	i2c_int_wr@dta+1,i2c_int_wr@un1+1
  5972                           
  5973                           ;i2c_e2p_rtc.c: 257: i2c_byte_wr(dev_addr,adr,un1.char_val[0]);
  5974  002654  C022  F017         	movff	i2c_int_wr@adr,i2c_byte_wr@adr
  5975  002658  C023  F018         	movff	i2c_int_wr@adr+1,i2c_byte_wr@adr+1
  5976  00265C  C024  F019         	movff	i2c_int_wr@adr+2,i2c_byte_wr@adr+2
  5977  002660  C025  F01A         	movff	i2c_int_wr@adr+3,i2c_byte_wr@adr+3
  5978  002664  C029  F01B         	movff	i2c_int_wr@un1,i2c_byte_wr@dta
  5979  002668  5028               	movf	i2c_int_wr@dev_addr,w,c
  5980  00266A  EC9B  F011         	call	_i2c_byte_wr
  5981                           
  5982                           ;i2c_e2p_rtc.c: 258: adr++;
  5983  00266E  0E01               	movlw	1
  5984  002670  2622               	addwf	i2c_int_wr@adr,f,c
  5985  002672  0E00               	movlw	0
  5986  002674  2223               	addwfc	i2c_int_wr@adr+1,f,c
  5987  002676  2224               	addwfc	i2c_int_wr@adr+2,f,c
  5988  002678  2225               	addwfc	i2c_int_wr@adr+3,f,c
  5989                           
  5990                           ;i2c_e2p_rtc.c: 259: i2c_byte_wr(dev_addr,adr,un1.char_val[1]);
  5991  00267A  C022  F017         	movff	i2c_int_wr@adr,i2c_byte_wr@adr
  5992  00267E  C023  F018         	movff	i2c_int_wr@adr+1,i2c_byte_wr@adr+1
  5993  002682  C024  F019         	movff	i2c_int_wr@adr+2,i2c_byte_wr@adr+2
  5994  002686  C025  F01A         	movff	i2c_int_wr@adr+3,i2c_byte_wr@adr+3
  5995  00268A  C02A  F01B         	movff	i2c_int_wr@un1+1,i2c_byte_wr@dta
  5996  00268E  5028               	movf	i2c_int_wr@dev_addr,w,c
  5997  002690  EC9B  F011         	call	_i2c_byte_wr
  5998  002694  0012               	return		;funcret
  5999  002696                     __end_of_i2c_int_wr:
  6000                           	opt stack 0
  6001                           tblptru	equ	0xFF8
  6002                           tblptrh	equ	0xFF7
  6003                           tblptrl	equ	0xFF6
  6004                           tablat	equ	0xFF5
  6005                           prodh	equ	0xFF4
  6006                           prodl	equ	0xFF3
  6007                           intcon	equ	0xFF2
  6008                           postinc0	equ	0xFEE
  6009                           wreg	equ	0xFE8
  6010                           indf1	equ	0xFE7
  6011                           fsr1h	equ	0xFE2
  6012                           fsr1l	equ	0xFE1
  6013                           indf2	equ	0xFDF
  6014                           postinc2	equ	0xFDE
  6015                           postdec2	equ	0xFDD
  6016                           fsr2h	equ	0xFDA
  6017                           fsr2l	equ	0xFD9
  6018                           status	equ	0xFD8
  6019                           
  6020 ;; *************** function _i2c_byte_wr *****************
  6021 ;; Defined at:
  6022 ;;		line 222 in file "i2c_e2p_rtc.c"
  6023 ;; Parameters:    Size  Location     Type
  6024 ;;  dev_addr        1    wreg     unsigned char 
  6025 ;;  adr             4   22[COMRAM] unsigned long 
  6026 ;;  dta             1   26[COMRAM] unsigned char 
  6027 ;; Auto vars:     Size  Location     Type
  6028 ;;  dev_addr        1   29[COMRAM] unsigned char 
  6029 ;;  un1             2   30[COMRAM] struct int_char
  6030 ;;  control_byte    1   32[COMRAM] unsigned char 
  6031 ;;  addrl           1   28[COMRAM] unsigned char 
  6032 ;;  addrh           1   27[COMRAM] unsigned char 
  6033 ;; Return value:  Size  Location     Type
  6034 ;;                  1    wreg      void 
  6035 ;; Registers used:
  6036 ;;		wreg, status,2, status,0, cstack
  6037 ;; Tracked objects:
  6038 ;;		On entry : 0/0
  6039 ;;		On exit  : 0/0
  6040 ;;		Unchanged: 0/0
  6041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6042 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6043 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6045 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6046 ;;Total ram usage:       11 bytes
  6047 ;; Hardware stack levels used:    1
  6048 ;; Hardware stack levels required when called:    4
  6049 ;; This function calls:
  6050 ;;		_i2c_shift_out
  6051 ;;		_i2c_start
  6052 ;;		_i2c_stop
  6053 ;; This function is called by:
  6054 ;;		_i2c_int_wr
  6055 ;;		_log_wr
  6056 ;; This function uses a non-reentrant model
  6057 ;;
  6058                           
  6059                           	psect	text28
  6060  002336                     __ptext28:
  6061                           	opt stack 0
  6062  002336                     _i2c_byte_wr:
  6063                           	opt stack 24
  6064                           
  6065                           ;incstack = 0
  6066                           ;i2c_byte_wr@dev_addr stored from wreg
  6067  002336  6E1E               	movwf	i2c_byte_wr@dev_addr,c
  6068                           
  6069                           ;i2c_e2p_rtc.c: 224: unsigned char addrh,addrl;
  6070                           ;i2c_e2p_rtc.c: 225: unsigned char control_byte;
  6071                           ;i2c_e2p_rtc.c: 226: union int_char un1;
  6072                           ;i2c_e2p_rtc.c: 228: if(adr>0xffff)
  6073  002338  501A               	movf	i2c_byte_wr@adr+3,w,c
  6074  00233A  E103               	bnz	u3370
  6075  00233C  0419               	decf	i2c_byte_wr@adr+2,w,c
  6076  00233E  A0D8               	btfss	status,0,c
  6077  002340  D002               	goto	l512
  6078  002342                     u3370:
  6079                           
  6080                           ;i2c_e2p_rtc.c: 229: control_byte=0XA8;
  6081  002342  0EA8               	movlw	168
  6082  002344  D001               	goto	L4
  6083  002346                     l512:
  6084                           
  6085                           ;i2c_e2p_rtc.c: 230: else
  6086                           ;i2c_e2p_rtc.c: 231: control_byte=0XA0;
  6087  002346  0EA0               	movlw	160
  6088  002348                     L4:
  6089  002348  6E21               	movwf	i2c_byte_wr@control_byte,c
  6090                           
  6091                           ;i2c_e2p_rtc.c: 233: adr = (unsigned int)adr;
  6092  00234A  C017  F017         	movff	i2c_byte_wr@adr,i2c_byte_wr@adr
  6093  00234E  C018  F018         	movff	i2c_byte_wr@adr+1,i2c_byte_wr@adr+1
  6094  002352  6A19               	clrf	i2c_byte_wr@adr+2,c
  6095  002354  6A1A               	clrf	i2c_byte_wr@adr+3,c
  6096                           
  6097                           ;i2c_e2p_rtc.c: 234: un1.int_val = adr;
  6098  002356  C017  F01F         	movff	i2c_byte_wr@adr,i2c_byte_wr@un1
  6099  00235A  C018  F020         	movff	i2c_byte_wr@adr+1,i2c_byte_wr@un1+1
  6100                           
  6101                           ;i2c_e2p_rtc.c: 235: addrh = un1.char_val[1];
  6102  00235E  C020  F01C         	movff	i2c_byte_wr@un1+1,i2c_byte_wr@addrh
  6103                           
  6104                           ;i2c_e2p_rtc.c: 236: addrl = un1.char_val[0];
  6105  002362  C01F  F01D         	movff	i2c_byte_wr@un1,i2c_byte_wr@addrl
  6106                           
  6107                           ;i2c_e2p_rtc.c: 237: dev_addr=dev_addr<<1;
  6108  002366  501E               	movf	i2c_byte_wr@dev_addr,w,c
  6109  002368  241E               	addwf	i2c_byte_wr@dev_addr,w,c
  6110  00236A  6E1E               	movwf	i2c_byte_wr@dev_addr,c
  6111                           
  6112                           ;i2c_e2p_rtc.c: 238: control_byte = control_byte | dev_addr;
  6113  00236C  5021               	movf	i2c_byte_wr@control_byte,w,c
  6114  00236E  101E               	iorwf	i2c_byte_wr@dev_addr,w,c
  6115  002370  6E21               	movwf	i2c_byte_wr@control_byte,c
  6116                           
  6117                           ;i2c_e2p_rtc.c: 240: i2c_start();
  6118  002372  ECF0  F014         	call	_i2c_start	;wreg free
  6119                           
  6120                           ;i2c_e2p_rtc.c: 241: i2c_shift_out(control_byte,8);
  6121  002376  0E08               	movlw	8
  6122  002378  6E14               	movwf	i2c_shift_out@cnts,c
  6123  00237A  5021               	movf	i2c_byte_wr@control_byte,w,c
  6124  00237C  ECD5  F012         	call	_i2c_shift_out
  6125                           
  6126                           ;i2c_e2p_rtc.c: 242: i2c_shift_out(addrh,8);
  6127  002380  0E08               	movlw	8
  6128  002382  6E14               	movwf	i2c_shift_out@cnts,c
  6129  002384  501C               	movf	i2c_byte_wr@addrh,w,c
  6130  002386  ECD5  F012         	call	_i2c_shift_out
  6131                           
  6132                           ;i2c_e2p_rtc.c: 243: i2c_shift_out(addrl,8);
  6133  00238A  0E08               	movlw	8
  6134  00238C  6E14               	movwf	i2c_shift_out@cnts,c
  6135  00238E  501D               	movf	i2c_byte_wr@addrl,w,c
  6136  002390  ECD5  F012         	call	_i2c_shift_out
  6137                           
  6138                           ;i2c_e2p_rtc.c: 244: i2c_shift_out(dta,8);
  6139  002394  0E08               	movlw	8
  6140  002396  6E14               	movwf	i2c_shift_out@cnts,c
  6141  002398  501B               	movf	i2c_byte_wr@dta,w,c
  6142  00239A  ECD5  F012         	call	_i2c_shift_out
  6143                           
  6144                           ;i2c_e2p_rtc.c: 245: i2c_stop();
  6145  00239E  EC02  F015         	call	_i2c_stop	;wreg free
  6146                           
  6147                           ;i2c_e2p_rtc.c: 247: gen_var.i2c_wr_cntr = 12;
  6148  0023A2  0E0C               	movlw	12
  6149  0023A4  6E3A               	movwf	_gen_var+4,c
  6150  0023A6  503A               	movf	_gen_var+4,w,c
  6151  0023A8  B4D8               	btfsc	status,2,c
  6152  0023AA  0012               	return	
  6153  0023AC  D7FC               	goto	l515
  6154  0023AE                     __end_of_i2c_byte_wr:
  6155                           	opt stack 0
  6156                           tblptru	equ	0xFF8
  6157                           tblptrh	equ	0xFF7
  6158                           tblptrl	equ	0xFF6
  6159                           tablat	equ	0xFF5
  6160                           prodh	equ	0xFF4
  6161                           prodl	equ	0xFF3
  6162                           intcon	equ	0xFF2
  6163                           postinc0	equ	0xFEE
  6164                           wreg	equ	0xFE8
  6165                           indf1	equ	0xFE7
  6166                           fsr1h	equ	0xFE2
  6167                           fsr1l	equ	0xFE1
  6168                           indf2	equ	0xFDF
  6169                           postinc2	equ	0xFDE
  6170                           postdec2	equ	0xFDD
  6171                           fsr2h	equ	0xFDA
  6172                           fsr2l	equ	0xFD9
  6173                           status	equ	0xFD8
  6174                           
  6175 ;; *************** function _hex2pbcd *****************
  6176 ;; Defined at:
  6177 ;;		line 347 in file "i2c_e2p_rtc.c"
  6178 ;; Parameters:    Size  Location     Type
  6179 ;;  hex_num         1    wreg     unsigned char 
  6180 ;; Auto vars:     Size  Location     Type
  6181 ;;  hex_num         1   19[COMRAM] unsigned char 
  6182 ;;  high            1   20[COMRAM] unsigned char 
  6183 ;; Return value:  Size  Location     Type
  6184 ;;                  1    wreg      unsigned char 
  6185 ;; Registers used:
  6186 ;;		wreg, status,2, status,0
  6187 ;; Tracked objects:
  6188 ;;		On entry : 0/0
  6189 ;;		On exit  : 0/0
  6190 ;;		Unchanged: 0/0
  6191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6193 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6195 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6196 ;;Total ram usage:        2 bytes
  6197 ;; Hardware stack levels used:    1
  6198 ;; Hardware stack levels required when called:    2
  6199 ;; This function calls:
  6200 ;;		Nothing
  6201 ;; This function is called by:
  6202 ;;		_write_single_holding
  6203 ;; This function uses a non-reentrant model
  6204 ;;
  6205                           
  6206                           	psect	text29
  6207  002942                     __ptext29:
  6208                           	opt stack 0
  6209  002942                     _hex2pbcd:
  6210                           	opt stack 24
  6211                           
  6212                           ;incstack = 0
  6213                           ;hex2pbcd@hex_num stored from wreg
  6214  002942  6E14               	movwf	hex2pbcd@hex_num,c
  6215                           
  6216                           ;i2c_e2p_rtc.c: 349: char high = 0;
  6217  002944  0E00               	movlw	0
  6218  002946  6E15               	movwf	hex2pbcd@high,c
  6219                           
  6220                           ;i2c_e2p_rtc.c: 351: while (hex_num >= 10)
  6221  002948  D003               	goto	l536
  6222  00294A                     
  6223                           ;i2c_e2p_rtc.c: 352: {
  6224                           ;i2c_e2p_rtc.c: 353: high++;
  6225  00294A  2A15               	incf	hex2pbcd@high,f,c
  6226                           
  6227                           ;i2c_e2p_rtc.c: 354: hex_num -= 10;
  6228  00294C  0E0A               	movlw	10
  6229  00294E  5E14               	subwf	hex2pbcd@hex_num,f,c
  6230  002950                     l536:
  6231  002950  0E0A               	movlw	10
  6232  002952  6014               	cpfslt	hex2pbcd@hex_num,c
  6233  002954  D7FA               	goto	l537
  6234                           
  6235                           ;i2c_e2p_rtc.c: 355: }
  6236                           ;i2c_e2p_rtc.c: 356: high = high << 4;
  6237  002956  3815               	swapf	hex2pbcd@high,w,c
  6238  002958  0BF0               	andlw	240
  6239  00295A  6E15               	movwf	hex2pbcd@high,c
  6240                           
  6241                           ;i2c_e2p_rtc.c: 357: high &= 0xf0;
  6242  00295C  0EF0               	movlw	240
  6243  00295E  1615               	andwf	hex2pbcd@high,f,c
  6244                           
  6245                           ;i2c_e2p_rtc.c: 358: hex_num &= 0x0f;
  6246  002960  0E0F               	movlw	15
  6247  002962  1614               	andwf	hex2pbcd@hex_num,f,c
  6248                           
  6249                           ;i2c_e2p_rtc.c: 359: high |= hex_num;
  6250  002964  5014               	movf	hex2pbcd@hex_num,w,c
  6251  002966  1215               	iorwf	hex2pbcd@high,f,c
  6252                           
  6253                           ;i2c_e2p_rtc.c: 360: return high;
  6254  002968  5015               	movf	hex2pbcd@high,w,c
  6255  00296A  0012               	return	
  6256  00296C                     __end_of_hex2pbcd:
  6257                           	opt stack 0
  6258                           tblptru	equ	0xFF8
  6259                           tblptrh	equ	0xFF7
  6260                           tblptrl	equ	0xFF6
  6261                           tablat	equ	0xFF5
  6262                           prodh	equ	0xFF4
  6263                           prodl	equ	0xFF3
  6264                           intcon	equ	0xFF2
  6265                           postinc0	equ	0xFEE
  6266                           wreg	equ	0xFE8
  6267                           indf1	equ	0xFE7
  6268                           fsr1h	equ	0xFE2
  6269                           fsr1l	equ	0xFE1
  6270                           indf2	equ	0xFDF
  6271                           postinc2	equ	0xFDE
  6272                           postdec2	equ	0xFDD
  6273                           fsr2h	equ	0xFDA
  6274                           fsr2l	equ	0xFD9
  6275                           status	equ	0xFD8
  6276                           
  6277 ;; *************** function _address_error *****************
  6278 ;; Defined at:
  6279 ;;		line 178 in file "modbus.c"
  6280 ;; Parameters:    Size  Location     Type
  6281 ;;  func            2   27[COMRAM] unsigned int 
  6282 ;; Auto vars:     Size  Location     Type
  6283 ;;  un1             2   31[COMRAM] struct int_char
  6284 ;;  temp            2   29[COMRAM] unsigned int 
  6285 ;; Return value:  Size  Location     Type
  6286 ;;                  1    wreg      void 
  6287 ;; Registers used:
  6288 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6289 ;; Tracked objects:
  6290 ;;		On entry : 0/0
  6291 ;;		On exit  : 0/0
  6292 ;;		Unchanged: 0/0
  6293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6294 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6295 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6297 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6298 ;;Total ram usage:        6 bytes
  6299 ;; Hardware stack levels used:    1
  6300 ;; Hardware stack levels required when called:    3
  6301 ;; This function calls:
  6302 ;;		_CRC_16
  6303 ;; This function is called by:
  6304 ;;		_decode_mbus_frame
  6305 ;;		_write_single_holding
  6306 ;; This function uses a non-reentrant model
  6307 ;;
  6308                           
  6309                           	psect	text30
  6310  00272A                     __ptext30:
  6311                           	opt stack 0
  6312  00272A                     _address_error:
  6313                           	opt stack 23
  6314                           
  6315                           ;modbus.c: 181: unsigned int temp;
  6316                           ;modbus.c: 182: union int_char un1;
  6317                           ;modbus.c: 183: temp = func;
  6318                           
  6319                           ;incstack = 0
  6320  00272A  C01C  F01E         	movff	address_error@func,address_error@temp
  6321  00272E  C01D  F01F         	movff	address_error@func+1,address_error@temp+1
  6322                           
  6323                           ;modbus.c: 184: mbus_var.tx_buff[0] = mbus_var.slave_id;
  6324  002732  C1CF  F165         	movff	_mbus_var+107,_mbus_var+1
  6325                           
  6326                           ;modbus.c: 185: mbus_var.tx_buff[1] = temp|0x80;
  6327  002736  501E               	movf	address_error@temp,w,c
  6328  002738  0980               	iorlw	128
  6329  00273A  0101               	movlb	1	; () banked
  6330  00273C  6F66               	movwf	(_mbus_var+2)& (0+255),b
  6331                           
  6332                           ; BSR set to: 1
  6333                           ;modbus.c: 186: mbus_var.tx_buff[2] = 0x02;
  6334  00273E  0E02               	movlw	2
  6335  002740  6F67               	movwf	(_mbus_var+3)& (0+255),b
  6336                           
  6337                           ; BSR set to: 1
  6338                           ;modbus.c: 187: un1.int_val = CRC_16(mbus_var.tx_buff,3);
  6339  002742  0E65               	movlw	low (_mbus_var+1)
  6340  002744  6E14               	movwf	CRC_16@ptr,c
  6341  002746  0E01               	movlw	high (_mbus_var+1)
  6342  002748  6E15               	movwf	CRC_16@ptr+1,c
  6343  00274A  0E03               	movlw	3
  6344  00274C  6E16               	movwf	CRC_16@cnts,c
  6345  00274E  EC4A  F012         	call	_CRC_16	;wreg free
  6346  002752  C014  F020         	movff	?_CRC_16,address_error@un1
  6347  002756  C015  F021         	movff	?_CRC_16+1,address_error@un1+1
  6348                           
  6349                           ;modbus.c: 188: mbus_var.tx_buff[3] = un1.char_val[0];
  6350  00275A  C020  F168         	movff	address_error@un1,_mbus_var+4
  6351                           
  6352                           ;modbus.c: 189: mbus_var.tx_buff[4] = un1.char_val[1];
  6353  00275E  C021  F169         	movff	address_error@un1+1,_mbus_var+5
  6354                           
  6355                           ;modbus.c: 190: mbus_var.send_frame_cmpr = 4;
  6356  002762  0E04               	movlw	4
  6357  002764  0101               	movlb	1	; () banked
  6358  002766  6FC9               	movwf	(_mbus_var+101)& (0+255),b
  6359                           
  6360                           ; BSR set to: 1
  6361                           ;modbus.c: 191: mbus_var.send_ptr = 0;
  6362  002768  0E00               	movlw	0
  6363  00276A  6FCD               	movwf	(_mbus_var+105)& (0+255),b
  6364                           
  6365                           ; BSR set to: 1
  6366                           ;modbus.c: 192: mbus_var.frame_send_flag = 1;
  6367  00276C  0E01               	movlw	1
  6368  00276E  6FCC               	movwf	(_mbus_var+104)& (0+255),b
  6369                           
  6370                           ; BSR set to: 1
  6371  002770  0012               	return		;funcret
  6372  002772                     __end_of_address_error:
  6373                           	opt stack 0
  6374                           tblptru	equ	0xFF8
  6375                           tblptrh	equ	0xFF7
  6376                           tblptrl	equ	0xFF6
  6377                           tablat	equ	0xFF5
  6378                           prodh	equ	0xFF4
  6379                           prodl	equ	0xFF3
  6380                           intcon	equ	0xFF2
  6381                           postinc0	equ	0xFEE
  6382                           wreg	equ	0xFE8
  6383                           indf1	equ	0xFE7
  6384                           fsr1h	equ	0xFE2
  6385                           fsr1l	equ	0xFE1
  6386                           indf2	equ	0xFDF
  6387                           postinc2	equ	0xFDE
  6388                           postdec2	equ	0xFDD
  6389                           fsr2h	equ	0xFDA
  6390                           fsr2l	equ	0xFD9
  6391                           status	equ	0xFD8
  6392                           
  6393 ;; *************** function _accept_key *****************
  6394 ;; Defined at:
  6395 ;;		line 70 in file "logic.c"
  6396 ;; Parameters:    Size  Location     Type
  6397 ;;		None
  6398 ;; Auto vars:     Size  Location     Type
  6399 ;;  i               1   19[COMRAM] unsigned char 
  6400 ;; Return value:  Size  Location     Type
  6401 ;;                  1    wreg      void 
  6402 ;; Registers used:
  6403 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6404 ;; Tracked objects:
  6405 ;;		On entry : 0/0
  6406 ;;		On exit  : 0/0
  6407 ;;		Unchanged: 0/0
  6408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6410 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6412 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6413 ;;Total ram usage:        1 bytes
  6414 ;; Hardware stack levels used:    1
  6415 ;; Hardware stack levels required when called:    2
  6416 ;; This function calls:
  6417 ;;		Nothing
  6418 ;; This function is called by:
  6419 ;;		_fault_detection
  6420 ;;		_write_single_holding
  6421 ;; This function uses a non-reentrant model
  6422 ;;
  6423                           
  6424                           	psect	text31
  6425  002552                     __ptext31:
  6426                           	opt stack 0
  6427  002552                     _accept_key:
  6428                           	opt stack 27
  6429                           
  6430                           ;logic.c: 72: unsigned char i;
  6431                           ;logic.c: 73: if((logic_var.status_flg & 0x08) == 0x08)
  6432                           
  6433                           ; BSR set to: 1
  6434                           ;incstack = 0
  6435  002552  0100               	movlb	0	; () banked
  6436  002554  A7AF               	btfss	(_logic_var+79)& (0+255),3,b
  6437  002556  0012               	return	
  6438                           
  6439                           ; BSR set to: 0
  6440                           ;logic.c: 74: {
  6441                           ;logic.c: 75: for(i = 0; i < 3; i++)
  6442  002558  0E00               	movlw	0
  6443  00255A  6E14               	movwf	accept_key@i,c
  6444  00255C                     l4778:
  6445                           
  6446                           ; BSR set to: 0
  6447  00255C  0E02               	movlw	2
  6448  00255E  6414               	cpfsgt	accept_key@i,c
  6449  002560  D001               	goto	l412
  6450  002562  D01E               	goto	u3620
  6451  002564                     l412:
  6452                           
  6453                           ;logic.c: 76: {
  6454                           ;logic.c: 77: logic_var.flash_data[i].bytes = 0;
  6455                           
  6456                           ; BSR set to: 0
  6457  002564  5014               	movf	accept_key@i,w,c
  6458  002566  0D01               	mullw	1
  6459  002568  0E96               	movlw	low (_logic_var+54)
  6460  00256A  24F3               	addwf	prodl,w,c
  6461  00256C  6ED9               	movwf	fsr2l,c
  6462  00256E  0E00               	movlw	high (_logic_var+54)
  6463  002570  20F4               	addwfc	prodh,w,c
  6464  002572  6EDA               	movwf	fsr2h,c
  6465  002574  0E00               	movlw	0
  6466  002576  6EDF               	movwf	indf2,c
  6467                           
  6468                           ;logic.c: 78: logic_var.hist_hold_data[i].bytes = logic_var.hold_data[i].bytes;
  6469  002578  5014               	movf	accept_key@i,w,c
  6470  00257A  0D01               	mullw	1
  6471  00257C  0E90               	movlw	low (_logic_var+48)
  6472  00257E  24F3               	addwf	prodl,w,c
  6473  002580  6ED9               	movwf	fsr2l,c
  6474  002582  0E00               	movlw	high (_logic_var+48)
  6475  002584  20F4               	addwfc	prodh,w,c
  6476  002586  6EDA               	movwf	fsr2h,c
  6477  002588  5014               	movf	accept_key@i,w,c
  6478  00258A  0D01               	mullw	1
  6479  00258C  0E93               	movlw	low (_logic_var+51)
  6480  00258E  24F3               	addwf	prodl,w,c
  6481  002590  6EE1               	movwf	fsr1l,c
  6482  002592  0E00               	movlw	high (_logic_var+51)
  6483  002594  20F4               	addwfc	prodh,w,c
  6484  002596  6EE2               	movwf	fsr1h,c
  6485  002598  CFDF FFE7          	movff	indf2,indf1
  6486  00259C  2A14               	incf	accept_key@i,f,c
  6487  00259E  D7DE               	goto	l4778
  6488  0025A0                     u3620:
  6489                           
  6490                           ;logic.c: 79: }
  6491                           ;logic.c: 80: logic_var.rly_status &= ~0x03;
  6492  0025A0  0EFC               	movlw	252
  6493  0025A2  0100               	movlb	0	; () banked
  6494  0025A4  17B0               	andwf	(_logic_var+80)& (0+255),f,b
  6495                           
  6496                           ; BSR set to: 0
  6497                           ;logic.c: 81: logic_var.status_flg |= 0x04;
  6498  0025A6  85AF               	bsf	(_logic_var+79)& (0+255),2,b
  6499  0025A8  0012               	return	
  6500  0025AA                     __end_of_accept_key:
  6501                           	opt stack 0
  6502                           tblptru	equ	0xFF8
  6503                           tblptrh	equ	0xFF7
  6504                           tblptrl	equ	0xFF6
  6505                           tablat	equ	0xFF5
  6506                           prodh	equ	0xFF4
  6507                           prodl	equ	0xFF3
  6508                           intcon	equ	0xFF2
  6509                           postinc0	equ	0xFEE
  6510                           wreg	equ	0xFE8
  6511                           indf1	equ	0xFE7
  6512                           fsr1h	equ	0xFE2
  6513                           fsr1l	equ	0xFE1
  6514                           indf2	equ	0xFDF
  6515                           postinc2	equ	0xFDE
  6516                           postdec2	equ	0xFDD
  6517                           fsr2h	equ	0xFDA
  6518                           fsr2l	equ	0xFD9
  6519                           status	equ	0xFD8
  6520                           
  6521 ;; *************** function _FillNSend_Echo_Frame *****************
  6522 ;; Defined at:
  6523 ;;		line 223 in file "modbus.c"
  6524 ;; Parameters:    Size  Location     Type
  6525 ;;		None
  6526 ;; Auto vars:     Size  Location     Type
  6527 ;;  i               1   19[COMRAM] unsigned char 
  6528 ;; Return value:  Size  Location     Type
  6529 ;;                  1    wreg      void 
  6530 ;; Registers used:
  6531 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6532 ;; Tracked objects:
  6533 ;;		On entry : 0/0
  6534 ;;		On exit  : 0/0
  6535 ;;		Unchanged: 0/0
  6536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6538 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6540 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6541 ;;Total ram usage:        1 bytes
  6542 ;; Hardware stack levels used:    1
  6543 ;; Hardware stack levels required when called:    2
  6544 ;; This function calls:
  6545 ;;		Nothing
  6546 ;; This function is called by:
  6547 ;;		_write_single_holding
  6548 ;; This function uses a non-reentrant model
  6549 ;;
  6550                           
  6551                           	psect	text32
  6552  002696                     __ptext32:
  6553                           	opt stack 0
  6554  002696                     _FillNSend_Echo_Frame:
  6555                           	opt stack 24
  6556                           
  6557                           ;modbus.c: 225: unsigned char i = 0;
  6558                           
  6559                           ; BSR set to: 0
  6560                           ;incstack = 0
  6561  002696  0E00               	movlw	0
  6562  002698  6E14               	movwf	FillNSend_Echo_Frame@i,c
  6563                           
  6564                           ;modbus.c: 227: for(i=0;i<mbus_var.ptr;i++)
  6565  00269A  0E00               	movlw	0
  6566  00269C  6E14               	movwf	FillNSend_Echo_Frame@i,c
  6567  00269E  D013               	goto	l678
  6568  0026A0                     
  6569                           ;modbus.c: 228: {
  6570                           ;modbus.c: 229: mbus_var.tx_buff[i] = mbus_var.rx_buff[i];
  6571  0026A0  5014               	movf	FillNSend_Echo_Frame@i,w,c
  6572  0026A2  0D01               	mullw	1
  6573  0026A4  0E97               	movlw	low (_mbus_var+51)
  6574  0026A6  24F3               	addwf	prodl,w,c
  6575  0026A8  6ED9               	movwf	fsr2l,c
  6576  0026AA  0E01               	movlw	high (_mbus_var+51)
  6577  0026AC  20F4               	addwfc	prodh,w,c
  6578  0026AE  6EDA               	movwf	fsr2h,c
  6579  0026B0  5014               	movf	FillNSend_Echo_Frame@i,w,c
  6580  0026B2  0D01               	mullw	1
  6581  0026B4  0E65               	movlw	low (_mbus_var+1)
  6582  0026B6  24F3               	addwf	prodl,w,c
  6583  0026B8  6EE1               	movwf	fsr1l,c
  6584  0026BA  0E01               	movlw	high (_mbus_var+1)
  6585  0026BC  20F4               	addwfc	prodh,w,c
  6586  0026BE  6EE2               	movwf	fsr1h,c
  6587  0026C0  CFDF FFE7          	movff	indf2,indf1
  6588  0026C4  2A14               	incf	FillNSend_Echo_Frame@i,f,c
  6589  0026C6                     l678:
  6590  0026C6  0101               	movlb	1	; () banked
  6591  0026C8  51CE               	movf	(_mbus_var+106)& (0+255),w,b
  6592  0026CA  5C14               	subwf	FillNSend_Echo_Frame@i,w,c
  6593  0026CC  A0D8               	btfss	status,0,c
  6594  0026CE  D7E8               	goto	l679
  6595                           
  6596                           ; BSR set to: 1
  6597                           ;modbus.c: 230: }
  6598                           ;modbus.c: 231: mbus_var.send_frame_cmpr = mbus_var.ptr-1;
  6599                           
  6600                           ; BSR set to: 1
  6601  0026D0  05CE               	decf	(_mbus_var+106)& (0+255),w,b
  6602  0026D2  6FC9               	movwf	(_mbus_var+101)& (0+255),b
  6603                           
  6604                           ; BSR set to: 1
  6605                           ;modbus.c: 232: mbus_var.send_ptr = 0;
  6606  0026D4  0E00               	movlw	0
  6607  0026D6  6FCD               	movwf	(_mbus_var+105)& (0+255),b
  6608                           
  6609                           ; BSR set to: 1
  6610                           ;modbus.c: 233: mbus_var.ptr = 0;
  6611  0026D8  0E00               	movlw	0
  6612  0026DA  6FCE               	movwf	(_mbus_var+106)& (0+255),b
  6613                           
  6614                           ; BSR set to: 1
  6615                           ;modbus.c: 234: mbus_var.frame_send_flag = 1;
  6616  0026DC  0E01               	movlw	1
  6617  0026DE  6FCC               	movwf	(_mbus_var+104)& (0+255),b
  6618                           
  6619                           ; BSR set to: 1
  6620  0026E0  0012               	return		;funcret
  6621  0026E2                     __end_of_FillNSend_Echo_Frame:
  6622                           	opt stack 0
  6623                           tblptru	equ	0xFF8
  6624                           tblptrh	equ	0xFF7
  6625                           tblptrl	equ	0xFF6
  6626                           tablat	equ	0xFF5
  6627                           prodh	equ	0xFF4
  6628                           prodl	equ	0xFF3
  6629                           intcon	equ	0xFF2
  6630                           postinc0	equ	0xFEE
  6631                           wreg	equ	0xFE8
  6632                           indf1	equ	0xFE7
  6633                           fsr1h	equ	0xFE2
  6634                           fsr1l	equ	0xFE1
  6635                           indf2	equ	0xFDF
  6636                           postinc2	equ	0xFDE
  6637                           postdec2	equ	0xFDD
  6638                           fsr2h	equ	0xFDA
  6639                           fsr2l	equ	0xFD9
  6640                           status	equ	0xFD8
  6641                           
  6642 ;; *************** function _send_log_rd *****************
  6643 ;; Defined at:
  6644 ;;		line 109 in file "data_log.c"
  6645 ;; Parameters:    Size  Location     Type
  6646 ;;  record          2   33[COMRAM] unsigned int 
  6647 ;; Auto vars:     Size  Location     Type
  6648 ;;  templ           4   41[COMRAM] unsigned long 
  6649 ;;  tempi           2   45[COMRAM] unsigned int 
  6650 ;;  i               1   47[COMRAM] unsigned char 
  6651 ;; Return value:  Size  Location     Type
  6652 ;;                  1    wreg      void 
  6653 ;; Registers used:
  6654 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6655 ;; Tracked objects:
  6656 ;;		On entry : 0/0
  6657 ;;		On exit  : 0/0
  6658 ;;		Unchanged: 0/0
  6659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6660 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6661 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6662 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6663 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6664 ;;Total ram usage:       15 bytes
  6665 ;; Hardware stack levels used:    1
  6666 ;; Hardware stack levels required when called:    5
  6667 ;; This function calls:
  6668 ;;		_CRC_16
  6669 ;;		_i2c_byte_rd
  6670 ;; This function is called by:
  6671 ;;		_decode_mbus_frame
  6672 ;; This function uses a non-reentrant model
  6673 ;;
  6674                           
  6675                           	psect	text33
  6676  001B5E                     __ptext33:
  6677                           	opt stack 0
  6678  001B5E                     _send_log_rd:
  6679                           	opt stack 22
  6680                           
  6681                           ;data_log.c: 111: unsigned long templ;
  6682                           ;data_log.c: 112: unsigned int tempi;
  6683                           ;data_log.c: 113: unsigned char i;
  6684                           ;data_log.c: 115: templ = (long)(record * 16) + 16;
  6685                           
  6686                           ; BSR set to: 1
  6687                           ;incstack = 0
  6688  001B5E  C022  F024         	movff	send_log_rd@record,??_send_log_rd
  6689  001B62  C023  F025         	movff	send_log_rd@record+1,??_send_log_rd+1
  6690  001B66  3A24               	swapf	??_send_log_rd,f,c
  6691  001B68  3A25               	swapf	??_send_log_rd+1,f,c
  6692  001B6A  0EF0               	movlw	240
  6693  001B6C  1625               	andwf	??_send_log_rd+1,f,c
  6694  001B6E  5024               	movf	??_send_log_rd,w,c
  6695  001B70  0B0F               	andlw	15
  6696  001B72  1225               	iorwf	??_send_log_rd+1,f,c
  6697  001B74  0EF0               	movlw	240
  6698  001B76  1624               	andwf	??_send_log_rd,f,c
  6699  001B78  5024               	movf	??_send_log_rd,w,c
  6700  001B7A  6E26               	movwf	(??_send_log_rd+2)& (0+255),c
  6701  001B7C  5025               	movf	??_send_log_rd+1,w,c
  6702  001B7E  6E27               	movwf	(??_send_log_rd+3)& (0+255),c
  6703  001B80  6A28               	clrf	(??_send_log_rd+4)& (0+255),c
  6704  001B82  6A29               	clrf	(??_send_log_rd+5)& (0+255),c
  6705  001B84  0E10               	movlw	16
  6706  001B86  2426               	addwf	??_send_log_rd+2,w,c
  6707  001B88  6E2A               	movwf	send_log_rd@templ,c
  6708  001B8A  0E00               	movlw	0
  6709  001B8C  2027               	addwfc	??_send_log_rd+3,w,c
  6710  001B8E  6E2B               	movwf	send_log_rd@templ+1,c
  6711  001B90  0E00               	movlw	0
  6712  001B92  2028               	addwfc	??_send_log_rd+4,w,c
  6713  001B94  6E2C               	movwf	send_log_rd@templ+2,c
  6714  001B96  0E00               	movlw	0
  6715  001B98  2029               	addwfc	??_send_log_rd+5,w,c
  6716  001B9A  6E2D               	movwf	send_log_rd@templ+3,c
  6717                           
  6718                           ;data_log.c: 117: mbus_var.tx_buff[0] = mbus_var.slave_id;
  6719  001B9C  C1CF  F165         	movff	_mbus_var+107,_mbus_var+1
  6720                           
  6721                           ;data_log.c: 118: mbus_var.tx_buff[1] = 8;
  6722  001BA0  0E08               	movlw	8
  6723  001BA2  0101               	movlb	1	; () banked
  6724  001BA4  6F66               	movwf	(_mbus_var+2)& (0+255),b
  6725                           
  6726                           ; BSR set to: 1
  6727                           ;data_log.c: 119: mbus_var.tx_buff[2] = (char)(record >> 8);
  6728  001BA6  5023               	movf	send_log_rd@record+1,w,c
  6729  001BA8  6F67               	movwf	(_mbus_var+3)& (0+255),b
  6730                           
  6731                           ; BSR set to: 1
  6732                           ;data_log.c: 120: mbus_var.tx_buff[3] = (char)(record);
  6733  001BAA  C022  F168         	movff	send_log_rd@record,_mbus_var+4
  6734                           
  6735                           ; BSR set to: 1
  6736                           ;data_log.c: 122: for(i=0;i<16;i++)
  6737  001BAE  0E00               	movlw	0
  6738  001BB0  6E30               	movwf	send_log_rd@i,c
  6739  001BB2                     l4902:
  6740                           
  6741                           ; BSR set to: 1
  6742  001BB2  0E0F               	movlw	15
  6743  001BB4  6430               	cpfsgt	send_log_rd@i,c
  6744  001BB6  D001               	goto	l597
  6745  001BB8  D022               	goto	u3690
  6746  001BBA                     l597:
  6747                           
  6748                           ;data_log.c: 123: {
  6749                           ;data_log.c: 124: mbus_var.tx_buff[i+4] = i2c_byte_rd(chip_address,templ);
  6750                           
  6751                           ; BSR set to: 1
  6752  001BBA  5030               	movf	send_log_rd@i,w,c
  6753  001BBC  6E24               	movwf	??_send_log_rd& (0+255),c
  6754  001BBE  6A25               	clrf	(??_send_log_rd+1)& (0+255),c
  6755  001BC0  0E04               	movlw	4
  6756  001BC2  2624               	addwf	??_send_log_rd,f,c
  6757  001BC4  0E00               	movlw	0
  6758  001BC6  2225               	addwfc	??_send_log_rd+1,f,c
  6759  001BC8  0E65               	movlw	low (_mbus_var+1)
  6760  001BCA  2424               	addwf	??_send_log_rd,w,c
  6761  001BCC  6ED9               	movwf	fsr2l,c
  6762  001BCE  0E01               	movlw	high (_mbus_var+1)
  6763  001BD0  2025               	addwfc	??_send_log_rd+1,w,c
  6764  001BD2  6EDA               	movwf	fsr2h,c
  6765  001BD4  C02A  F017         	movff	send_log_rd@templ,i2c_byte_rd@adr
  6766  001BD8  C02B  F018         	movff	send_log_rd@templ+1,i2c_byte_rd@adr+1
  6767  001BDC  C02C  F019         	movff	send_log_rd@templ+2,i2c_byte_rd@adr+2
  6768  001BE0  C02D  F01A         	movff	send_log_rd@templ+3,i2c_byte_rd@adr+3
  6769  001BE4  0100               	movlb	0	; () banked
  6770  001BE6  51C3               	movf	_chip_address& (0+255),w,b
  6771  001BE8  EC1C  F011         	call	_i2c_byte_rd
  6772  001BEC  6EDF               	movwf	indf2,c
  6773                           
  6774                           ;data_log.c: 125: templ++;
  6775  001BEE  0E01               	movlw	1
  6776  001BF0  262A               	addwf	send_log_rd@templ,f,c
  6777  001BF2  0E00               	movlw	0
  6778  001BF4  222B               	addwfc	send_log_rd@templ+1,f,c
  6779  001BF6  222C               	addwfc	send_log_rd@templ+2,f,c
  6780  001BF8  222D               	addwfc	send_log_rd@templ+3,f,c
  6781  001BFA  2A30               	incf	send_log_rd@i,f,c
  6782  001BFC  D7DA               	goto	l4902
  6783  001BFE                     u3690:
  6784                           
  6785                           ;data_log.c: 126: }
  6786                           ;data_log.c: 128: tempi = CRC_16(mbus_var.tx_buff,20);
  6787  001BFE  0E65               	movlw	low (_mbus_var+1)
  6788  001C00  6E14               	movwf	CRC_16@ptr,c
  6789  001C02  0E01               	movlw	high (_mbus_var+1)
  6790  001C04  6E15               	movwf	CRC_16@ptr+1,c
  6791  001C06  0E14               	movlw	20
  6792  001C08  6E16               	movwf	CRC_16@cnts,c
  6793  001C0A  EC4A  F012         	call	_CRC_16	;wreg free
  6794  001C0E  C014  F02E         	movff	?_CRC_16,send_log_rd@tempi
  6795  001C12  C015  F02F         	movff	?_CRC_16+1,send_log_rd@tempi+1
  6796                           
  6797                           ;data_log.c: 129: mbus_var.tx_buff[20] = tempi >> 8;
  6798  001C16  502F               	movf	send_log_rd@tempi+1,w,c
  6799  001C18  0101               	movlb	1	; () banked
  6800  001C1A  6F79               	movwf	(_mbus_var+21)& (0+255),b
  6801                           
  6802                           ; BSR set to: 1
  6803                           ;data_log.c: 130: mbus_var.tx_buff[21] = (char)tempi;
  6804  001C1C  C02E  F17A         	movff	send_log_rd@tempi,_mbus_var+22
  6805                           
  6806                           ; BSR set to: 1
  6807                           ;data_log.c: 132: mbus_var.send_frame_cmpr = 21;
  6808  001C20  0E15               	movlw	21
  6809  001C22  6FC9               	movwf	(_mbus_var+101)& (0+255),b
  6810                           
  6811                           ; BSR set to: 1
  6812                           ;data_log.c: 133: mbus_var.frame_send_flag = 1;
  6813  001C24  0E01               	movlw	1
  6814  001C26  6FCC               	movwf	(_mbus_var+104)& (0+255),b
  6815                           
  6816                           ; BSR set to: 1
  6817                           ;data_log.c: 134: mbus_var.send_ptr = 0;
  6818  001C28  0E00               	movlw	0
  6819  001C2A  6FCD               	movwf	(_mbus_var+105)& (0+255),b
  6820                           
  6821                           ; BSR set to: 1
  6822  001C2C  0012               	return		;funcret
  6823  001C2E                     __end_of_send_log_rd:
  6824                           	opt stack 0
  6825                           tblptru	equ	0xFF8
  6826                           tblptrh	equ	0xFF7
  6827                           tblptrl	equ	0xFF6
  6828                           tablat	equ	0xFF5
  6829                           prodh	equ	0xFF4
  6830                           prodl	equ	0xFF3
  6831                           intcon	equ	0xFF2
  6832                           postinc0	equ	0xFEE
  6833                           wreg	equ	0xFE8
  6834                           indf1	equ	0xFE7
  6835                           fsr1h	equ	0xFE2
  6836                           fsr1l	equ	0xFE1
  6837                           indf2	equ	0xFDF
  6838                           postinc2	equ	0xFDE
  6839                           postdec2	equ	0xFDD
  6840                           fsr2h	equ	0xFDA
  6841                           fsr2l	equ	0xFD9
  6842                           status	equ	0xFD8
  6843                           
  6844 ;; *************** function _i2c_byte_rd *****************
  6845 ;; Defined at:
  6846 ;;		line 160 in file "i2c_e2p_rtc.c"
  6847 ;; Parameters:    Size  Location     Type
  6848 ;;  dev_addr        1    wreg     unsigned char 
  6849 ;;  adr             4   22[COMRAM] unsigned long 
  6850 ;; Auto vars:     Size  Location     Type
  6851 ;;  dev_addr        1   29[COMRAM] unsigned char 
  6852 ;;  un1             2   30[COMRAM] struct int_char
  6853 ;;  control_byte    1   32[COMRAM] unsigned char 
  6854 ;;  temp            1   28[COMRAM] unsigned char 
  6855 ;;  addrl           1   27[COMRAM] unsigned char 
  6856 ;;  addrh           1   26[COMRAM] unsigned char 
  6857 ;; Return value:  Size  Location     Type
  6858 ;;                  1    wreg      unsigned char 
  6859 ;; Registers used:
  6860 ;;		wreg, status,2, status,0, cstack
  6861 ;; Tracked objects:
  6862 ;;		On entry : 0/0
  6863 ;;		On exit  : 0/0
  6864 ;;		Unchanged: 0/0
  6865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6866 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6867 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6869 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6870 ;;Total ram usage:       11 bytes
  6871 ;; Hardware stack levels used:    1
  6872 ;; Hardware stack levels required when called:    4
  6873 ;; This function calls:
  6874 ;;		_i2c_no_ackout
  6875 ;;		_i2c_shift_in
  6876 ;;		_i2c_shift_out
  6877 ;;		_i2c_start
  6878 ;;		_i2c_stop
  6879 ;; This function is called by:
  6880 ;;		_main
  6881 ;;		_send_log_rd
  6882 ;;		_i2c_int_rd
  6883 ;; This function uses a non-reentrant model
  6884 ;;
  6885                           
  6886                           	psect	text34
  6887  002238                     __ptext34:
  6888                           	opt stack 0
  6889  002238                     _i2c_byte_rd:
  6890                           	opt stack 26
  6891                           
  6892                           ; BSR set to: 1
  6893                           ;incstack = 0
  6894                           ;i2c_byte_rd@dev_addr stored from wreg
  6895  002238  6E1E               	movwf	i2c_byte_rd@dev_addr,c
  6896                           
  6897                           ;i2c_e2p_rtc.c: 165: unsigned char temp=0;
  6898  00223A  0E00               	movlw	0
  6899  00223C  6E1D               	movwf	i2c_byte_rd@temp,c
  6900                           
  6901                           ;i2c_e2p_rtc.c: 166: unsigned char addrh,addrl;
  6902                           ;i2c_e2p_rtc.c: 167: unsigned char control_byte;
  6903                           ;i2c_e2p_rtc.c: 168: union int_char un1;
  6904                           ;i2c_e2p_rtc.c: 170: if(adr>0xffff)
  6905  00223E  501A               	movf	i2c_byte_rd@adr+3,w,c
  6906  002240  E103               	bnz	u3450
  6907  002242  0419               	decf	i2c_byte_rd@adr+2,w,c
  6908  002244  A0D8               	btfss	status,0,c
  6909  002246  D002               	goto	l501
  6910  002248                     u3450:
  6911                           
  6912                           ;i2c_e2p_rtc.c: 171: control_byte=0XA8;
  6913  002248  0EA8               	movlw	168
  6914  00224A  D001               	goto	L5
  6915  00224C                     l501:
  6916                           
  6917                           ;i2c_e2p_rtc.c: 172: else
  6918                           ;i2c_e2p_rtc.c: 173: control_byte=0XA0;
  6919  00224C  0EA0               	movlw	160
  6920  00224E                     L5:
  6921  00224E  6E21               	movwf	i2c_byte_rd@control_byte,c
  6922                           
  6923                           ;i2c_e2p_rtc.c: 175: adr = (unsigned int)adr;
  6924  002250  C017  F017         	movff	i2c_byte_rd@adr,i2c_byte_rd@adr
  6925  002254  C018  F018         	movff	i2c_byte_rd@adr+1,i2c_byte_rd@adr+1
  6926  002258  6A19               	clrf	i2c_byte_rd@adr+2,c
  6927  00225A  6A1A               	clrf	i2c_byte_rd@adr+3,c
  6928                           
  6929                           ;i2c_e2p_rtc.c: 176: un1.int_val = adr;
  6930  00225C  C017  F01F         	movff	i2c_byte_rd@adr,i2c_byte_rd@un1
  6931  002260  C018  F020         	movff	i2c_byte_rd@adr+1,i2c_byte_rd@un1+1
  6932                           
  6933                           ;i2c_e2p_rtc.c: 177: addrh = un1.char_val[1];
  6934  002264  C020  F01B         	movff	i2c_byte_rd@un1+1,i2c_byte_rd@addrh
  6935                           
  6936                           ;i2c_e2p_rtc.c: 178: addrl = un1.char_val[0];
  6937  002268  C01F  F01C         	movff	i2c_byte_rd@un1,i2c_byte_rd@addrl
  6938                           
  6939                           ;i2c_e2p_rtc.c: 179: dev_addr=dev_addr<<1;
  6940  00226C  501E               	movf	i2c_byte_rd@dev_addr,w,c
  6941  00226E  241E               	addwf	i2c_byte_rd@dev_addr,w,c
  6942  002270  6E1E               	movwf	i2c_byte_rd@dev_addr,c
  6943                           
  6944                           ;i2c_e2p_rtc.c: 180: control_byte = control_byte | dev_addr;
  6945  002272  5021               	movf	i2c_byte_rd@control_byte,w,c
  6946  002274  101E               	iorwf	i2c_byte_rd@dev_addr,w,c
  6947  002276  6E21               	movwf	i2c_byte_rd@control_byte,c
  6948                           
  6949                           ;i2c_e2p_rtc.c: 182: i2c_start();
  6950  002278  ECF0  F014         	call	_i2c_start	;wreg free
  6951                           
  6952                           ;i2c_e2p_rtc.c: 183: i2c_shift_out(control_byte,8);
  6953  00227C  0E08               	movlw	8
  6954  00227E  6E14               	movwf	i2c_shift_out@cnts,c
  6955  002280  5021               	movf	i2c_byte_rd@control_byte,w,c
  6956  002282  ECD5  F012         	call	_i2c_shift_out
  6957                           
  6958                           ;i2c_e2p_rtc.c: 184: i2c_shift_out(addrh,8);
  6959  002286  0E08               	movlw	8
  6960  002288  6E14               	movwf	i2c_shift_out@cnts,c
  6961  00228A  501B               	movf	i2c_byte_rd@addrh,w,c
  6962  00228C  ECD5  F012         	call	_i2c_shift_out
  6963                           
  6964                           ;i2c_e2p_rtc.c: 185: i2c_shift_out(addrl,8);
  6965  002290  0E08               	movlw	8
  6966  002292  6E14               	movwf	i2c_shift_out@cnts,c
  6967  002294  501C               	movf	i2c_byte_rd@addrl,w,c
  6968  002296  ECD5  F012         	call	_i2c_shift_out
  6969                           
  6970                           ;i2c_e2p_rtc.c: 187: control_byte |= 0x01;
  6971  00229A  8021               	bsf	i2c_byte_rd@control_byte,0,c
  6972                           
  6973                           ;i2c_e2p_rtc.c: 189: i2c_start();
  6974  00229C  ECF0  F014         	call	_i2c_start	;wreg free
  6975                           
  6976                           ;i2c_e2p_rtc.c: 190: i2c_shift_out(control_byte,8);
  6977  0022A0  0E08               	movlw	8
  6978  0022A2  6E14               	movwf	i2c_shift_out@cnts,c
  6979  0022A4  5021               	movf	i2c_byte_rd@control_byte,w,c
  6980  0022A6  ECD5  F012         	call	_i2c_shift_out
  6981                           
  6982                           ;i2c_e2p_rtc.c: 191: temp = i2c_shift_in(8);
  6983  0022AA  0E08               	movlw	8
  6984  0022AC  EC3E  F014         	call	_i2c_shift_in
  6985  0022B0  6E1D               	movwf	i2c_byte_rd@temp,c
  6986                           
  6987                           ;i2c_e2p_rtc.c: 192: i2c_no_ackout();
  6988  0022B2  ECF9  F014         	call	_i2c_no_ackout	;wreg free
  6989                           
  6990                           ;i2c_e2p_rtc.c: 193: i2c_stop();
  6991  0022B6  EC02  F015         	call	_i2c_stop	;wreg free
  6992                           
  6993                           ;i2c_e2p_rtc.c: 194: return(temp);
  6994  0022BA  501D               	movf	i2c_byte_rd@temp,w,c
  6995  0022BC  0012               	return	
  6996  0022BE                     __end_of_i2c_byte_rd:
  6997                           	opt stack 0
  6998                           tblptru	equ	0xFF8
  6999                           tblptrh	equ	0xFF7
  7000                           tblptrl	equ	0xFF6
  7001                           tablat	equ	0xFF5
  7002                           prodh	equ	0xFF4
  7003                           prodl	equ	0xFF3
  7004                           intcon	equ	0xFF2
  7005                           postinc0	equ	0xFEE
  7006                           wreg	equ	0xFE8
  7007                           indf1	equ	0xFE7
  7008                           fsr1h	equ	0xFE2
  7009                           fsr1l	equ	0xFE1
  7010                           indf2	equ	0xFDF
  7011                           postinc2	equ	0xFDE
  7012                           postdec2	equ	0xFDD
  7013                           fsr2h	equ	0xFDA
  7014                           fsr2l	equ	0xFD9
  7015                           status	equ	0xFD8
  7016                           
  7017 ;; *************** function _i2c_stop *****************
  7018 ;; Defined at:
  7019 ;;		line 146 in file "i2c_e2p_rtc.c"
  7020 ;; Parameters:    Size  Location     Type
  7021 ;;		None
  7022 ;; Auto vars:     Size  Location     Type
  7023 ;;		None
  7024 ;; Return value:  Size  Location     Type
  7025 ;;                  1    wreg      void 
  7026 ;; Registers used:
  7027 ;;		cstack
  7028 ;; Tracked objects:
  7029 ;;		On entry : 0/0
  7030 ;;		On exit  : 0/0
  7031 ;;		Unchanged: 0/0
  7032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7036 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7037 ;;Total ram usage:        0 bytes
  7038 ;; Hardware stack levels used:    1
  7039 ;; Hardware stack levels required when called:    3
  7040 ;; This function calls:
  7041 ;;		_i2c_delay
  7042 ;; This function is called by:
  7043 ;;		_i2c_byte_rd
  7044 ;;		_i2c_byte_wr
  7045 ;;		_rtc_byte_wr
  7046 ;;		_rtc_byte_rd
  7047 ;; This function uses a non-reentrant model
  7048 ;;
  7049                           
  7050                           	psect	text35
  7051  002A04                     __ptext35:
  7052                           	opt stack 0
  7053  002A04                     _i2c_stop:
  7054                           	opt stack 24
  7055                           
  7056                           ;i2c_e2p_rtc.c: 152: PORTCbits.RC4 = 0;
  7057                           
  7058                           ;incstack = 0
  7059  002A04  9882               	bcf	3970,4,c	;volatile
  7060                           
  7061                           ;i2c_e2p_rtc.c: 153: i2c_delay();
  7062  002A06  EC1F  F014         	call	_i2c_delay	;wreg free
  7063                           
  7064                           ;i2c_e2p_rtc.c: 154: PORTCbits.RC3 = 1;
  7065  002A0A  8682               	bsf	3970,3,c	;volatile
  7066                           
  7067                           ;i2c_e2p_rtc.c: 155: i2c_delay();
  7068  002A0C  EC1F  F014         	call	_i2c_delay	;wreg free
  7069                           
  7070                           ;i2c_e2p_rtc.c: 156: PORTCbits.RC4 = 1;
  7071  002A10  8882               	bsf	3970,4,c	;volatile
  7072  002A12  0012               	return		;funcret
  7073  002A14                     __end_of_i2c_stop:
  7074                           	opt stack 0
  7075                           tblptru	equ	0xFF8
  7076                           tblptrh	equ	0xFF7
  7077                           tblptrl	equ	0xFF6
  7078                           tablat	equ	0xFF5
  7079                           prodh	equ	0xFF4
  7080                           prodl	equ	0xFF3
  7081                           intcon	equ	0xFF2
  7082                           postinc0	equ	0xFEE
  7083                           wreg	equ	0xFE8
  7084                           indf1	equ	0xFE7
  7085                           fsr1h	equ	0xFE2
  7086                           fsr1l	equ	0xFE1
  7087                           indf2	equ	0xFDF
  7088                           postinc2	equ	0xFDE
  7089                           postdec2	equ	0xFDD
  7090                           fsr2h	equ	0xFDA
  7091                           fsr2l	equ	0xFD9
  7092                           status	equ	0xFD8
  7093                           
  7094 ;; *************** function _i2c_start *****************
  7095 ;; Defined at:
  7096 ;;		line 128 in file "i2c_e2p_rtc.c"
  7097 ;; Parameters:    Size  Location     Type
  7098 ;;		None
  7099 ;; Auto vars:     Size  Location     Type
  7100 ;;		None
  7101 ;; Return value:  Size  Location     Type
  7102 ;;                  1    wreg      void 
  7103 ;; Registers used:
  7104 ;;		cstack
  7105 ;; Tracked objects:
  7106 ;;		On entry : 0/0
  7107 ;;		On exit  : 0/0
  7108 ;;		Unchanged: 0/0
  7109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7114 ;;Total ram usage:        0 bytes
  7115 ;; Hardware stack levels used:    1
  7116 ;; Hardware stack levels required when called:    3
  7117 ;; This function calls:
  7118 ;;		_i2c_delay
  7119 ;; This function is called by:
  7120 ;;		_i2c_byte_rd
  7121 ;;		_i2c_byte_wr
  7122 ;;		_rtc_byte_wr
  7123 ;;		_rtc_byte_rd
  7124 ;; This function uses a non-reentrant model
  7125 ;;
  7126                           
  7127                           	psect	text36
  7128  0029E0                     __ptext36:
  7129                           	opt stack 0
  7130  0029E0                     _i2c_start:
  7131                           	opt stack 24
  7132                           
  7133                           ;i2c_e2p_rtc.c: 136: PORTCbits.RC4 = 1;
  7134                           
  7135                           ;incstack = 0
  7136  0029E0  8882               	bsf	3970,4,c	;volatile
  7137                           
  7138                           ;i2c_e2p_rtc.c: 137: PORTCbits.RC3 = 1;
  7139  0029E2  8682               	bsf	3970,3,c	;volatile
  7140                           
  7141                           ;i2c_e2p_rtc.c: 138: i2c_delay();
  7142  0029E4  EC1F  F014         	call	_i2c_delay	;wreg free
  7143                           
  7144                           ;i2c_e2p_rtc.c: 139: PORTCbits.RC4 = 0;
  7145  0029E8  9882               	bcf	3970,4,c	;volatile
  7146                           
  7147                           ;i2c_e2p_rtc.c: 140: i2c_delay();
  7148  0029EA  EC1F  F014         	call	_i2c_delay	;wreg free
  7149                           
  7150                           ;i2c_e2p_rtc.c: 141: PORTCbits.RC3 = 0;
  7151  0029EE  9682               	bcf	3970,3,c	;volatile
  7152  0029F0  0012               	return		;funcret
  7153  0029F2                     __end_of_i2c_start:
  7154                           	opt stack 0
  7155                           tblptru	equ	0xFF8
  7156                           tblptrh	equ	0xFF7
  7157                           tblptrl	equ	0xFF6
  7158                           tablat	equ	0xFF5
  7159                           prodh	equ	0xFF4
  7160                           prodl	equ	0xFF3
  7161                           intcon	equ	0xFF2
  7162                           postinc0	equ	0xFEE
  7163                           wreg	equ	0xFE8
  7164                           indf1	equ	0xFE7
  7165                           fsr1h	equ	0xFE2
  7166                           fsr1l	equ	0xFE1
  7167                           indf2	equ	0xFDF
  7168                           postinc2	equ	0xFDE
  7169                           postdec2	equ	0xFDD
  7170                           fsr2h	equ	0xFDA
  7171                           fsr2l	equ	0xFD9
  7172                           status	equ	0xFD8
  7173                           
  7174 ;; *************** function _i2c_shift_out *****************
  7175 ;; Defined at:
  7176 ;;		line 21 in file "i2c_e2p_rtc.c"
  7177 ;; Parameters:    Size  Location     Type
  7178 ;;  dat             1    wreg     unsigned char 
  7179 ;;  cnts            1   19[COMRAM] unsigned char 
  7180 ;; Auto vars:     Size  Location     Type
  7181 ;;  dat             1   20[COMRAM] unsigned char 
  7182 ;;  i               1   21[COMRAM] unsigned char 
  7183 ;; Return value:  Size  Location     Type
  7184 ;;                  1    wreg      void 
  7185 ;; Registers used:
  7186 ;;		wreg, status,2, status,0, cstack
  7187 ;; Tracked objects:
  7188 ;;		On entry : 0/0
  7189 ;;		On exit  : 0/0
  7190 ;;		Unchanged: 0/0
  7191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7192 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7193 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7195 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7196 ;;Total ram usage:        3 bytes
  7197 ;; Hardware stack levels used:    1
  7198 ;; Hardware stack levels required when called:    3
  7199 ;; This function calls:
  7200 ;;		_i2c_delay
  7201 ;; This function is called by:
  7202 ;;		_i2c_byte_rd
  7203 ;;		_i2c_byte_wr
  7204 ;;		_rtc_byte_wr
  7205 ;;		_rtc_byte_rd
  7206 ;; This function uses a non-reentrant model
  7207 ;;
  7208                           
  7209                           	psect	text37
  7210  0025AA                     __ptext37:
  7211                           	opt stack 0
  7212  0025AA                     _i2c_shift_out:
  7213                           	opt stack 24
  7214                           
  7215                           ;incstack = 0
  7216                           ;i2c_shift_out@dat stored from wreg
  7217  0025AA  6E15               	movwf	i2c_shift_out@dat,c
  7218                           
  7219                           ;i2c_e2p_rtc.c: 27: unsigned char i;
  7220                           ;i2c_e2p_rtc.c: 29: PORTCbits.RC3 = 0;
  7221  0025AC  9682               	bcf	3970,3,c	;volatile
  7222                           
  7223                           ;i2c_e2p_rtc.c: 30: i2c_delay();
  7224  0025AE  EC1F  F014         	call	_i2c_delay	;wreg free
  7225                           
  7226                           ;i2c_e2p_rtc.c: 32: for(i=0; i<cnts; i++)
  7227  0025B2  0E00               	movlw	0
  7228  0025B4  6E16               	movwf	i2c_shift_out@i,c
  7229  0025B6  D012               	goto	l476
  7230  0025B8                     
  7231                           ;i2c_e2p_rtc.c: 33: {
  7232                           ;i2c_e2p_rtc.c: 35: if((dat & 0x80) != 0)PORTCbits.RC4 = 1; else PORTCbits.RC4 = 0;
  7233  0025B8  AE15               	btfss	i2c_shift_out@dat,7,c
  7234  0025BA  D002               	goto	l478
  7235  0025BC  8882               	bsf	3970,4,c	;volatile
  7236  0025BE  D001               	goto	l479
  7237  0025C0                     l478:
  7238  0025C0  9882               	bcf	3970,4,c	;volatile
  7239  0025C2                     l479:
  7240  0025C2  F000               	nop		;# 
  7241  0025C4  F000               	nop		;# 
  7242  0025C6  F000               	nop		;# 
  7243  0025C8  F000               	nop		;# 
  7244                           
  7245                           ;i2c_e2p_rtc.c: 40: PORTCbits.RC3 = 1;
  7246  0025CA  8682               	bsf	3970,3,c	;volatile
  7247                           
  7248                           ;i2c_e2p_rtc.c: 41: i2c_delay();
  7249  0025CC  EC1F  F014         	call	_i2c_delay	;wreg free
  7250                           
  7251                           ;i2c_e2p_rtc.c: 42: PORTCbits.RC3 = 0;
  7252  0025D0  9682               	bcf	3970,3,c	;volatile
  7253                           
  7254                           ;i2c_e2p_rtc.c: 43: i2c_delay();
  7255  0025D2  EC1F  F014         	call	_i2c_delay	;wreg free
  7256                           
  7257                           ;i2c_e2p_rtc.c: 44: dat <<= 1;
  7258  0025D6  90D8               	bcf	status,0,c
  7259  0025D8  3615               	rlcf	i2c_shift_out@dat,f,c
  7260  0025DA  2A16               	incf	i2c_shift_out@i,f,c
  7261  0025DC                     l476:
  7262  0025DC  5014               	movf	i2c_shift_out@cnts,w,c
  7263  0025DE  5C16               	subwf	i2c_shift_out@i,w,c
  7264  0025E0  A0D8               	btfss	status,0,c
  7265  0025E2  D7EA               	goto	l477
  7266                           
  7267                           ;i2c_e2p_rtc.c: 45: }
  7268                           ;i2c_e2p_rtc.c: 54: TRISCbits.TRISC4 = 1;
  7269  0025E4  8894               	bsf	3988,4,c	;volatile
  7270  0025E6  F000               	nop		;# 
  7271  0025E8  F000               	nop		;# 
  7272  0025EA  F000               	nop		;# 
  7273                           
  7274                           ;i2c_e2p_rtc.c: 60: PORTCbits.RC3 = 1;
  7275  0025EC  8682               	bsf	3970,3,c	;volatile
  7276                           
  7277                           ;i2c_e2p_rtc.c: 61: i2c_delay();
  7278  0025EE  EC1F  F014         	call	_i2c_delay	;wreg free
  7279                           
  7280                           ;i2c_e2p_rtc.c: 62: PORTCbits.RC3 = 0;
  7281  0025F2  9682               	bcf	3970,3,c	;volatile
  7282                           
  7283                           ;i2c_e2p_rtc.c: 63: i2c_delay();
  7284  0025F4  EC1F  F014         	call	_i2c_delay	;wreg free
  7285                           
  7286                           ;i2c_e2p_rtc.c: 64: PORTCbits.RC4 = 0;
  7287  0025F8  9882               	bcf	3970,4,c	;volatile
  7288                           
  7289                           ;i2c_e2p_rtc.c: 66: TRISCbits.TRISC4 = 0;
  7290  0025FA  9894               	bcf	3988,4,c	;volatile
  7291  0025FC  0012               	return		;funcret
  7292  0025FE                     __end_of_i2c_shift_out:
  7293                           	opt stack 0
  7294                           tblptru	equ	0xFF8
  7295                           tblptrh	equ	0xFF7
  7296                           tblptrl	equ	0xFF6
  7297                           tablat	equ	0xFF5
  7298                           prodh	equ	0xFF4
  7299                           prodl	equ	0xFF3
  7300                           intcon	equ	0xFF2
  7301                           postinc0	equ	0xFEE
  7302                           wreg	equ	0xFE8
  7303                           indf1	equ	0xFE7
  7304                           fsr1h	equ	0xFE2
  7305                           fsr1l	equ	0xFE1
  7306                           indf2	equ	0xFDF
  7307                           postinc2	equ	0xFDE
  7308                           postdec2	equ	0xFDD
  7309                           fsr2h	equ	0xFDA
  7310                           fsr2l	equ	0xFD9
  7311                           status	equ	0xFD8
  7312                           
  7313 ;; *************** function _i2c_shift_in *****************
  7314 ;; Defined at:
  7315 ;;		line 71 in file "i2c_e2p_rtc.c"
  7316 ;; Parameters:    Size  Location     Type
  7317 ;;  count           1    wreg     unsigned char 
  7318 ;; Auto vars:     Size  Location     Type
  7319 ;;  count           1   20[COMRAM] unsigned char 
  7320 ;;  in_byte         1   21[COMRAM] unsigned char 
  7321 ;; Return value:  Size  Location     Type
  7322 ;;                  1    wreg      unsigned char 
  7323 ;; Registers used:
  7324 ;;		wreg, status,2, status,0, cstack
  7325 ;; Tracked objects:
  7326 ;;		On entry : 0/0
  7327 ;;		On exit  : 0/0
  7328 ;;		Unchanged: 0/0
  7329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7331 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7332 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7333 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7334 ;;Total ram usage:        3 bytes
  7335 ;; Hardware stack levels used:    1
  7336 ;; Hardware stack levels required when called:    3
  7337 ;; This function calls:
  7338 ;;		_i2c_delay
  7339 ;; This function is called by:
  7340 ;;		_i2c_byte_rd
  7341 ;;		_rtc_byte_rd
  7342 ;; This function uses a non-reentrant model
  7343 ;;
  7344                           
  7345                           	psect	text38
  7346  00287C                     __ptext38:
  7347                           	opt stack 0
  7348  00287C                     _i2c_shift_in:
  7349                           	opt stack 25
  7350                           
  7351                           ;incstack = 0
  7352                           ;i2c_shift_in@count stored from wreg
  7353  00287C  6E15               	movwf	i2c_shift_in@count,c
  7354                           
  7355                           ;i2c_e2p_rtc.c: 77: unsigned char in_byte = 0;
  7356  00287E  0E00               	movlw	0
  7357  002880  6E16               	movwf	i2c_shift_in@in_byte,c
  7358                           
  7359                           ;i2c_e2p_rtc.c: 80: TRISCbits.TRISC4 = 1;
  7360  002882  8894               	bsf	3988,4,c	;volatile
  7361  002884                     
  7362                           ;i2c_e2p_rtc.c: 83: {
  7363                           ;i2c_e2p_rtc.c: 84: PORTCbits.RC3 = 1;
  7364  002884  8682               	bsf	3970,3,c	;volatile
  7365                           
  7366                           ;i2c_e2p_rtc.c: 85: i2c_delay();
  7367  002886  EC1F  F014         	call	_i2c_delay	;wreg free
  7368                           
  7369                           ;i2c_e2p_rtc.c: 87: in_byte = ((in_byte << 1)| PORTCbits.RC4);
  7370  00288A  A882               	btfss	3970,4,c	;volatile
  7371  00288C  D003               	goto	u3390
  7372  00288E  6A14               	clrf	??_i2c_shift_in& (0+255),c
  7373  002890  2A14               	incf	??_i2c_shift_in& (0+255),f,c
  7374  002892  D001               	goto	u3398
  7375  002894                     u3390:
  7376  002894  6A14               	clrf	??_i2c_shift_in& (0+255),c
  7377  002896                     u3398:
  7378  002896  5016               	movf	i2c_shift_in@in_byte,w,c
  7379  002898  2416               	addwf	i2c_shift_in@in_byte,w,c
  7380  00289A  1014               	iorwf	??_i2c_shift_in,w,c
  7381  00289C  6E16               	movwf	i2c_shift_in@in_byte,c
  7382                           
  7383                           ;i2c_e2p_rtc.c: 88: PORTCbits.RC3 = 0;
  7384  00289E  9682               	bcf	3970,3,c	;volatile
  7385                           
  7386                           ;i2c_e2p_rtc.c: 89: i2c_delay();
  7387  0028A0  EC1F  F014         	call	_i2c_delay	;wreg free
  7388                           
  7389                           ;i2c_e2p_rtc.c: 91: count--;
  7390  0028A4  0615               	decf	i2c_shift_in@count,f,c
  7391                           
  7392                           ;i2c_e2p_rtc.c: 93: }
  7393                           ;i2c_e2p_rtc.c: 94: while(count!=0);
  7394  0028A6  5015               	movf	i2c_shift_in@count,w,c
  7395  0028A8  A4D8               	btfss	status,2,c
  7396  0028AA  D7EC               	goto	l484
  7397                           
  7398                           ;i2c_e2p_rtc.c: 97: TRISCbits.TRISC4 = 0;
  7399  0028AC  9894               	bcf	3988,4,c	;volatile
  7400                           
  7401                           ;i2c_e2p_rtc.c: 98: return(in_byte);
  7402  0028AE  5016               	movf	i2c_shift_in@in_byte,w,c
  7403  0028B0  0012               	return	
  7404  0028B2                     __end_of_i2c_shift_in:
  7405                           	opt stack 0
  7406                           tblptru	equ	0xFF8
  7407                           tblptrh	equ	0xFF7
  7408                           tblptrl	equ	0xFF6
  7409                           tablat	equ	0xFF5
  7410                           prodh	equ	0xFF4
  7411                           prodl	equ	0xFF3
  7412                           intcon	equ	0xFF2
  7413                           postinc0	equ	0xFEE
  7414                           wreg	equ	0xFE8
  7415                           indf1	equ	0xFE7
  7416                           fsr1h	equ	0xFE2
  7417                           fsr1l	equ	0xFE1
  7418                           indf2	equ	0xFDF
  7419                           postinc2	equ	0xFDE
  7420                           postdec2	equ	0xFDD
  7421                           fsr2h	equ	0xFDA
  7422                           fsr2l	equ	0xFD9
  7423                           status	equ	0xFD8
  7424                           
  7425 ;; *************** function _i2c_no_ackout *****************
  7426 ;; Defined at:
  7427 ;;		line 115 in file "i2c_e2p_rtc.c"
  7428 ;; Parameters:    Size  Location     Type
  7429 ;;		None
  7430 ;; Auto vars:     Size  Location     Type
  7431 ;;		None
  7432 ;; Return value:  Size  Location     Type
  7433 ;;                  1    wreg      void 
  7434 ;; Registers used:
  7435 ;;		cstack
  7436 ;; Tracked objects:
  7437 ;;		On entry : 0/0
  7438 ;;		On exit  : 0/0
  7439 ;;		Unchanged: 0/0
  7440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7445 ;;Total ram usage:        0 bytes
  7446 ;; Hardware stack levels used:    1
  7447 ;; Hardware stack levels required when called:    3
  7448 ;; This function calls:
  7449 ;;		_i2c_delay
  7450 ;; This function is called by:
  7451 ;;		_i2c_byte_rd
  7452 ;;		_rtc_byte_rd
  7453 ;; This function uses a non-reentrant model
  7454 ;;
  7455                           
  7456                           	psect	text39
  7457  0029F2                     __ptext39:
  7458                           	opt stack 0
  7459  0029F2                     _i2c_no_ackout:
  7460                           	opt stack 25
  7461                           
  7462                           ;i2c_e2p_rtc.c: 118: PORTCbits.RC4 = 1;
  7463                           
  7464                           ;incstack = 0
  7465  0029F2  8882               	bsf	3970,4,c	;volatile
  7466                           
  7467                           ;i2c_e2p_rtc.c: 119: i2c_delay();
  7468  0029F4  EC1F  F014         	call	_i2c_delay	;wreg free
  7469                           
  7470                           ;i2c_e2p_rtc.c: 120: PORTCbits.RC3 = 1;
  7471  0029F8  8682               	bsf	3970,3,c	;volatile
  7472                           
  7473                           ;i2c_e2p_rtc.c: 121: i2c_delay();
  7474  0029FA  EC1F  F014         	call	_i2c_delay	;wreg free
  7475                           
  7476                           ;i2c_e2p_rtc.c: 122: PORTCbits.RC3 = 0;
  7477  0029FE  9682               	bcf	3970,3,c	;volatile
  7478                           
  7479                           ;i2c_e2p_rtc.c: 123: PORTCbits.RC4 = 0;
  7480  002A00  9882               	bcf	3970,4,c	;volatile
  7481  002A02  0012               	return		;funcret
  7482  002A04                     __end_of_i2c_no_ackout:
  7483                           	opt stack 0
  7484                           tblptru	equ	0xFF8
  7485                           tblptrh	equ	0xFF7
  7486                           tblptrl	equ	0xFF6
  7487                           tablat	equ	0xFF5
  7488                           prodh	equ	0xFF4
  7489                           prodl	equ	0xFF3
  7490                           intcon	equ	0xFF2
  7491                           postinc0	equ	0xFEE
  7492                           wreg	equ	0xFE8
  7493                           indf1	equ	0xFE7
  7494                           fsr1h	equ	0xFE2
  7495                           fsr1l	equ	0xFE1
  7496                           indf2	equ	0xFDF
  7497                           postinc2	equ	0xFDE
  7498                           postdec2	equ	0xFDD
  7499                           fsr2h	equ	0xFDA
  7500                           fsr2l	equ	0xFD9
  7501                           status	equ	0xFD8
  7502                           
  7503 ;; *************** function _i2c_delay *****************
  7504 ;; Defined at:
  7505 ;;		line 9 in file "i2c_e2p_rtc.c"
  7506 ;; Parameters:    Size  Location     Type
  7507 ;;		None
  7508 ;; Auto vars:     Size  Location     Type
  7509 ;;		None
  7510 ;; Return value:  Size  Location     Type
  7511 ;;                  1    wreg      void 
  7512 ;; Registers used:
  7513 ;;		None
  7514 ;; Tracked objects:
  7515 ;;		On entry : 0/0
  7516 ;;		On exit  : 0/0
  7517 ;;		Unchanged: 0/0
  7518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7522 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7523 ;;Total ram usage:        0 bytes
  7524 ;; Hardware stack levels used:    1
  7525 ;; Hardware stack levels required when called:    2
  7526 ;; This function calls:
  7527 ;;		Nothing
  7528 ;; This function is called by:
  7529 ;;		_i2c_shift_out
  7530 ;;		_i2c_shift_in
  7531 ;;		_i2c_no_ackout
  7532 ;;		_i2c_start
  7533 ;;		_i2c_stop
  7534 ;;		_i2c_ackout
  7535 ;; This function uses a non-reentrant model
  7536 ;;
  7537                           
  7538                           	psect	text40
  7539  00283E                     __ptext40:
  7540                           	opt stack 0
  7541  00283E                     _i2c_delay:
  7542                           	opt stack 24
  7543                           
  7544                           ;incstack = 0
  7545  00283E  F000               	nop		;# 
  7546  002840  F000               	nop		;# 
  7547  002842  F000               	nop		;# 
  7548  002844  F000               	nop		;# 
  7549  002846  F000               	nop		;# 
  7550  002848  F000               	nop		;# 
  7551  00284A  F000               	nop		;# 
  7552  00284C  F000               	nop		;# 
  7553  00284E  F000               	nop		;# 
  7554  002850  F000               	nop		;# 
  7555  002852  F000               	nop		;# 
  7556  002854  F000               	nop		;# 
  7557  002856  F000               	nop		;# 
  7558  002858  F000               	nop		;# 
  7559  00285A  F000               	nop		;# 
  7560  00285C  F000               	nop		;# 
  7561  00285E  F000               	nop		;# 
  7562  002860  F000               	nop		;# 
  7563  002862  F000               	nop		;# 
  7564  002864  F000               	nop		;# 
  7565  002866  F000               	nop		;# 
  7566  002868  F000               	nop		;# 
  7567  00286A  F000               	nop		;# 
  7568  00286C  F000               	nop		;# 
  7569  00286E  F000               	nop		;# 
  7570  002870  F000               	nop		;# 
  7571  002872  F000               	nop		;# 
  7572  002874  F000               	nop		;# 
  7573  002876  F000               	nop		;# 
  7574  002878  F000               	nop		;# 
  7575  00287A  0012               	return		;funcret
  7576  00287C                     __end_of_i2c_delay:
  7577                           	opt stack 0
  7578                           tblptru	equ	0xFF8
  7579                           tblptrh	equ	0xFF7
  7580                           tblptrl	equ	0xFF6
  7581                           tablat	equ	0xFF5
  7582                           prodh	equ	0xFF4
  7583                           prodl	equ	0xFF3
  7584                           intcon	equ	0xFF2
  7585                           postinc0	equ	0xFEE
  7586                           wreg	equ	0xFE8
  7587                           indf1	equ	0xFE7
  7588                           fsr1h	equ	0xFE2
  7589                           fsr1l	equ	0xFE1
  7590                           indf2	equ	0xFDF
  7591                           postinc2	equ	0xFDE
  7592                           postdec2	equ	0xFDD
  7593                           fsr2h	equ	0xFDA
  7594                           fsr2l	equ	0xFD9
  7595                           status	equ	0xFD8
  7596                           
  7597 ;; *************** function _send_continuous *****************
  7598 ;; Defined at:
  7599 ;;		line 317 in file "modbus.c"
  7600 ;; Parameters:    Size  Location     Type
  7601 ;;  length          2   27[COMRAM] unsigned int 
  7602 ;;  address         2   29[COMRAM] unsigned int 
  7603 ;; Auto vars:     Size  Location     Type
  7604 ;;  un1             2   35[COMRAM] struct int_char
  7605 ;;  tempi           2   33[COMRAM] unsigned int 
  7606 ;;  j               1   39[COMRAM] unsigned char 
  7607 ;;  i               1   38[COMRAM] unsigned char 
  7608 ;;  tempc           1   37[COMRAM] unsigned char 
  7609 ;; Return value:  Size  Location     Type
  7610 ;;                  1    wreg      void 
  7611 ;; Registers used:
  7612 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7613 ;; Tracked objects:
  7614 ;;		On entry : 0/0
  7615 ;;		On exit  : 0/0
  7616 ;;		Unchanged: 0/0
  7617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7618 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7619 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7620 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7621 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7622 ;;Total ram usage:       13 bytes
  7623 ;; Hardware stack levels used:    1
  7624 ;; Hardware stack levels required when called:    3
  7625 ;; This function calls:
  7626 ;;		_CRC_16
  7627 ;; This function is called by:
  7628 ;;		_decode_mbus_frame
  7629 ;; This function uses a non-reentrant model
  7630 ;;
  7631                           
  7632                           	psect	text41
  7633  0019EC                     __ptext41:
  7634                           	opt stack 0
  7635  0019EC                     _send_continuous:
  7636                           	opt stack 24
  7637                           
  7638                           ;modbus.c: 320: unsigned char tempc,i,j;
  7639                           ;modbus.c: 321: unsigned int tempi;
  7640                           ;modbus.c: 322: union int_char un1;
  7641                           ;modbus.c: 325: mbus_var.tx_buff[0] = mbus_var.rx_buff[0];
  7642                           
  7643                           ;incstack = 0
  7644  0019EC  C197  F165         	movff	_mbus_var+51,_mbus_var+1
  7645                           
  7646                           ;modbus.c: 326: mbus_var.tx_buff[1] = mbus_var.rx_buff[1];
  7647  0019F0  C198  F166         	movff	_mbus_var+52,_mbus_var+2
  7648                           
  7649                           ;modbus.c: 328: tempc = (unsigned char)length;
  7650  0019F4  C01C  F026         	movff	send_continuous@length,send_continuous@tempc
  7651                           
  7652                           ;modbus.c: 329: mbus_var.tx_buff[2] = tempc << 1;
  7653  0019F8  5026               	movf	send_continuous@tempc,w,c
  7654  0019FA  2426               	addwf	send_continuous@tempc,w,c
  7655  0019FC  0101               	movlb	1	; () banked
  7656  0019FE  6F67               	movwf	(_mbus_var+3)& (0+255),b
  7657                           
  7658                           ; BSR set to: 1
  7659                           ;modbus.c: 331: tempc = (unsigned char)address;
  7660  001A00  C01E  F026         	movff	send_continuous@address,send_continuous@tempc
  7661                           
  7662                           ;modbus.c: 332: tempc += length;
  7663  001A04  501C               	movf	send_continuous@length,w,c
  7664  001A06  2626               	addwf	send_continuous@tempc,f,c
  7665                           
  7666                           ; BSR set to: 1
  7667                           ;modbus.c: 334: buffer[0] = (int)logic_var.hold_data[0].bytes;
  7668  001A08  C090  F100         	movff	_logic_var+48,_buffer	;volatile
  7669  001A0C  6B01               	clrf	(_buffer+1)& (0+255),b	;volatile
  7670                           
  7671                           ; BSR set to: 1
  7672                           ;modbus.c: 335: buffer[1] = (int)logic_var.hold_data[1].bytes;
  7673  001A0E  C091  F102         	movff	_logic_var+49,_buffer+2	;volatile
  7674  001A12  6B03               	clrf	(_buffer+3)& (0+255),b	;volatile
  7675                           
  7676                           ; BSR set to: 1
  7677                           ;modbus.c: 336: buffer[2] = (int)logic_var.hold_data[2].bytes;
  7678  001A14  C092  F104         	movff	_logic_var+50,_buffer+4	;volatile
  7679  001A18  6B05               	clrf	(_buffer+5)& (0+255),b	;volatile
  7680                           
  7681                           ; BSR set to: 1
  7682                           ;modbus.c: 338: buffer[3] = (int)logic_var.flash_data[0].bytes;
  7683  001A1A  C096  F106         	movff	_logic_var+54,_buffer+6	;volatile
  7684  001A1E  6B07               	clrf	(_buffer+7)& (0+255),b	;volatile
  7685                           
  7686                           ; BSR set to: 1
  7687                           ;modbus.c: 339: buffer[4] = (int)logic_var.flash_data[1].bytes;
  7688  001A20  C097  F108         	movff	_logic_var+55,_buffer+8	;volatile
  7689  001A24  6B09               	clrf	(_buffer+9)& (0+255),b	;volatile
  7690                           
  7691                           ; BSR set to: 1
  7692                           ;modbus.c: 340: buffer[5] = (int)logic_var.flash_data[2].bytes;
  7693  001A26  C098  F10A         	movff	_logic_var+56,_buffer+10	;volatile
  7694  001A2A  6B0B               	clrf	(_buffer+11)& (0+255),b	;volatile
  7695                           
  7696                           ; BSR set to: 1
  7697                           ;modbus.c: 342: buffer[6] = (int)logic_var.new_ip[2];
  7698  001A2C  C086  F10C         	movff	_logic_var+38,_buffer+12	;volatile
  7699  001A30  6B0D               	clrf	(_buffer+13)& (0+255),b	;volatile
  7700                           
  7701                           ; BSR set to: 1
  7702                           ;modbus.c: 343: buffer[7] = (int)logic_var.new_ip[6];
  7703  001A32  C08A  F10E         	movff	_logic_var+42,_buffer+14	;volatile
  7704  001A36  6B0F               	clrf	(_buffer+15)& (0+255),b	;volatile
  7705                           
  7706                           ; BSR set to: 1
  7707                           ;modbus.c: 344: buffer[8] = (int)logic_var.new_ip[10];
  7708  001A38  C08E  F110         	movff	_logic_var+46,_buffer+16	;volatile
  7709  001A3C  6B11               	clrf	(_buffer+17)& (0+255),b	;volatile
  7710                           
  7711                           ; BSR set to: 1
  7712                           ;modbus.c: 346: buffer[9] = (int)logic_var.new_ip[1];
  7713  001A3E  C085  F112         	movff	_logic_var+37,_buffer+18	;volatile
  7714  001A42  6B13               	clrf	(_buffer+19)& (0+255),b	;volatile
  7715                           
  7716                           ; BSR set to: 1
  7717                           ;modbus.c: 347: buffer[10] = (int)logic_var.new_ip[5];
  7718  001A44  C089  F114         	movff	_logic_var+41,_buffer+20	;volatile
  7719  001A48  6B15               	clrf	(_buffer+21)& (0+255),b	;volatile
  7720                           
  7721                           ; BSR set to: 1
  7722                           ;modbus.c: 348: buffer[11] = (int)logic_var.new_ip[9];
  7723  001A4A  C08D  F116         	movff	_logic_var+45,_buffer+22	;volatile
  7724  001A4E  6B17               	clrf	(_buffer+23)& (0+255),b	;volatile
  7725                           
  7726                           ;modbus.c: 351: buffer[12] = (int)(logic_var.status_flg & 0x8F);
  7727  001A50  C0AF  F020         	movff	_logic_var+79,??_send_continuous
  7728  001A54  0E8F               	movlw	143
  7729  001A56  1620               	andwf	??_send_continuous,f,c
  7730  001A58  5020               	movf	??_send_continuous,w,c
  7731  001A5A  6F18               	movwf	(_buffer+24)& (0+255),b	;volatile
  7732  001A5C  6B19               	clrf	(_buffer+25)& (0+255),b	;volatile
  7733                           
  7734                           ; BSR set to: 1
  7735                           ;modbus.c: 352: buffer[13] = (int)logic_var.rly_status;
  7736  001A5E  C0B0  F11A         	movff	_logic_var+80,_buffer+26	;volatile
  7737  001A62  6B1B               	clrf	(_buffer+27)& (0+255),b	;volatile
  7738                           
  7739                           ; BSR set to: 1
  7740                           ;modbus.c: 354: buffer[14] = gen_var.log_data_cntr;
  7741  001A64  C041  F11C         	movff	_gen_var+11,_buffer+28	;volatile
  7742  001A68  C042  F11D         	movff	_gen_var+12,_buffer+29	;volatile
  7743                           
  7744                           ; BSR set to: 1
  7745                           ;modbus.c: 355: buffer[15] = (int)gen_var.rtc_read [2];
  7746  001A6C  C03D  F11E         	movff	_gen_var+7,_buffer+30	;volatile
  7747  001A70  6B1F               	clrf	(_buffer+31)& (0+255),b	;volatile
  7748                           
  7749                           ; BSR set to: 1
  7750                           ;modbus.c: 356: buffer[16] = (int)gen_var.rtc_read [0];
  7751  001A72  C03B  F120         	movff	_gen_var+5,_buffer+32	;volatile
  7752  001A76  6B21               	clrf	(_buffer+33)& (0+255),b	;volatile
  7753                           
  7754                           ; BSR set to: 1
  7755                           ;modbus.c: 357: buffer[17] = (int)gen_var.rtc_read [1];
  7756  001A78  C03C  F122         	movff	_gen_var+6,_buffer+34	;volatile
  7757  001A7C  6B23               	clrf	(_buffer+35)& (0+255),b	;volatile
  7758                           
  7759                           ; BSR set to: 1
  7760                           ;modbus.c: 358: buffer[18] = (int)gen_var.rtc_read [3];
  7761  001A7E  C03E  F124         	movff	_gen_var+8,_buffer+36	;volatile
  7762  001A82  6B25               	clrf	(_buffer+37)& (0+255),b	;volatile
  7763                           
  7764                           ; BSR set to: 1
  7765                           ;modbus.c: 359: buffer[19] = (int)gen_var.rtc_read [4];
  7766  001A84  C03F  F126         	movff	_gen_var+9,_buffer+38	;volatile
  7767  001A88  6B27               	clrf	(_buffer+39)& (0+255),b	;volatile
  7768                           
  7769                           ; BSR set to: 1
  7770                           ;modbus.c: 360: buffer[20] = (int)gen_var.rtc_read [5];
  7771  001A8A  C040  F128         	movff	_gen_var+10,_buffer+40	;volatile
  7772  001A8E  6B29               	clrf	(_buffer+41)& (0+255),b	;volatile
  7773                           
  7774                           ; BSR set to: 1
  7775                           ;modbus.c: 362: j = 2;
  7776  001A90  0E02               	movlw	2
  7777  001A92  6E28               	movwf	send_continuous@j,c
  7778                           
  7779                           ; BSR set to: 1
  7780                           ;modbus.c: 363: for (i = address; i < tempc; i++)
  7781  001A94  C01E  F027         	movff	send_continuous@address,send_continuous@i
  7782  001A98  D02E               	goto	l694
  7783  001A9A                     
  7784                           ;modbus.c: 364: {
  7785                           ;modbus.c: 365: j++;
  7786                           
  7787                           ; BSR set to: 1
  7788  001A9A  2A28               	incf	send_continuous@j,f,c
  7789                           
  7790                           ;modbus.c: 366: mbus_var.tx_buff[j] = buffer[i] >> 8;
  7791  001A9C  5028               	movf	send_continuous@j,w,c
  7792  001A9E  0D01               	mullw	1
  7793  001AA0  0E65               	movlw	low (_mbus_var+1)
  7794  001AA2  24F3               	addwf	prodl,w,c
  7795  001AA4  6ED9               	movwf	fsr2l,c
  7796  001AA6  0E01               	movlw	high (_mbus_var+1)
  7797  001AA8  20F4               	addwfc	prodh,w,c
  7798  001AAA  6EDA               	movwf	fsr2h,c
  7799  001AAC  5027               	movf	send_continuous@i,w,c
  7800  001AAE  0D02               	mullw	2
  7801  001AB0  0E00               	movlw	low _buffer
  7802  001AB2  24F3               	addwf	prodl,w,c
  7803  001AB4  6EE1               	movwf	fsr1l,c
  7804  001AB6  0E01               	movlw	high _buffer
  7805  001AB8  20F4               	addwfc	prodh,w,c
  7806  001ABA  6EE2               	movwf	fsr1h,c
  7807  001ABC  CFE6 F020          	movff	postinc1,??_send_continuous
  7808  001AC0  CFE5 F021          	movff	postdec1,??_send_continuous+1
  7809  001AC4  C021  F020         	movff	??_send_continuous+1,??_send_continuous
  7810  001AC8  6A21               	clrf	??_send_continuous+1,c
  7811  001ACA  5020               	movf	??_send_continuous,w,c
  7812  001ACC  6EDF               	movwf	indf2,c
  7813                           
  7814                           ;modbus.c: 367: j++;
  7815  001ACE  2A28               	incf	send_continuous@j,f,c
  7816                           
  7817                           ;modbus.c: 368: mbus_var.tx_buff[j] = (char)buffer[i];
  7818  001AD0  5027               	movf	send_continuous@i,w,c
  7819  001AD2  0D02               	mullw	2
  7820  001AD4  0E00               	movlw	low _buffer
  7821  001AD6  24F3               	addwf	prodl,w,c
  7822  001AD8  6ED9               	movwf	fsr2l,c
  7823  001ADA  0E01               	movlw	high _buffer
  7824  001ADC  20F4               	addwfc	prodh,w,c
  7825  001ADE  6EDA               	movwf	fsr2h,c
  7826  001AE0  5028               	movf	send_continuous@j,w,c
  7827  001AE2  0D01               	mullw	1
  7828  001AE4  0E65               	movlw	low (_mbus_var+1)
  7829  001AE6  24F3               	addwf	prodl,w,c
  7830  001AE8  6EE1               	movwf	fsr1l,c
  7831  001AEA  0E01               	movlw	high (_mbus_var+1)
  7832  001AEC  20F4               	addwfc	prodh,w,c
  7833  001AEE  6EE2               	movwf	fsr1h,c
  7834  001AF0  CFDF FFE7          	movff	indf2,indf1
  7835  001AF4  2A27               	incf	send_continuous@i,f,c
  7836  001AF6                     l694:
  7837  001AF6  5026               	movf	send_continuous@tempc,w,c
  7838  001AF8  5C27               	subwf	send_continuous@i,w,c
  7839  001AFA  A0D8               	btfss	status,0,c
  7840  001AFC  D7CE               	goto	l695
  7841                           
  7842                           ;modbus.c: 369: }
  7843                           ;modbus.c: 371: tempi = j+1;
  7844  001AFE  0E01               	movlw	1
  7845  001B00  2428               	addwf	send_continuous@j,w,c
  7846  001B02  6E22               	movwf	send_continuous@tempi,c
  7847  001B04  6A23               	clrf	send_continuous@tempi+1,c
  7848  001B06  0E00               	movlw	0
  7849  001B08  2223               	addwfc	send_continuous@tempi+1,f,c
  7850                           
  7851                           ;modbus.c: 372: un1.int_val = CRC_16(mbus_var.tx_buff,tempi);
  7852  001B0A  0E65               	movlw	low (_mbus_var+1)
  7853  001B0C  6E14               	movwf	CRC_16@ptr,c
  7854  001B0E  0E01               	movlw	high (_mbus_var+1)
  7855  001B10  6E15               	movwf	CRC_16@ptr+1,c
  7856  001B12  C022  F016         	movff	send_continuous@tempi,CRC_16@cnts
  7857  001B16  EC4A  F012         	call	_CRC_16	;wreg free
  7858  001B1A  C014  F024         	movff	?_CRC_16,send_continuous@un1
  7859  001B1E  C015  F025         	movff	?_CRC_16+1,send_continuous@un1+1
  7860                           
  7861                           ;modbus.c: 374: j++;
  7862  001B22  2A28               	incf	send_continuous@j,f,c
  7863                           
  7864                           ;modbus.c: 375: mbus_var.tx_buff[j] = un1.char_val[0];
  7865  001B24  5028               	movf	send_continuous@j,w,c
  7866  001B26  0D01               	mullw	1
  7867  001B28  0E65               	movlw	low (_mbus_var+1)
  7868  001B2A  24F3               	addwf	prodl,w,c
  7869  001B2C  6ED9               	movwf	fsr2l,c
  7870  001B2E  0E01               	movlw	high (_mbus_var+1)
  7871  001B30  20F4               	addwfc	prodh,w,c
  7872  001B32  6EDA               	movwf	fsr2h,c
  7873  001B34  C024  FFDF         	movff	send_continuous@un1,indf2
  7874                           
  7875                           ;modbus.c: 376: j++;
  7876  001B38  2A28               	incf	send_continuous@j,f,c
  7877                           
  7878                           ;modbus.c: 377: mbus_var.tx_buff[j] = un1.char_val[1];
  7879  001B3A  5028               	movf	send_continuous@j,w,c
  7880  001B3C  0D01               	mullw	1
  7881  001B3E  0E65               	movlw	low (_mbus_var+1)
  7882  001B40  24F3               	addwf	prodl,w,c
  7883  001B42  6ED9               	movwf	fsr2l,c
  7884  001B44  0E01               	movlw	high (_mbus_var+1)
  7885  001B46  20F4               	addwfc	prodh,w,c
  7886  001B48  6EDA               	movwf	fsr2h,c
  7887  001B4A  C025  FFDF         	movff	send_continuous@un1+1,indf2
  7888                           
  7889                           ;modbus.c: 379: mbus_var.send_frame_cmpr = j;
  7890  001B4E  C028  F1C9         	movff	send_continuous@j,_mbus_var+101
  7891                           
  7892                           ;modbus.c: 380: mbus_var.send_ptr = 0;
  7893  001B52  0E00               	movlw	0
  7894  001B54  0101               	movlb	1	; () banked
  7895  001B56  6FCD               	movwf	(_mbus_var+105)& (0+255),b
  7896                           
  7897                           ; BSR set to: 1
  7898                           ;modbus.c: 381: mbus_var.frame_send_flag = 1;
  7899  001B58  0E01               	movlw	1
  7900  001B5A  6FCC               	movwf	(_mbus_var+104)& (0+255),b
  7901                           
  7902                           ; BSR set to: 1
  7903  001B5C  0012               	return		;funcret
  7904  001B5E                     __end_of_send_continuous:
  7905                           	opt stack 0
  7906                           tblptru	equ	0xFF8
  7907                           tblptrh	equ	0xFF7
  7908                           tblptrl	equ	0xFF6
  7909                           tablat	equ	0xFF5
  7910                           prodh	equ	0xFF4
  7911                           prodl	equ	0xFF3
  7912                           intcon	equ	0xFF2
  7913                           postinc0	equ	0xFEE
  7914                           wreg	equ	0xFE8
  7915                           indf1	equ	0xFE7
  7916                           postinc1	equ	0xFE6
  7917                           postdec1	equ	0xFE5
  7918                           fsr1h	equ	0xFE2
  7919                           fsr1l	equ	0xFE1
  7920                           indf2	equ	0xFDF
  7921                           postinc2	equ	0xFDE
  7922                           postdec2	equ	0xFDD
  7923                           fsr2h	equ	0xFDA
  7924                           fsr2l	equ	0xFD9
  7925                           status	equ	0xFD8
  7926                           
  7927 ;; *************** function _function_error *****************
  7928 ;; Defined at:
  7929 ;;		line 161 in file "modbus.c"
  7930 ;; Parameters:    Size  Location     Type
  7931 ;;  func            2   27[COMRAM] unsigned int 
  7932 ;; Auto vars:     Size  Location     Type
  7933 ;;  un1             2   31[COMRAM] struct int_char
  7934 ;;  temp            2   29[COMRAM] unsigned int 
  7935 ;; Return value:  Size  Location     Type
  7936 ;;                  1    wreg      void 
  7937 ;; Registers used:
  7938 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7939 ;; Tracked objects:
  7940 ;;		On entry : 0/0
  7941 ;;		On exit  : 0/0
  7942 ;;		Unchanged: 0/0
  7943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7944 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7945 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7947 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7948 ;;Total ram usage:        6 bytes
  7949 ;; Hardware stack levels used:    1
  7950 ;; Hardware stack levels required when called:    3
  7951 ;; This function calls:
  7952 ;;		_CRC_16
  7953 ;; This function is called by:
  7954 ;;		_decode_mbus_frame
  7955 ;; This function uses a non-reentrant model
  7956 ;;
  7957                           
  7958                           	psect	text42
  7959  002772                     __ptext42:
  7960                           	opt stack 0
  7961  002772                     _function_error:
  7962                           	opt stack 24
  7963                           
  7964                           ;modbus.c: 163: unsigned int temp;
  7965                           ;modbus.c: 164: union int_char un1;
  7966                           ;modbus.c: 165: temp = func;
  7967                           
  7968                           ; BSR set to: 1
  7969                           ;incstack = 0
  7970  002772  C01C  F01E         	movff	function_error@func,function_error@temp
  7971  002776  C01D  F01F         	movff	function_error@func+1,function_error@temp+1
  7972                           
  7973                           ;modbus.c: 166: mbus_var.tx_buff[0] = mbus_var.slave_id;
  7974  00277A  C1CF  F165         	movff	_mbus_var+107,_mbus_var+1
  7975                           
  7976                           ;modbus.c: 167: mbus_var.tx_buff[1] = temp|0x80;
  7977  00277E  501E               	movf	function_error@temp,w,c
  7978  002780  0980               	iorlw	128
  7979  002782  0101               	movlb	1	; () banked
  7980  002784  6F66               	movwf	(_mbus_var+2)& (0+255),b
  7981                           
  7982                           ; BSR set to: 1
  7983                           ;modbus.c: 168: mbus_var.tx_buff[2] = 0x01;
  7984  002786  0E01               	movlw	1
  7985  002788  6F67               	movwf	(_mbus_var+3)& (0+255),b
  7986                           
  7987                           ; BSR set to: 1
  7988                           ;modbus.c: 169: un1.int_val = CRC_16(mbus_var.tx_buff,3);
  7989  00278A  0E65               	movlw	low (_mbus_var+1)
  7990  00278C  6E14               	movwf	CRC_16@ptr,c
  7991  00278E  0E01               	movlw	high (_mbus_var+1)
  7992  002790  6E15               	movwf	CRC_16@ptr+1,c
  7993  002792  0E03               	movlw	3
  7994  002794  6E16               	movwf	CRC_16@cnts,c
  7995  002796  EC4A  F012         	call	_CRC_16	;wreg free
  7996  00279A  C014  F020         	movff	?_CRC_16,function_error@un1
  7997  00279E  C015  F021         	movff	?_CRC_16+1,function_error@un1+1
  7998                           
  7999                           ;modbus.c: 170: mbus_var.tx_buff[3] = un1.char_val[0];
  8000  0027A2  C020  F168         	movff	function_error@un1,_mbus_var+4
  8001                           
  8002                           ;modbus.c: 171: mbus_var.tx_buff[4] = un1.char_val[1];
  8003  0027A6  C021  F169         	movff	function_error@un1+1,_mbus_var+5
  8004                           
  8005                           ;modbus.c: 172: mbus_var.send_frame_cmpr = 4;
  8006  0027AA  0E04               	movlw	4
  8007  0027AC  0101               	movlb	1	; () banked
  8008  0027AE  6FC9               	movwf	(_mbus_var+101)& (0+255),b
  8009                           
  8010                           ; BSR set to: 1
  8011                           ;modbus.c: 173: mbus_var.send_ptr = 0;
  8012  0027B0  0E00               	movlw	0
  8013  0027B2  6FCD               	movwf	(_mbus_var+105)& (0+255),b
  8014                           
  8015                           ; BSR set to: 1
  8016                           ;modbus.c: 174: mbus_var.frame_send_flag = 1;
  8017  0027B4  0E01               	movlw	1
  8018  0027B6  6FCC               	movwf	(_mbus_var+104)& (0+255),b
  8019                           
  8020                           ; BSR set to: 1
  8021  0027B8  0012               	return		;funcret
  8022  0027BA                     __end_of_function_error:
  8023                           	opt stack 0
  8024                           tblptru	equ	0xFF8
  8025                           tblptrh	equ	0xFF7
  8026                           tblptrl	equ	0xFF6
  8027                           tablat	equ	0xFF5
  8028                           prodh	equ	0xFF4
  8029                           prodl	equ	0xFF3
  8030                           intcon	equ	0xFF2
  8031                           postinc0	equ	0xFEE
  8032                           wreg	equ	0xFE8
  8033                           indf1	equ	0xFE7
  8034                           postinc1	equ	0xFE6
  8035                           postdec1	equ	0xFE5
  8036                           fsr1h	equ	0xFE2
  8037                           fsr1l	equ	0xFE1
  8038                           indf2	equ	0xFDF
  8039                           postinc2	equ	0xFDE
  8040                           postdec2	equ	0xFDD
  8041                           fsr2h	equ	0xFDA
  8042                           fsr2l	equ	0xFD9
  8043                           status	equ	0xFD8
  8044                           
  8045 ;; *************** function _CRC_16 *****************
  8046 ;; Defined at:
  8047 ;;		line 18 in file "modbus.c"
  8048 ;; Parameters:    Size  Location     Type
  8049 ;;  ptr             2   19[COMRAM] PTR unsigned char 
  8050 ;;		 -> mbus_var(108), 
  8051 ;;  cnts            1   21[COMRAM] unsigned char 
  8052 ;; Auto vars:     Size  Location     Type
  8053 ;;  crcreg          2   25[COMRAM] struct int_char
  8054 ;;  i               1   24[COMRAM] unsigned char 
  8055 ;; Return value:  Size  Location     Type
  8056 ;;                  2   19[COMRAM] unsigned int 
  8057 ;; Registers used:
  8058 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8059 ;; Tracked objects:
  8060 ;;		On entry : 0/0
  8061 ;;		On exit  : 0/0
  8062 ;;		Unchanged: 0/0
  8063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8064 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8065 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8066 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8067 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8068 ;;Total ram usage:        8 bytes
  8069 ;; Hardware stack levels used:    1
  8070 ;; Hardware stack levels required when called:    2
  8071 ;; This function calls:
  8072 ;;		Nothing
  8073 ;; This function is called by:
  8074 ;;		_send_log_rd
  8075 ;;		_decode_mbus_frame
  8076 ;;		_function_error
  8077 ;;		_address_error
  8078 ;;		_send_continuous
  8079 ;; This function uses a non-reentrant model
  8080 ;;
  8081                           
  8082                           	psect	text43
  8083  002494                     __ptext43:
  8084                           	opt stack 0
  8085  002494                     _CRC_16:
  8086                           	opt stack 23
  8087                           
  8088                           ;modbus.c: 20: union int_char crcreg;
  8089                           ;modbus.c: 21: unsigned char i;
  8090                           ;modbus.c: 22: crcreg.int_val = 0xffff;
  8091                           
  8092                           ; BSR set to: 1
  8093                           ;incstack = 0
  8094  002494  681A               	setf	CRC_16@crcreg,c
  8095  002496  681B               	setf	CRC_16@crcreg+1,c
  8096                           
  8097                           ;modbus.c: 23: while(cnts != 0)
  8098  002498  D025               	goto	l646
  8099  00249A                     
  8100                           ;modbus.c: 24: {
  8101                           ;modbus.c: 25: crcreg.char_val[0] ^= *ptr;
  8102  00249A  C014  FFD9         	movff	CRC_16@ptr,fsr2l
  8103  00249E  C015  FFDA         	movff	CRC_16@ptr+1,fsr2h
  8104  0024A2  50DF               	movf	indf2,w,c
  8105  0024A4  1A1A               	xorwf	CRC_16@crcreg,f,c
  8106                           
  8107                           ;modbus.c: 26: for(i=8; i!=0; i--)
  8108  0024A6  0E08               	movlw	8
  8109  0024A8  6E19               	movwf	CRC_16@i,c
  8110  0024AA                     l4576:
  8111  0024AA  5019               	movf	CRC_16@i,w,c
  8112  0024AC  B4D8               	btfsc	status,2,c
  8113  0024AE  D017               	goto	u3430
  8114                           
  8115                           ;modbus.c: 27: {
  8116                           ;modbus.c: 28: if(crcreg.char_val[0] & 0x01 == 1)
  8117  0024B0  A01A               	btfss	CRC_16@crcreg,0,c
  8118  0024B2  D00C               	goto	l650
  8119                           
  8120                           ;modbus.c: 29: {
  8121                           ;modbus.c: 30: crcreg.int_val = crcreg.int_val>>1;
  8122  0024B4  90D8               	bcf	status,0,c
  8123  0024B6  301B               	rrcf	CRC_16@crcreg+1,w,c
  8124  0024B8  6E17               	movwf	??_CRC_16& (0+255),c
  8125  0024BA  301A               	rrcf	CRC_16@crcreg,w,c
  8126  0024BC  6E1A               	movwf	CRC_16@crcreg,c
  8127  0024BE  C017  F01B         	movff	??_CRC_16,CRC_16@crcreg+1
  8128                           
  8129                           ;modbus.c: 31: crcreg.int_val ^= 0xa001;
  8130  0024C2  0E01               	movlw	1
  8131  0024C4  1A1A               	xorwf	CRC_16@crcreg,f,c
  8132  0024C6  0EA0               	movlw	160
  8133  0024C8  1A1B               	xorwf	CRC_16@crcreg+1,f,c
  8134                           
  8135                           ;modbus.c: 32: }
  8136  0024CA  D007               	goto	l651
  8137  0024CC                     l650:
  8138                           
  8139                           ;modbus.c: 33: else
  8140                           ;modbus.c: 34: {
  8141                           ;modbus.c: 35: crcreg.int_val= crcreg.int_val>>1;
  8142  0024CC  90D8               	bcf	status,0,c
  8143  0024CE  301B               	rrcf	CRC_16@crcreg+1,w,c
  8144  0024D0  6E17               	movwf	??_CRC_16& (0+255),c
  8145  0024D2  301A               	rrcf	CRC_16@crcreg,w,c
  8146  0024D4  6E1A               	movwf	CRC_16@crcreg,c
  8147  0024D6  C017  F01B         	movff	??_CRC_16,CRC_16@crcreg+1
  8148  0024DA                     l651:
  8149  0024DA  0619               	decf	CRC_16@i,f,c
  8150  0024DC  D7E6               	goto	l4576
  8151  0024DE                     u3430:
  8152                           
  8153                           ;modbus.c: 36: }
  8154                           ;modbus.c: 37: }
  8155                           ;modbus.c: 39: cnts--;
  8156  0024DE  0616               	decf	CRC_16@cnts,f,c
  8157                           
  8158                           ;modbus.c: 40: ptr++;
  8159  0024E0  4A14               	infsnz	CRC_16@ptr,f,c
  8160  0024E2  2A15               	incf	CRC_16@ptr+1,f,c
  8161  0024E4                     l646:
  8162  0024E4  5016               	movf	CRC_16@cnts,w,c
  8163  0024E6  A4D8               	btfss	status,2,c
  8164  0024E8  D7D8               	goto	l647
  8165                           
  8166                           ;modbus.c: 41: }
  8167                           ;modbus.c: 42: return(crcreg.int_val);
  8168  0024EA  C01A  F014         	movff	CRC_16@crcreg,?_CRC_16
  8169  0024EE  C01B  F015         	movff	CRC_16@crcreg+1,?_CRC_16+1
  8170  0024F2  0012               	return		;funcret
  8171  0024F4                     __end_of_CRC_16:
  8172                           	opt stack 0
  8173                           tblptru	equ	0xFF8
  8174                           tblptrh	equ	0xFF7
  8175                           tblptrl	equ	0xFF6
  8176                           tablat	equ	0xFF5
  8177                           prodh	equ	0xFF4
  8178                           prodl	equ	0xFF3
  8179                           intcon	equ	0xFF2
  8180                           postinc0	equ	0xFEE
  8181                           wreg	equ	0xFE8
  8182                           indf1	equ	0xFE7
  8183                           postinc1	equ	0xFE6
  8184                           postdec1	equ	0xFE5
  8185                           fsr1h	equ	0xFE2
  8186                           fsr1l	equ	0xFE1
  8187                           indf2	equ	0xFDF
  8188                           postinc2	equ	0xFDE
  8189                           postdec2	equ	0xFDD
  8190                           fsr2h	equ	0xFDA
  8191                           fsr2l	equ	0xFD9
  8192                           status	equ	0xFD8
  8193                           
  8194 ;; *************** function _datalog_event_check *****************
  8195 ;; Defined at:
  8196 ;;		line 6 in file "data_log.c"
  8197 ;; Parameters:    Size  Location     Type
  8198 ;;		None
  8199 ;; Auto vars:     Size  Location     Type
  8200 ;;  i               1   21[COMRAM] unsigned char 
  8201 ;; Return value:  Size  Location     Type
  8202 ;;                  1    wreg      void 
  8203 ;; Registers used:
  8204 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8205 ;; Tracked objects:
  8206 ;;		On entry : 0/0
  8207 ;;		On exit  : 0/0
  8208 ;;		Unchanged: 0/0
  8209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8211 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8212 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8213 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8214 ;;Total ram usage:        3 bytes
  8215 ;; Hardware stack levels used:    1
  8216 ;; Hardware stack levels required when called:    2
  8217 ;; This function calls:
  8218 ;;		Nothing
  8219 ;; This function is called by:
  8220 ;;		_main
  8221 ;; This function uses a non-reentrant model
  8222 ;;
  8223                           
  8224                           	psect	text44
  8225  0023AE                     __ptext44:
  8226                           	opt stack 0
  8227  0023AE                     _datalog_event_check:
  8228                           	opt stack 28
  8229                           
  8230                           ;data_log.c: 8: unsigned char i;
  8231                           ;data_log.c: 9: for(i=0;i<3;i++)
  8232                           
  8233                           ;incstack = 0
  8234  0023AE  0E00               	movlw	0
  8235  0023B0  6E16               	movwf	datalog_event_check@i,c
  8236  0023B2                     l4178:
  8237  0023B2  0E02               	movlw	2
  8238  0023B4  6416               	cpfsgt	datalog_event_check@i,c
  8239  0023B6  D001               	goto	l570
  8240  0023B8  0012               	return	
  8241  0023BA                     l570:
  8242                           
  8243                           ;data_log.c: 10: {
  8244                           ;data_log.c: 11: if (logic_var.flash_data[i].bytes != 0)
  8245  0023BA  5016               	movf	datalog_event_check@i,w,c
  8246  0023BC  0D01               	mullw	1
  8247  0023BE  0E96               	movlw	low (_logic_var+54)
  8248  0023C0  24F3               	addwf	prodl,w,c
  8249  0023C2  6ED9               	movwf	fsr2l,c
  8250  0023C4  0E00               	movlw	high (_logic_var+54)
  8251  0023C6  20F4               	addwfc	prodh,w,c
  8252  0023C8  6EDA               	movwf	fsr2h,c
  8253  0023CA  50DF               	movf	indf2,w,c
  8254  0023CC  B4D8               	btfsc	status,2,c
  8255  0023CE  D028               	goto	l573
  8256                           
  8257                           ;data_log.c: 12: {
  8258                           ;data_log.c: 13: if(gen_var.loghist_data[i].bytes != logic_var.flash_data[i].bytes)
  8259  0023D0  5016               	movf	datalog_event_check@i,w,c
  8260  0023D2  0D01               	mullw	1
  8261  0023D4  0E96               	movlw	low (_logic_var+54)
  8262  0023D6  24F3               	addwf	prodl,w,c
  8263  0023D8  6ED9               	movwf	fsr2l,c
  8264  0023DA  0E00               	movlw	high (_logic_var+54)
  8265  0023DC  20F4               	addwfc	prodh,w,c
  8266  0023DE  6EDA               	movwf	fsr2h,c
  8267  0023E0  5016               	movf	datalog_event_check@i,w,c
  8268  0023E2  0D01               	mullw	1
  8269  0023E4  0E44               	movlw	low (_gen_var+14)
  8270  0023E6  24F3               	addwf	prodl,w,c
  8271  0023E8  6EE1               	movwf	fsr1l,c
  8272  0023EA  0E00               	movlw	high (_gen_var+14)
  8273  0023EC  20F4               	addwfc	prodh,w,c
  8274  0023EE  6EE2               	movwf	fsr1h,c
  8275  0023F0  50DE               	movf	postinc2,w,c
  8276  0023F2  18E6               	xorwf	postinc1,w,c
  8277  0023F4  B4D8               	btfsc	status,2,c
  8278  0023F6  D014               	goto	l573
  8279                           
  8280                           ;data_log.c: 14: {
  8281                           ;data_log.c: 15: gen_var.loghist_data[i].bytes = logic_var.flash_data[i].bytes;
  8282  0023F8  5016               	movf	datalog_event_check@i,w,c
  8283  0023FA  0D01               	mullw	1
  8284  0023FC  0E96               	movlw	low (_logic_var+54)
  8285  0023FE  24F3               	addwf	prodl,w,c
  8286  002400  6ED9               	movwf	fsr2l,c
  8287  002402  0E00               	movlw	high (_logic_var+54)
  8288  002404  20F4               	addwfc	prodh,w,c
  8289  002406  6EDA               	movwf	fsr2h,c
  8290  002408  5016               	movf	datalog_event_check@i,w,c
  8291  00240A  0D01               	mullw	1
  8292  00240C  0E44               	movlw	low (_gen_var+14)
  8293  00240E  24F3               	addwf	prodl,w,c
  8294  002410  6EE1               	movwf	fsr1l,c
  8295  002412  0E00               	movlw	high (_gen_var+14)
  8296  002414  20F4               	addwfc	prodh,w,c
  8297  002416  6EE2               	movwf	fsr1h,c
  8298  002418  CFDF FFE7          	movff	indf2,indf1
  8299                           
  8300                           ;data_log.c: 16: gen_var.logevent_flg = 1;
  8301  00241C  0E01               	movlw	1
  8302  00241E  6E43               	movwf	_gen_var+13,c
  8303  002420                     l573:
  8304  002420  2A16               	incf	datalog_event_check@i,f,c
  8305  002422  D7C7               	goto	l4178
  8306  002424                     __end_of_datalog_event_check:
  8307                           	opt stack 0
  8308                           tblptru	equ	0xFF8
  8309                           tblptrh	equ	0xFF7
  8310                           tblptrl	equ	0xFF6
  8311                           tablat	equ	0xFF5
  8312                           prodh	equ	0xFF4
  8313                           prodl	equ	0xFF3
  8314                           intcon	equ	0xFF2
  8315                           postinc0	equ	0xFEE
  8316                           wreg	equ	0xFE8
  8317                           indf1	equ	0xFE7
  8318                           postinc1	equ	0xFE6
  8319                           postdec1	equ	0xFE5
  8320                           fsr1h	equ	0xFE2
  8321                           fsr1l	equ	0xFE1
  8322                           indf2	equ	0xFDF
  8323                           postinc2	equ	0xFDE
  8324                           postdec2	equ	0xFDD
  8325                           fsr2h	equ	0xFDA
  8326                           fsr2l	equ	0xFD9
  8327                           status	equ	0xFD8
  8328                           
  8329 ;; *************** function _isr *****************
  8330 ;; Defined at:
  8331 ;;		line 98 in file "main.c"
  8332 ;; Parameters:    Size  Location     Type
  8333 ;;		None
  8334 ;; Auto vars:     Size  Location     Type
  8335 ;;		None
  8336 ;; Return value:  Size  Location     Type
  8337 ;;                  1    wreg      void 
  8338 ;; Registers used:
  8339 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8340 ;; Tracked objects:
  8341 ;;		On entry : 0/0
  8342 ;;		On exit  : 0/0
  8343 ;;		Unchanged: 0/0
  8344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8347 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8348 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8349 ;;Total ram usage:       18 bytes
  8350 ;; Hardware stack levels used:    1
  8351 ;; Hardware stack levels required when called:    1
  8352 ;; This function calls:
  8353 ;;		_health_flash
  8354 ;; This function is called by:
  8355 ;;		Interrupt level 2
  8356 ;; This function uses a non-reentrant model
  8357 ;;
  8358                           
  8359                           	psect	intcode
  8360  000008                     __pintcode:
  8361                           	opt stack 0
  8362  000008                     _isr:
  8363                           	opt stack 20
  8364                           
  8365                           ;incstack = 0
  8366  000008  824C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  8367  00000A  CFFA F002          	movff	pclath,??_isr
  8368  00000E  CFFB F003          	movff	pclatu,??_isr+1
  8369  000012  CFE9 F004          	movff	fsr0l,??_isr+2
  8370  000016  CFEA F005          	movff	fsr0h,??_isr+3
  8371  00001A  CFE1 F006          	movff	fsr1l,??_isr+4
  8372  00001E  CFE2 F007          	movff	fsr1h,??_isr+5
  8373  000022  CFD9 F008          	movff	fsr2l,??_isr+6
  8374  000026  CFDA F009          	movff	fsr2h,??_isr+7
  8375  00002A  CFF3 F00A          	movff	prodl,??_isr+8
  8376  00002E  CFF4 F00B          	movff	prodh,??_isr+9
  8377  000032  CFF6 F00C          	movff	tblptrl,??_isr+10
  8378  000036  CFF7 F00D          	movff	tblptrh,??_isr+11
  8379  00003A  CFF8 F00E          	movff	tblptru,??_isr+12
  8380  00003E  CFF5 F00F          	movff	tablat,??_isr+13
  8381  000042  C04C  F010         	movff	btemp,??_isr+14
  8382  000046  C04D  F011         	movff	btemp+1,??_isr+15
  8383  00004A  C04E  F012         	movff	btemp+2,??_isr+16
  8384  00004E  C04F  F013         	movff	btemp+3,??_isr+17
  8385                           
  8386                           ;main.c: 101: GIE = 0;
  8387  000052  9EF2               	bcf	intcon,7,c	;volatile
  8388                           
  8389                           ;main.c: 102: if(TMR1IF == 1)
  8390  000054  A09E               	btfss	3998,0,c	;volatile
  8391  000056  D027               	goto	i2l177
  8392                           
  8393                           ;main.c: 103: {
  8394                           ;main.c: 104: TMR1IF = 0;
  8395  000058  909E               	bcf	3998,0,c	;volatile
  8396                           
  8397                           ;main.c: 105: TMR1H = 0XF0;
  8398  00005A  0EF0               	movlw	240
  8399  00005C  6ECF               	movwf	4047,c	;volatile
  8400                           
  8401                           ;main.c: 106: TMR1L = 0x5F;
  8402  00005E  0E5F               	movlw	95
  8403  000060  6ECE               	movwf	4046,c	;volatile
  8404                           
  8405                           ;main.c: 107: gen_var.basems_flg = 1;
  8406  000062  0E01               	movlw	1
  8407  000064  6E36               	movwf	_gen_var,c
  8408                           
  8409                           ;main.c: 108: health_flash();
  8410  000066  EC59  F014         	call	_health_flash	;wreg free
  8411                           
  8412                           ;main.c: 110: if(gen_var.i2c_wr_cntr != 0)
  8413  00006A  503A               	movf	_gen_var+4,w,c
  8414  00006C  A4D8               	btfss	status,2,c
  8415                           
  8416                           ;main.c: 111: gen_var.i2c_wr_cntr--;
  8417  00006E  063A               	decf	_gen_var+4,f,c
  8418                           
  8419                           ;main.c: 113: if(logic_var.flash_timer != 0)
  8420  000070  0100               	movlb	0	; () banked
  8421  000072  519F               	movf	(_logic_var+63)& (0+255),w,b
  8422  000074  11A0               	iorwf	(_logic_var+64)& (0+255),w,b
  8423  000076  B4D8               	btfsc	status,2,c
  8424  000078  D003               	goto	i2l173
  8425                           
  8426                           ; BSR set to: 0
  8427                           ;main.c: 114: logic_var.flash_timer--;
  8428  00007A  079F               	decf	(_logic_var+63)& (0+255),f,b
  8429  00007C  A0D8               	btfss	status,0,c
  8430  00007E  07A0               	decf	(_logic_var+64)& (0+255),f,b
  8431  000080                     i2l173:
  8432                           
  8433                           ; BSR set to: 0
  8434                           ;main.c: 116: if(mbus_var.rx_framestart_flg == 1)
  8435                           
  8436                           ; BSR set to: 0
  8437  000080  0101               	movlb	1	; () banked
  8438  000082  05CB               	decf	(_mbus_var+103)& (0+255),w,b
  8439  000084  A4D8               	btfss	status,2,c
  8440  000086  D005               	goto	i2l174
  8441                           
  8442                           ; BSR set to: 1
  8443                           ;main.c: 117: {
  8444                           ;main.c: 118: if(mbus_var.rx_tmr < 5) mbus_var.rx_tmr++;
  8445  000088  0E05               	movlw	5
  8446  00008A  6164               	cpfslt	_mbus_var& (0+255),b
  8447  00008C  D004               	goto	i2l176
  8448                           
  8449                           ; BSR set to: 1
  8450  00008E  2B64               	incf	_mbus_var& (0+255),f,b
  8451                           
  8452                           ; BSR set to: 1
  8453                           ;main.c: 119: }
  8454  000090  D002               	goto	i2l176
  8455  000092                     i2l174:
  8456                           
  8457                           ; BSR set to: 1
  8458                           ;main.c: 120: else mbus_var.rx_tmr = 0;
  8459                           
  8460                           ; BSR set to: 1
  8461  000092  0E00               	movlw	0
  8462  000094  6F64               	movwf	_mbus_var& (0+255),b
  8463  000096                     i2l176:
  8464                           
  8465                           ; BSR set to: 1
  8466                           ;main.c: 122: if(mbus_var.rx_tmr == 5)
  8467                           
  8468                           ; BSR set to: 1
  8469  000096  0E05               	movlw	5
  8470  000098  1964               	xorwf	_mbus_var& (0+255),w,b
  8471  00009A  A4D8               	btfss	status,2,c
  8472  00009C  D004               	goto	i2l177
  8473                           
  8474                           ; BSR set to: 1
  8475                           ;main.c: 123: {
  8476                           ;main.c: 124: mbus_var.rx_framestart_flg = 0;
  8477  00009E  0E00               	movlw	0
  8478  0000A0  6FCB               	movwf	(_mbus_var+103)& (0+255),b
  8479                           
  8480                           ;main.c: 125: mbus_var.rx_framecmplt_flg = 1;
  8481  0000A2  0E01               	movlw	1
  8482  0000A4  6FCA               	movwf	(_mbus_var+102)& (0+255),b
  8483  0000A6                     i2l177:
  8484                           
  8485                           ;main.c: 126: }
  8486                           ;main.c: 127: }
  8487                           ;main.c: 128: if(RC2IF == 1)
  8488                           
  8489                           ; BSR set to: 1
  8490                           
  8491                           ; BSR set to: 1
  8492  0000A6  AAA4               	btfss	4004,5,c	;volatile
  8493  0000A8  D011               	goto	i2l178
  8494                           
  8495                           ;main.c: 129: {
  8496                           ;main.c: 130: RC2IF = 0;
  8497  0000AA  9AA4               	bcf	4004,5,c	;volatile
  8498                           
  8499                           ;main.c: 132: mbus_var.rx_buff[mbus_var.ptr] = RCREG2;
  8500  0000AC  0101               	movlb	1	; () banked
  8501  0000AE  51CE               	movf	(_mbus_var+106)& (0+255),w,b
  8502  0000B0  0D01               	mullw	1
  8503  0000B2  0E97               	movlw	low (_mbus_var+51)
  8504  0000B4  24F3               	addwf	prodl,w,c
  8505  0000B6  6ED9               	movwf	fsr2l,c
  8506  0000B8  0E01               	movlw	high (_mbus_var+51)
  8507  0000BA  20F4               	addwfc	prodh,w,c
  8508  0000BC  6EDA               	movwf	fsr2h,c
  8509  0000BE  CF74 FFDF          	movff	3956,indf2	;volatile
  8510                           
  8511                           ; BSR set to: 1
  8512                           ;main.c: 133: mbus_var.ptr++;
  8513  0000C2  2BCE               	incf	(_mbus_var+106)& (0+255),f,b
  8514                           
  8515                           ; BSR set to: 1
  8516                           ;main.c: 134: mbus_var.rx_framestart_flg = 1;
  8517  0000C4  0E01               	movlw	1
  8518  0000C6  6FCB               	movwf	(_mbus_var+103)& (0+255),b
  8519                           
  8520                           ; BSR set to: 1
  8521                           ;main.c: 135: mbus_var.rx_tmr = 0;
  8522  0000C8  0E00               	movlw	0
  8523  0000CA  6F64               	movwf	_mbus_var& (0+255),b
  8524  0000CC                     i2l178:
  8525                           
  8526                           ;main.c: 136: }
  8527                           ;main.c: 147: GIE = 1;
  8528                           
  8529                           ; BSR set to: 1
  8530  0000CC  8EF2               	bsf	intcon,7,c	;volatile
  8531  0000CE  C013  F04F         	movff	??_isr+17,btemp+3
  8532  0000D2  C012  F04E         	movff	??_isr+16,btemp+2
  8533  0000D6  C011  F04D         	movff	??_isr+15,btemp+1
  8534  0000DA  C010  F04C         	movff	??_isr+14,btemp
  8535  0000DE  C00F  FFF5         	movff	??_isr+13,tablat
  8536  0000E2  C00E  FFF8         	movff	??_isr+12,tblptru
  8537  0000E6  C00D  FFF7         	movff	??_isr+11,tblptrh
  8538  0000EA  C00C  FFF6         	movff	??_isr+10,tblptrl
  8539  0000EE  C00B  FFF4         	movff	??_isr+9,prodh
  8540  0000F2  C00A  FFF3         	movff	??_isr+8,prodl
  8541  0000F6  C009  FFDA         	movff	??_isr+7,fsr2h
  8542  0000FA  C008  FFD9         	movff	??_isr+6,fsr2l
  8543  0000FE  C007  FFE2         	movff	??_isr+5,fsr1h
  8544  000102  C006  FFE1         	movff	??_isr+4,fsr1l
  8545  000106  C005  FFEA         	movff	??_isr+3,fsr0h
  8546  00010A  C004  FFE9         	movff	??_isr+2,fsr0l
  8547  00010E  C003  FFFB         	movff	??_isr+1,pclatu
  8548  000112  C002  FFFA         	movff	??_isr,pclath
  8549  000116  924C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  8550  000118  0011               	retfie		f
  8551  00011A                     __end_of_isr:
  8552                           	opt stack 0
  8553                           pclatu	equ	0xFFB
  8554                           pclath	equ	0xFFA
  8555                           tblptru	equ	0xFF8
  8556                           tblptrh	equ	0xFF7
  8557                           tblptrl	equ	0xFF6
  8558                           tablat	equ	0xFF5
  8559                           prodh	equ	0xFF4
  8560                           prodl	equ	0xFF3
  8561                           intcon	equ	0xFF2
  8562                           postinc0	equ	0xFEE
  8563                           fsr0h	equ	0xFEA
  8564                           fsr0l	equ	0xFE9
  8565                           wreg	equ	0xFE8
  8566                           indf1	equ	0xFE7
  8567                           postinc1	equ	0xFE6
  8568                           postdec1	equ	0xFE5
  8569                           fsr1h	equ	0xFE2
  8570                           fsr1l	equ	0xFE1
  8571                           indf2	equ	0xFDF
  8572                           postinc2	equ	0xFDE
  8573                           postdec2	equ	0xFDD
  8574                           fsr2h	equ	0xFDA
  8575                           fsr2l	equ	0xFD9
  8576                           status	equ	0xFD8
  8577                           
  8578 ;; *************** function _health_flash *****************
  8579 ;; Defined at:
  8580 ;;		line 83 in file "main.c"
  8581 ;; Parameters:    Size  Location     Type
  8582 ;;		None
  8583 ;; Auto vars:     Size  Location     Type
  8584 ;;		None
  8585 ;; Return value:  Size  Location     Type
  8586 ;;                  1    wreg      void 
  8587 ;; Registers used:
  8588 ;;		wreg, status,2, status,0
  8589 ;; Tracked objects:
  8590 ;;		On entry : 0/0
  8591 ;;		On exit  : 0/0
  8592 ;;		Unchanged: 0/0
  8593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8596 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8597 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8598 ;;Total ram usage:        1 bytes
  8599 ;; Hardware stack levels used:    1
  8600 ;; This function calls:
  8601 ;;		Nothing
  8602 ;; This function is called by:
  8603 ;;		_isr
  8604 ;; This function uses a non-reentrant model
  8605 ;;
  8606                           
  8607                           	psect	text46
  8608  0028B2                     __ptext46:
  8609                           	opt stack 0
  8610  0028B2                     _health_flash:
  8611                           	opt stack 20
  8612                           
  8613                           ;main.c: 85: gen_var.health_cntr++;
  8614                           
  8615                           ;incstack = 0
  8616  0028B2  4A37               	infsnz	_gen_var+1,f,c
  8617  0028B4  2A38               	incf	_gen_var+2,f,c
  8618                           
  8619                           ;main.c: 86: if(gen_var.health_cntr != 250) return;
  8620  0028B6  0EFA               	movlw	250
  8621  0028B8  1837               	xorwf	_gen_var+1,w,c
  8622  0028BA  1038               	iorwf	_gen_var+2,w,c
  8623  0028BC  A4D8               	btfss	status,2,c
  8624  0028BE  0012               	return	
  8625                           
  8626                           ;main.c: 87: gen_var.health_cntr = 0;
  8627  0028C0  0E00               	movlw	0
  8628  0028C2  6E38               	movwf	_gen_var+2,c
  8629  0028C4  0E00               	movlw	0
  8630  0028C6  6E37               	movwf	_gen_var+1,c
  8631                           
  8632                           ;main.c: 88: LATBbits.LATB7 = ~LATBbits.LATB7;
  8633  0028C8  AE8A               	btfss	3978,7,c	;volatile
  8634  0028CA  D002               	goto	i2u269_40
  8635  0028CC  0E01               	movlw	1
  8636  0028CE  D001               	goto	i2u269_46
  8637  0028D0                     i2u269_40:
  8638  0028D0  0E00               	movlw	0
  8639  0028D2                     i2u269_46:
  8640  0028D2  0AFF               	xorlw	255
  8641  0028D4  6E01               	movwf	??_health_flash& (0+255),c
  8642  0028D6  3201               	rrcf	??_health_flash,f,c
  8643  0028D8  3201               	rrcf	??_health_flash,f,c
  8644  0028DA  508A               	movf	3978,w,c	;volatile
  8645  0028DC  1801               	xorwf	??_health_flash,w,c
  8646  0028DE  0B7F               	andlw	-129
  8647  0028E0  1801               	xorwf	??_health_flash,w,c
  8648  0028E2  6E8A               	movwf	3978,c	;volatile
  8649  0028E4  0012               	return		;funcret
  8650  0028E6                     __end_of_health_flash:
  8651                           	opt stack 0
  8652                           pclatu	equ	0xFFB
  8653                           pclath	equ	0xFFA
  8654                           tblptru	equ	0xFF8
  8655                           tblptrh	equ	0xFF7
  8656                           tblptrl	equ	0xFF6
  8657                           tablat	equ	0xFF5
  8658                           prodh	equ	0xFF4
  8659                           prodl	equ	0xFF3
  8660                           intcon	equ	0xFF2
  8661                           postinc0	equ	0xFEE
  8662                           fsr0h	equ	0xFEA
  8663                           fsr0l	equ	0xFE9
  8664                           wreg	equ	0xFE8
  8665                           indf1	equ	0xFE7
  8666                           postinc1	equ	0xFE6
  8667                           postdec1	equ	0xFE5
  8668                           fsr1h	equ	0xFE2
  8669                           fsr1l	equ	0xFE1
  8670                           indf2	equ	0xFDF
  8671                           postinc2	equ	0xFDE
  8672                           postdec2	equ	0xFDD
  8673                           fsr2h	equ	0xFDA
  8674                           fsr2l	equ	0xFD9
  8675                           status	equ	0xFD8
  8676                           pclatu	equ	0xFFB
  8677                           pclath	equ	0xFFA
  8678                           tblptru	equ	0xFF8
  8679                           tblptrh	equ	0xFF7
  8680                           tblptrl	equ	0xFF6
  8681                           tablat	equ	0xFF5
  8682                           prodh	equ	0xFF4
  8683                           prodl	equ	0xFF3
  8684                           intcon	equ	0xFF2
  8685                           postinc0	equ	0xFEE
  8686                           fsr0h	equ	0xFEA
  8687                           fsr0l	equ	0xFE9
  8688                           wreg	equ	0xFE8
  8689                           indf1	equ	0xFE7
  8690                           postinc1	equ	0xFE6
  8691                           postdec1	equ	0xFE5
  8692                           fsr1h	equ	0xFE2
  8693                           fsr1l	equ	0xFE1
  8694                           indf2	equ	0xFDF
  8695                           postinc2	equ	0xFDE
  8696                           postdec2	equ	0xFDD
  8697                           fsr2h	equ	0xFDA
  8698                           fsr2l	equ	0xFD9
  8699                           status	equ	0xFD8
  8700                           
  8701                           	psect	rparam
  8702  0000                     pclatu	equ	0xFFB
  8703                           pclath	equ	0xFFA
  8704                           tblptru	equ	0xFF8
  8705                           tblptrh	equ	0xFF7
  8706                           tblptrl	equ	0xFF6
  8707                           tablat	equ	0xFF5
  8708                           prodh	equ	0xFF4
  8709                           prodl	equ	0xFF3
  8710                           intcon	equ	0xFF2
  8711                           postinc0	equ	0xFEE
  8712                           fsr0h	equ	0xFEA
  8713                           fsr0l	equ	0xFE9
  8714                           wreg	equ	0xFE8
  8715                           indf1	equ	0xFE7
  8716                           postinc1	equ	0xFE6
  8717                           postdec1	equ	0xFE5
  8718                           fsr1h	equ	0xFE2
  8719                           fsr1l	equ	0xFE1
  8720                           indf2	equ	0xFDF
  8721                           postinc2	equ	0xFDE
  8722                           postdec2	equ	0xFDD
  8723                           fsr2h	equ	0xFDA
  8724                           fsr2l	equ	0xFD9
  8725                           status	equ	0xFD8
  8726                           
  8727                           	psect	temp
  8728  00004C                     btemp:
  8729                           	opt stack 0
  8730  00004C                     	ds	1
  8731  0000                     int$flags	set	btemp
  8732  0000                     wtemp6	set	btemp+1
  8733                           pclatu	equ	0xFFB
  8734                           pclath	equ	0xFFA
  8735                           tblptru	equ	0xFF8
  8736                           tblptrh	equ	0xFF7
  8737                           tblptrl	equ	0xFF6
  8738                           tablat	equ	0xFF5
  8739                           prodh	equ	0xFF4
  8740                           prodl	equ	0xFF3
  8741                           intcon	equ	0xFF2
  8742                           postinc0	equ	0xFEE
  8743                           fsr0h	equ	0xFEA
  8744                           fsr0l	equ	0xFE9
  8745                           wreg	equ	0xFE8
  8746                           indf1	equ	0xFE7
  8747                           postinc1	equ	0xFE6
  8748                           postdec1	equ	0xFE5
  8749                           fsr1h	equ	0xFE2
  8750                           fsr1l	equ	0xFE1
  8751                           indf2	equ	0xFDF
  8752                           postinc2	equ	0xFDE
  8753                           postdec2	equ	0xFDD
  8754                           fsr2h	equ	0xFDA
  8755                           fsr2l	equ	0xFD9
  8756                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    84
    Data        0
    BSS         330
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     53      75
    BANK0           160     47     147
    BANK1           256      0     208
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    CRC_16@ptr	PTR unsigned char  size(2) Largest target is 108
		 -> mbus_var(BANK1[108]), 


Critical Paths under _main in COMRAM

    _init_rtc->_rtc_byte_rd
    _init_rtc->_rtc_byte_wr
    _fault_detection->_accept_key
    _fault_detection->_reset_key
    _fault_detection->_silence_key
    _fault_detection->_test_key
    _send_to_master->_calculate_parity
    _poll_rtc->_rtc_byte_rd
    _rtc_byte_rd->_i2c_shift_in
    _rtc_byte_rd->_i2c_shift_out
    _decode_mbus_frame->_write_single_holding
    _write_single_holding->_log_wr
    _rtc_byte_wr->_i2c_shift_out
    _log_wr->_i2c_int_wr
    _i2c_int_wr->_i2c_byte_wr
    _i2c_byte_wr->_i2c_shift_out
    _address_error->_CRC_16
    _send_log_rd->_i2c_byte_rd
    _i2c_byte_rd->_i2c_shift_in
    _i2c_byte_rd->_i2c_shift_out
    _send_continuous->_CRC_16
    _function_error->_CRC_16

Critical Paths under _isr in COMRAM

    _isr->_health_flash

Critical Paths under _main in BANK0

    _main->_delay_ms
    _basems_wait->_decode_mbus_frame
    _decode_mbus_frame->_write_single_holding
    _write_single_holding->_log_wr

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   76075
                                             52 COMRAM     1     1      0
                        _basems_wait
                _datalog_event_check
                           _delay_ms
                    _fault_detection
                        _i2c_byte_rd
                               _init
                     _init_i2c_gpios
                           _init_rtc
                          _init_uart
                             _log_wr
                         _timer_init
 ---------------------------------------------------------------------------------
 (1) _timer_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_uart                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_rtc                                             2     2      0    4501
                                             24 COMRAM     2     2      0
                        _rtc_byte_rd
                        _rtc_byte_wr
 ---------------------------------------------------------------------------------
 (1) _init_i2c_gpios                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _fault_detection                                     16    16      0    2993
                                             20 COMRAM    15    15      0
                         _accept_key
                          _reset_key
                        _silence_key
                           _test_key
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2   29925
                                             45 BANK0      2     0      2
                        _basems_wait
 ---------------------------------------------------------------------------------
 (2) _basems_wait                                          0     0      0   29801
                  _decode_mbus_frame
                     _dicing_slicing
                _noise_rejection_off
                           _poll_rtc
                       _read_165_dip
                     _read_165_fault
                     _send_to_master
                         _update_595
                _update_repeat_relay
 ---------------------------------------------------------------------------------
 (3) _update_repeat_relay                                  8     8      0     251
                                             19 COMRAM     8     8      0
 ---------------------------------------------------------------------------------
 (3) _update_595                                          12    12      0     272
                                             19 COMRAM    11    11      0
 ---------------------------------------------------------------------------------
 (3) _send_to_master                                       3     3      0     140
                                             22 COMRAM     3     3      0
                   _calculate_parity
 ---------------------------------------------------------------------------------
 (4) _calculate_parity                                     3     3      0      93
                                             19 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _read_165_fault                                       3     3      0     162
                                             19 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _read_165_dip                                         5     5      0     346
                                             19 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (3) _poll_rtc                                             1     1      0    1884
                                             24 COMRAM     1     1      0
                           _pbcd2hex
                        _rtc_byte_rd
 ---------------------------------------------------------------------------------
 (2) _rtc_byte_rd                                          2     2      0    1532
                                             22 COMRAM     2     2      0
                      _i2c_no_ackout
                       _i2c_shift_in
                      _i2c_shift_out
                          _i2c_start
                           _i2c_stop
 ---------------------------------------------------------------------------------
 (4) _pbcd2hex                                             3     3      0      92
                                             19 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _noise_rejection_off                                  6     6      0     336
                                             19 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (3) _dicing_slicing                                       9     9      0     227
                                             19 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (3) _decode_mbus_frame                                   14    14      0   26183
                                             31 BANK0     14    14      0
                             _CRC_16
                      _address_error
                     _function_error
                    _send_continuous
                        _send_log_rd
               _write_single_holding
 ---------------------------------------------------------------------------------
 (4) _write_single_holding                                 6     2      4   15478
                                             48 COMRAM     4     0      4
                                             29 BANK0      2     2      0
               _FillNSend_Echo_Frame
                         _accept_key
                      _address_error
                           _hex2pbcd
                         _i2c_int_wr
                             _log_wr
                          _reset_key
                        _rtc_byte_wr
                        _silence_key
                           _test_key
 ---------------------------------------------------------------------------------
 (2) _test_key                                             1     1      0     130
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _silence_key                                          1     1      0     130
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _rtc_byte_wr                                          2     1      1    2864
                                             22 COMRAM     2     1      1
                           _hex2pbcd (ARG)
                      _i2c_shift_out
                          _i2c_start
                           _i2c_stop
 ---------------------------------------------------------------------------------
 (2) _reset_key                                            1     1      0     223
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _log_wr                                              35    35      0    6436
                                             42 COMRAM     6     6      0
                                              0 BANK0     29    29      0
                        _i2c_byte_wr
                         _i2c_int_wr
 ---------------------------------------------------------------------------------
 (2) _i2c_int_wr                                           9     3      6    2887
                                             33 COMRAM     9     3      6
                        _i2c_byte_wr
 ---------------------------------------------------------------------------------
 (3) _i2c_byte_wr                                         11     6      5    2301
                                             22 COMRAM    11     6      5
                      _i2c_shift_out
                          _i2c_start
                           _i2c_stop
 ---------------------------------------------------------------------------------
 (5) _hex2pbcd                                             2     2      0     145
                                             19 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _address_error                                        6     4      2    1848
                                             27 COMRAM     6     4      2
                             _CRC_16
 ---------------------------------------------------------------------------------
 (2) _accept_key                                           1     1      0     161
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _FillNSend_Echo_Frame                                 1     1      0     102
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _send_log_rd                                         15    13      2    3822
                                             33 COMRAM    15    13      2
                             _CRC_16
                        _i2c_byte_rd
 ---------------------------------------------------------------------------------
 (1) _i2c_byte_rd                                         11     7      4    2263
                                             22 COMRAM    11     7      4
                      _i2c_no_ackout
                       _i2c_shift_in
                      _i2c_shift_out
                          _i2c_start
                           _i2c_stop
 ---------------------------------------------------------------------------------
 (4) _i2c_stop                                             0     0      0       0
                          _i2c_delay
 ---------------------------------------------------------------------------------
 (4) _i2c_start                                            0     0      0       0
                          _i2c_delay
 ---------------------------------------------------------------------------------
 (4) _i2c_shift_out                                        3     2      1    1362
                                             19 COMRAM     3     2      1
                          _i2c_delay
 ---------------------------------------------------------------------------------
 (3) _i2c_shift_in                                         3     3      0     102
                                             19 COMRAM     3     3      0
                          _i2c_delay
 ---------------------------------------------------------------------------------
 (3) _i2c_no_ackout                                        0     0      0       0
                          _i2c_delay
 ---------------------------------------------------------------------------------
 (5) _i2c_delay                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _send_continuous                                     13     9      4    1952
                                             27 COMRAM    13     9      4
                             _CRC_16
 ---------------------------------------------------------------------------------
 (4) _function_error                                       6     4      2    1398
                                             27 COMRAM     6     4      2
                             _CRC_16
 ---------------------------------------------------------------------------------
 (6) _CRC_16                                               8     5      3    1175
                                             19 COMRAM     8     5      3
 ---------------------------------------------------------------------------------
 (1) _datalog_event_check                                  3     3      0     156
                                             19 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _isr                                                18    18      0       0
                                              1 COMRAM    18    18      0
                       _health_flash
 ---------------------------------------------------------------------------------
 (11) _health_flash                                        1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _basems_wait
     _decode_mbus_frame
       _CRC_16
       _address_error
         _CRC_16
       _function_error
         _CRC_16
       _send_continuous
         _CRC_16
       _send_log_rd
         _CRC_16
         _i2c_byte_rd
           _i2c_no_ackout
             _i2c_delay
           _i2c_shift_in
             _i2c_delay
           _i2c_shift_out
             _i2c_delay
           _i2c_start
             _i2c_delay
           _i2c_stop
             _i2c_delay
       _write_single_holding
         _FillNSend_Echo_Frame
         _accept_key
         _address_error
           _CRC_16
         _hex2pbcd
         _i2c_int_wr
           _i2c_byte_wr
             _i2c_shift_out
               _i2c_delay
             _i2c_start
               _i2c_delay
             _i2c_stop
               _i2c_delay
         _log_wr
           _i2c_byte_wr
             _i2c_shift_out
               _i2c_delay
             _i2c_start
               _i2c_delay
             _i2c_stop
               _i2c_delay
           _i2c_int_wr
             _i2c_byte_wr
               _i2c_shift_out
                 _i2c_delay
               _i2c_start
                 _i2c_delay
               _i2c_stop
                 _i2c_delay
         _reset_key
         _rtc_byte_wr
           _hex2pbcd (ARG)
           _i2c_shift_out (ARG)
             _i2c_delay
           _i2c_start (ARG)
             _i2c_delay
           _i2c_stop (ARG)
             _i2c_delay
         _silence_key
         _test_key
     _dicing_slicing
     _noise_rejection_off
     _poll_rtc
       _pbcd2hex
       _rtc_byte_rd
         _i2c_no_ackout
           _i2c_delay
         _i2c_shift_in
           _i2c_delay
         _i2c_shift_out
           _i2c_delay
         _i2c_start
           _i2c_delay
         _i2c_stop
           _i2c_delay
     _read_165_dip
     _read_165_fault
     _send_to_master
       _calculate_parity
     _update_595
     _update_repeat_relay
   _datalog_event_check
   _delay_ms
     _basems_wait
       _decode_mbus_frame
         _CRC_16
         _address_error
           _CRC_16
         _function_error
           _CRC_16
         _send_continuous
           _CRC_16
         _send_log_rd
           _CRC_16
           _i2c_byte_rd
             _i2c_no_ackout
               _i2c_delay
             _i2c_shift_in
               _i2c_delay
             _i2c_shift_out
               _i2c_delay
             _i2c_start
               _i2c_delay
             _i2c_stop
               _i2c_delay
         _write_single_holding
           _FillNSend_Echo_Frame
           _accept_key
           _address_error
             _CRC_16
           _hex2pbcd
           _i2c_int_wr
             _i2c_byte_wr
               _i2c_shift_out
                 _i2c_delay
               _i2c_start
                 _i2c_delay
               _i2c_stop
                 _i2c_delay
           _log_wr
             _i2c_byte_wr
               _i2c_shift_out
                 _i2c_delay
               _i2c_start
                 _i2c_delay
               _i2c_stop
                 _i2c_delay
             _i2c_int_wr
               _i2c_byte_wr
                 _i2c_shift_out
                   _i2c_delay
                 _i2c_start
                   _i2c_delay
                 _i2c_stop
                   _i2c_delay
           _reset_key
           _rtc_byte_wr
             _hex2pbcd (ARG)
             _i2c_shift_out (ARG)
               _i2c_delay
             _i2c_start (ARG)
               _i2c_delay
             _i2c_stop (ARG)
               _i2c_delay
           _silence_key
           _test_key
       _dicing_slicing
       _noise_rejection_off
       _poll_rtc
         _pbcd2hex
         _rtc_byte_rd
           _i2c_no_ackout
             _i2c_delay
           _i2c_shift_in
             _i2c_delay
           _i2c_shift_out
             _i2c_delay
           _i2c_start
             _i2c_delay
           _i2c_stop
             _i2c_delay
       _read_165_dip
       _read_165_fault
       _send_to_master
         _calculate_parity
       _update_595
       _update_repeat_relay
   _fault_detection
     _accept_key
     _reset_key
     _silence_key
     _test_key
   _i2c_byte_rd
     _i2c_no_ackout
       _i2c_delay
     _i2c_shift_in
       _i2c_delay
     _i2c_shift_out
       _i2c_delay
     _i2c_start
       _i2c_delay
     _i2c_stop
       _i2c_delay
   _init
   _init_i2c_gpios
   _init_rtc
     _rtc_byte_rd
       _i2c_no_ackout
         _i2c_delay
       _i2c_shift_in
         _i2c_delay
       _i2c_shift_out
         _i2c_delay
       _i2c_start
         _i2c_delay
       _i2c_stop
         _i2c_delay
     _rtc_byte_wr
       _hex2pbcd (ARG)
       _i2c_shift_out (ARG)
         _i2c_delay
       _i2c_start (ARG)
         _i2c_delay
       _i2c_stop (ARG)
         _i2c_delay
   _init_uart
   _log_wr
     _i2c_byte_wr
       _i2c_shift_out
         _i2c_delay
       _i2c_start
         _i2c_delay
       _i2c_stop
         _i2c_delay
     _i2c_int_wr
       _i2c_byte_wr
         _i2c_shift_out
           _i2c_delay
         _i2c_start
           _i2c_delay
         _i2c_stop
           _i2c_delay
   _timer_init

 _isr (ROOT)
   _health_flash

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      D0       7       81.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2F      93       5       91.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     35      4B       1       79.8%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1AE      12        0.0%
DATA                 0      0     1AE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Tue Mar 17 17:38:45 2020

                        __CFG_CP0$ON 000000                          __CFG_CP1$ON 000000  
                        __CFG_CP2$ON 000000                          __CFG_CP3$ON 000000  
                        __CFG_CPB$ON 000000                                  l201 2178  
                                l210 216C                                  l202 213E  
                                l211 2172                                  l204 2144  
                                l205 214A                                  l206 2150  
                                l207 215A                                  l208 2160  
                                l401 26F2                                  l209 2166  
                                l219 231E                                  l412 2564  
                                l260 1D90                                  l501 224C  
                                l261 1D92                                  l406 27CA  
                                l342 1F8A                                  l350 297E  
                                l270 1E26                                  l430 11EE  
                                l191 29BE                                  l423 1446  
                                l512 2346                                  l344 1FAE  
                                l256 1CFE                                  l192 29B2  
                                l424 106C                                  l265 1DC0  
                                l433 1254                                  l425 112E  
                                l418 21C4                                  l346 1FF2  
                                l290 1CA4                                  l282 1C3A  
                                l274 244E                                  l258 1D5A  
                                l450 146A                                  l442 1392  
                                l426 1290                                  l434 1284  
                                l515 23A6                                  l267 1E1C  
                                l443 13C0                                  l427 11AE  
                                l700 1812                                  l284 1C56  
                                l276 245E                                  l460 1502  
                                l452 1474                                  l444 13F0  
                                l436 12F2                                  l701 16D0  
                                l293 1CB6                                  l269 1E24  
                                l429 1224                                  l702 16E2  
                                l550 20FC                                  l286 1C78  
                                l454 147E                                  l446 1422  
                                l438 1364                                  l711 172E  
                                l199 212C                                  l439 1330  
                                l536 2950                                  l720 17CE  
                                l712 1742                                  l288 1C94  
                                l456 1484                                  l537 294A  
                                l721 17E6                                  l705 16EE  
                                l457 1508                                  l529 1E90  
                                l570 23BA                                  l650 24CC  
                                l714 174E                                  l706 1702  
                                l458 148E                                  l651 24DA  
                                l459 14F0                                  l484 2884  
                                l476 25DC                                  l716 176E  
                                l708 170E                                  l660 19D4  
                                l396 201A                                  l548 20C0  
                                l573 2420                                  l477 25B8  
                                l581 15CA                                  l717 1786  
                                l709 1722                                  l661 1934  
                                l646 24E4                                  l478 25C0  
                                l718 179E                                  l662 1964  
                                l647 249A                                  l479 25C2  
                                l591 1640                                  l583 15DC  
                                l719 17B6                                  l592 168C  
                                l585 15FA                                  l577 159A  
                                l665 1970                                  l666 1994  
                                l658 188C                                  l690 1F68  
                                l587 160C                                  l579 15AC  
                                l659 1912                                  l668 19A0  
                                l597 1BBA                                  l669 19C8  
                                l694 1AF6                                  l678 26C6  
                                l686 1F16                                  l695 1A9A  
                                l679 26A0                                  _GIE 007F97  
                       __CFG_CPD$OFF 000000                    calculate_parity@i 0016  
                                _isr 0008                 decode_mbus_frame@un1 00EF  
                                prod 000FF3                                  wreg 000FE8  
                        pbcd2hex@tmp 0014                         __CFG_LVP$OFF 000000  
           __size_of_fault_detection 04C0                                 l3316 2976  
                               l5102 20B8                                 l3602 2446  
                               l5116 20F4                                 l3704 1F82  
                               l3640 1C48                                 l3608 2456  
                               l4178 23B2                                 l5162 1994  
                               l3714 1FA6                                 l3650 1C64  
                               l5306 12EA                                 l5156 1964  
                               l3734 2012                                 l3670 1C9C  
                               l3654 1C70                                 l3566 1CF6  
                               l3750 1DB8                                 l3664 1C8C  
                               l5344 13E8                                 l3690 1CC4  
                               l3578 1D52                                 l3762 1E14  
                               l5266 11A6                                 l4652 15AC  
                               l4644 1588                                 l4902 1BB2  
                               l4670 15FA                                 l4646 159A  
                               l4576 24AA                                 l4664 15DC  
                               l4656 15BA                                 l4682 1618  
                               l4658 15CA                                 l4738 26EA  
                               l4676 160C                                 l4668 15EA  
                               l3884 1F6E                                 l4758 27C2  
                               l4688 1640                                 l4778 255C  
                               ?_isr 0001                                 l4798 21BC  
                               u2030 298A                                 u2200 247C  
                               u2150 1DA2                                 u2160 1DA6  
                               u2330 1CD0                                 u2270 1C88  
                               u4120 1458                                 u2610 1F44  
                               u2450 1E40                                 u2380 1FF6  
                               u2460 1E44                                 u4060 13CC  
                               u3430 24DE                                 u3510 1606  
                               u2625 1F46                                 u3450 2248  
                               u3370 2342                                 u4090 1426  
                               u3620 25A0                                 u3390 2894  
                               u3550 16C8                                 u3470 15A6  
                               u3490 15D6                                 u3650 222C  
                               u3570 271E                                 _PEIE 007F96  
                               u3398 2896                                 u3590 27F2  
                               u3830 190A                                 u3751 175A  
                               u3690 1BFE                                 u3780 20EE  
                               _RX92 007B8E                                 _TX92 007B96  
                   _sure_input_cntr1 004B                     _sure_input_cntr2 004A  
                               _main 22BE                                 _init 24F4  
                      _i2c_no_ackout 29F2                                 fsr0h 000FEA  
                               fsr1h 000FE2                                 fsr2h 000FDA  
                               fsr0l 000FE9                                 indf1 000FE7  
                               indf2 000FDF                                 fsr1l 000FE1  
                               fsr2l 000FD9                                 btemp 004C  
                      __CFG_BORV$190 000000                                 prodh 000FF4  
                               prodl 000FF3                        ??_i2c_byte_rd 001B  
            i2c_byte_wr@control_byte 0021                                 start 011A  
                      ??_i2c_byte_wr 001C                decode_mbus_frame@temp 00E7  
                      __CFG_IESO$OFF 000000                         ___param_bank 000000  
                      ?_i2c_shift_in 0001                         pbcd2hex@tmp2 0015  
            __size_of_read_165_fault 0070                                ??_isr 0002  
                      _i2c_shift_out 25AA                                ?_main 0001  
                              ?_init 0001                                _BRGH1 007D62  
                              _BRGH2 007B92                                _T1CON 000FCD  
                              _RC1IE 007CED                                _RC1IF 007CF5  
                              _RC2IE 007D1D                                _RC2IF 007D25  
                              i2l173 0080                                i2l174 0092  
                              i2l176 0096                                i2l177 00A6  
                              i2l178 00CC                                _TMR1H 000FCF  
                              _TX9D2 007B90                                _TMR1L 000FCE  
                              _TX2IF 007D24                                _PORTA 000F80  
                              _PORTB 000F81                                _PORTC 000F82  
                              _PORTD 000F83                                _PORTE 000F84  
                              _TRISA 000F92                                _TRISB 000F93  
                              _TRISC 000F94                                _TRISD 000F95  
                              _TRISE 000F96                                _TXEN1 007D65  
                              _TXEN2 007B95                                _SYNC1 007D64  
                              _SYNC2 007B94                        __CFG_WRT0$OFF 000000  
                      __CFG_WRT1$OFF 000000                        __CFG_WRT2$OFF 000000  
                      __CFG_WRT3$OFF 000000                        ?_read_165_dip 0001  
                     __CFG_EBTR0$OFF 000000                       __CFG_FCMEN$OFF 000000  
                     __CFG_EBTR1$OFF 000000                       __CFG_EBTR2$OFF 000000  
                     __CFG_EBTR3$OFF 000000                       rtc_byte_rd@adr 0017  
                      __CFG_WRTB$OFF 000000                        __CFG_WRTC$OFF 000000  
                      __CFG_WRTD$OFF 000000                 __size_of_basems_wait 008A  
                calculate_parity@val 0014                       __CFG_EBTRB$OFF 000000  
            __size_of_send_to_master 0092                       rtc_byte_wr@adr 0018  
                     rtc_byte_wr@dta 0017                      __end_of_red_led 1021  
                 __CFG_MCLRE$EXTMCLR 000000             __size_of_send_continuous 0172  
                              pclath 000FFA                                tablat 000FF5  
            __size_of_dicing_slicing 0090                       ?_i2c_no_ackout 0001  
                              status 000FD8                                wtemp6 004D  
                     __CFG_HFOFST$ON 000000                       __CFG_PBADEN$ON 000000  
                   ??_function_error 001E                     pbcd2hex@pbcdbyte 0016  
                         _i2c_int_wr 264A                       ??_i2c_shift_in 0014  
                    __initialization 28E6                         __end_of_main 2336  
                       __end_of_init 2552                       ?_i2c_shift_out 0014  
                __end_of_i2c_byte_rd 22BE                  __end_of_i2c_byte_wr 23AE  
                   __end_of_i2c_stop 2A14                   i2c_int_wr@dev_addr 0028  
                             ??_main 0035                               ??_init 0014  
                      __activetblptr 000002                  _datalog_event_check 23AE  
                    read_165_fault@i 0014                      read_165_fault@j 0016  
                   address_error@un1 0020        __size_of_write_single_holding 019C  
                     ??_read_165_dip 0014                 __end_of_health_flash 28E6  
                             _ADCON0 000FC2                               _ADCON1 000FC1  
                             _BRG161 007DC3                               _BRG162 007B83  
                       ?_send_log_rd 0022                     send_continuous@i 0027  
                   send_continuous@j 0028                               _ANSELA 000F38  
                             _ANSELB 000F39                               _ANSELC 000F3A  
                             _ANSELD 000F3B                               _ANSELE 000F3C  
                             _CRC_16 2494                      _onebit_high_tbl 1029  
                             _RC1STA 000FAB                               _RC2STA 000F71  
                  ?_calculate_parity 0001                       __CFG_WDTEN$OFF 000000  
                 __size_of_i2c_delay 003E                               _RCREG2 000F74  
                             _SPBRG1 000FAF                               _SPBRG2 000F75  
                             _TMR1IE 007CE8                               _TMR1IF 007CF0  
                             _TX1STA 000FAC                               _TX2STA 000F72  
                             _TRISE1 007CB1                               _TRISC6 007CA6  
                             _TRISC7 007CA7                               _TRISD6 007CAE  
                             _TRISD7 007CAF                   __size_of_i2c_start 0012  
                 ??_calculate_parity 0014                               _TXREG2 000F73  
             send_continuous@address 001E                        update_595@tmp 001C  
               ?_datalog_event_check 0001                    ??_fault_detection 0015  
                   __end_of_delay_ms 29CA                     __end_of_hex2pbcd 296C  
                     __CFG_PWRTEN$ON 000000                       __CFG_XINST$OFF 000000  
               datalog_event_check@i 0016                     __end_of_pbcd2hex 29B0  
                    rtc_byte_rd@temp 0018                       __CFG_STVREN$ON 000000  
        fault_detection@red_led_data 001E                         ?_silence_key 0001  
                             _buffer 0100                     __end_of_init_rtc 1EEC  
                             _log_wr 1516                               clear_0 28EC  
                             clear_1 28F8                               clear_2 2904  
                      _bcd_ascii_tbl 1001                            CRC_16@ptr 0014  
                i2c_byte_rd@dev_addr 001E                     __end_of_poll_rtc 2128  
                   __end_of_rtc_addr 1047                         __mediumconst 0000  
                             tblptrh 000FF7                     __end_of_test_key 272A  
                             tblptrl 000FF6                               tblptru 000FF8  
                     _subval_chartbl 1047              decode_mbus_frame@length 00EB  
            decode_mbus_frame@rec_no 00E9                  fault_detection@tmp2 001A  
                fault_detection@temp 0018                         ?_rtc_byte_rd 0001  
                       ?_rtc_byte_wr 0017                      ??_i2c_no_ackout 0014  
      __size_of_FillNSend_Echo_Frame 004C          __end_of_update_repeat_relay 1E52  
                         __accesstop 0060              __end_of__initialization 290A  
              ??_datalog_event_check 0014         __size_of_noise_rejection_off 008E  
                      ___rparam_used 000001                    ??_send_continuous 0020  
                        _i2c_byte_rd 2238                          _i2c_byte_wr 2336  
                        ?_i2c_int_wr 0022                      ??_i2c_shift_out 0015  
                     __pcstackCOMRAM 0001                   read_165_fault@Data 0015  
                     _read_165_fault 2424                          log_wr@templ 00DD  
             __size_of_address_error 0048                           _accept_key 2552  
                  __end_of_i2c_delay 287C              __size_of_init_i2c_gpios 0006  
                    send_to_master@i 0018                    __end_of_i2c_start 29F2  
             __end_of_subval_chartbl 104D              __end_of_onebit_high_tbl 1031  
                  function_error@un1 0020                       _send_to_master 1EEC  
               __end_of_i2c_shift_in 28B2                              CRC_16@i 0019  
                   read_165_dip@Data 0016                              ?_CRC_16 0014  
                     _dicing_slicing 1F7E                           __pbssBANK0 0060  
                         __pbssBANK1 0100                     send_log_rd@tempi 002E  
                   send_log_rd@templ 002A                      __CFG_PLLCFG$OFF 000000  
                          ?_i2c_stop 0001                         _chip_address 00C3  
                  address_error@func 001C                    address_error@temp 001E  
                 __size_of_init_uart 004C                      dicing_slicing@i 0018  
                    dicing_slicing@j 0019                      dicing_slicing@m 0016  
                    dicing_slicing@n 0017               __end_of_read_165_fault 2494  
               __end_of_read_165_dip 1CF2                   __CFG_CCP2MX$PORTC1 000000  
                 __CFG_CCP3MX$PORTB5 000000                    _decode_mbus_frame 186A  
                            _CCP1CON 000FBD                              _CCP2CON 000F66  
                            _CCP3CON 000F5D                              ?_log_wr 0001  
                 ?_decode_mbus_frame 0001                   __size_of_reset_key 0086  
              __size_of_health_flash 0034                     _onebit_high_tbl2 1031  
             __end_of_send_to_master 1F7E                  ??_decode_mbus_frame 00E3  
                          ?_delay_ms 00F1                            ?_hex2pbcd 0001  
                            _SPBRGH1 000FB0                              _SPBRGH2 000F76  
                __size_of_i2c_int_wr 004C               __end_of_dicing_slicing 200E  
                          ?_pbcd2hex 0001                        _address_error 272A  
                    __size_of_CRC_16 0060                        i2c_int_wr@adr 0022  
                      i2c_int_wr@dta 0026                        i2c_int_wr@un1 0029  
               __size_of_send_log_rd 00D0                           ??_i2c_stop 0014  
                          ?_init_rtc 0001                     i2c_shift_out@dat 0015  
                    hex2pbcd@hex_num 0014                      ?_read_165_fault 0001  
                            __Hparam 0000                              __Lparam 0000  
       noise_rejection_off@hist_data 0016            __end_of_decode_mbus_frame 19EC  
                       _health_flash 28B2                            ?_poll_rtc 0001  
                          ?_test_key 0001                         __psmallconst 1000  
                        ?_accept_key 0001                              __pcinit 28E6  
                    __size_of_log_wr 01B8                              __ramtop 1000  
                  __end_of_green_led 1019                              __ptext0 22BE  
                            __ptext1 29CA                              __ptext2 25FE  
                            __ptext3 1E52                              __ptext4 2A14  
                            __ptext5 24F4                              __ptext6 1056  
                            __ptext7 29B0                              __ptext8 2128  
                            __ptext9 1DB4                              _gen_var 0036  
               __size_of_silence_key 0044             noise_rejection_off@temp1 0017  
           noise_rejection_off@temp2 0015                        ??_basems_wait 0035  
                       __size_of_isr 0112                              _red_led 1019  
                    ?_send_to_master 0001                  i2c_byte_wr@dev_addr 001E  
                  __end_of_init_uart 264A                           ??_delay_ms 0035  
                         ??_hex2pbcd 0014                      _fault_detection 1056  
                  __end_of_no_nc_tbl 1053                    __end_of_group_tbl 1050  
                         CRC_16@cnts 0016                      ?_dicing_slicing 0001  
                     ?_address_error 001C                           ??_pbcd2hex 0014  
                         delay_ms@ms 00F1                 end_of_initialization 290A  
               __size_of_rtc_byte_rd 0040                 __size_of_rtc_byte_wr 002A  
                      __Lmediumconst 0000                    __end_of_reset_key 2238  
                    i2c_byte_rd@temp 001D                           ??_init_rtc 0019  
                            log_wr@i 00DC         __end_of_write_single_holding 186A  
                       init_rtc@temp 001A             decode_mbus_frame@address 00ED  
                         ??_poll_rtc 0019                              postdec1 000FE5  
                            postdec2 000FDD                           ??_test_key 0014  
               fault_detection@dipsw 0019                              postinc0 000FEE  
                            postinc1 000FE6                              postinc2 000FDE  
               fault_detection@input 001B  update_repeat_relay@relay_buffer_595 0016  
          __size_of_calculate_parity 0024                       _init_i2c_gpios 2A14  
                         _timer_init 29CA                            _PORTAbits 000F80  
                          _PORTCbits 000F82                            _PORTDbits 000F83  
                          _PORTEbits 000F84                __size_of_i2c_shift_in 0036  
                _noise_rejection_off 200E                           _update_595 1CF2  
                          _TRISCbits 000F94                      _send_continuous 19EC  
                __end_of_basems_wait 21B2                           _subval_tbl 1039  
                     __end_of_CRC_16 24F4                __size_of_read_165_dip 00C4  
                __size_of_accept_key 0058           write_single_holding@length 0031  
               ?_noise_rejection_off 0001                 noise_rejection_off@i 0019  
                       ?_i2c_byte_rd 0017                         ?_i2c_byte_wr 0017  
                       ??_i2c_int_wr 0028           __size_of_decode_mbus_frame 0182  
                       _i2c_shift_in 287C                        read_165_dip@i 0018  
                      read_165_dip@j 0017               __end_of_init_i2c_gpios 2A1A  
       __end_of_FillNSend_Echo_Frame 26E2                          update_595@i 001D  
                        update_595@j 001E              __size_of_function_error 0048  
            __end_of_fault_detection 1516                       __end_of_log_wr 16CE  
                start_initialization 28E6                            _i2c_delay 283E  
                    ??_address_error 001E                         _read_165_dip 1C2E  
                          _i2c_start 29E0                          __end_of_isr 011A  
        __end_of_datalog_event_check 2424                   __end_of_i2c_int_wr 2696  
                           ??_CRC_16 0017                __end_of_i2c_no_ackout 2A04  
              ??_noise_rejection_off 0014                      poll_rtc@polltmr 0047  
           __end_of_onebit_high_tbl2 1039                    __size_of_i2c_stop 0010  
       __size_of_update_repeat_relay 009E                send_continuous@length 001C  
                 function_error@func 001C                   function_error@temp 001E  
              __end_of_i2c_shift_out 25FE                      ?_init_i2c_gpios 0001  
                           ??_log_wr 002B               update_repeat_relay@tmp 001A  
        write_single_holding@address 0033                          ?_timer_init 0001  
                 fault_detection@tmp 001C                     log_wr@chip_start 00D8  
            __end_of_send_continuous 1B5E                    send_log_rd@record 0022  
                        _basems_wait 2128                 _write_single_holding 16CE  
                        ?_update_595 0001                          __pbssCOMRAM 0036  
                         ?_i2c_delay 0001                        __pcstackBANK0 00C4  
                         ?_i2c_start 0001                            _bcd_array 00B3  
                  __size_of_delay_ms 001A              calculate_parity@counter 0015  
                  __size_of_hex2pbcd 002A                     ??_read_165_fault 0014  
                  __size_of_pbcd2hex 0020                    __size_of_init_rtc 009A  
                          __pintcode 0008                     _calculate_parity 296C  
                  __size_of_poll_rtc 008C                         ??_accept_key 0014  
                   ??_send_to_master 0017                    __size_of_test_key 0048  
                   __CFG_PRICLKEN$ON 000000                     ?_fault_detection 0001  
                   ??_dicing_slicing 0014                          accept_key@i 0014  
              ?_write_single_holding 0031                          __smallconst 1000  
                          _green_led 1011                   send_continuous@un1 0024  
                   log_wr@log_buffer 00C4                        ??_send_log_rd 0024  
                          _init_uart 25FE                 _FillNSend_Echo_Frame 2696  
                         reset_key@i 0014                            _logic_var 0060  
                          _no_nc_tbl 1050                            _group_tbl 104D  
                           _LATAbits 000F89                             _LATBbits 000F8A  
                           _LATCbits 000F8B                             _LATDbits 000F8C  
                           _LATEbits 000F8D                   __end_of_accept_key 25AA  
                __size_of_timer_init 0016                       i2c_byte_rd@adr 0017  
                     i2c_byte_rd@un1 001F                  __end_of_red_led_tbl 1055  
                     i2c_byte_wr@adr 0017                       i2c_byte_wr@dta 001B  
                     i2c_byte_wr@un1 001F                            _reset_key 21B2  
                           i2u269_40 28D0                             i2u269_46 28D2  
                __size_of_update_595 00C2                     __CFG_WDTPS$32768 000000  
               __size_of_i2c_byte_rd 0086                 __size_of_i2c_byte_wr 0078  
                          _uart_data 0049                    i2c_shift_in@count 0015  
                      ??_silence_key 0014                __end_of_bcd_ascii_tbl 1011  
                     _function_error 2772                         CRC_16@crcreg 001A  
                   ?_send_continuous 001C                          ??_i2c_delay 0014  
                        ??_i2c_start 0014                         send_log_rd@i 0030  
                      ??_rtc_byte_rd 0017                        ??_rtc_byte_wr 0018  
                         ?_init_uart 0001                ?_FillNSend_Echo_Frame 0001  
                  i2c_shift_out@cnts 0014              fault_detection@led_data 001D  
                           _i2c_stop 2A04                  __end_of_send_log_rd 1C2E  
                __end_of_rep_rly_tbl 1029                             __Hrparam 0000  
                         ?_reset_key 0001                         hex2pbcd@high 0015  
                           __Lrparam 0000                   __CFG_BOREN$SBORDIS 000000  
               send_continuous@tempc 0026                 send_continuous@tempi 0022  
                  __CFG_P2BMX$PORTD2 000000               __end_of_function_error 27BA  
            i2c_byte_rd@control_byte 0021               ??_write_single_holding 00E1  
                __end_of_silence_key 27FE                             _delay_ms 29B0  
                           _hex2pbcd 2942                  _update_repeat_relay 1DB4  
                           __ptext10 1CF2                             __ptext11 1EEC  
                           __ptext20 186A                             __ptext12 296C  
                           __ptext21 16CE                             __ptext13 2424  
                           __ptext30 272A                             __ptext22 26E2  
                           __ptext14 1C2E                             __ptext31 2552  
                           __ptext23 27BA                             __ptext15 209C  
                           __ptext40 283E                             __ptext32 2696  
                           __ptext24 2918                             __ptext16 27FE  
                           __ptext41 19EC                             __ptext33 1B5E  
                           __ptext25 21B2                             __ptext17 2990  
                           __ptext42 2772                             __ptext34 2238  
                           __ptext26 1516                             __ptext18 200E  
                           __ptext43 2494                             __ptext35 2A04  
                           __ptext27 264A                             __ptext19 1F7E  
                           __ptext44 23AE                             __ptext36 29E0  
                           __ptext28 2336                             __ptext37 25AA  
                           __ptext29 2942                             __ptext46 28B2  
                           __ptext38 287C                             __ptext39 29F2  
                           _pbcd2hex 2990                          _red_led_tbl 1053  
                     i2c_shift_out@i 0016                        __size_of_main 0078  
                      __size_of_init 005E                             _init_rtc 1E52  
                __end_of_rtc_byte_rd 283E                  __end_of_rtc_byte_wr 2942  
                           _mbus_var 0164                     ??_init_i2c_gpios 0014  
               ?_update_repeat_relay 0001                            poll_rtc@i 0019  
                           _poll_rtc 209C                             _rtc_addr 1041  
                           _test_key 26E2                             int$flags 004C  
                    ?_function_error 001C                            test_key@i 0014  
                       ??_timer_init 0014                         ?_basems_wait 0001  
                       ??_update_595 0014                     i2c_byte_rd@addrh 001B  
                   i2c_byte_rd@addrl 001C               ??_FillNSend_Echo_Frame 0014  
               update_repeat_relay@i 0019                 update_repeat_relay@j 001B  
        __end_of_noise_rejection_off 209C                     fault_detection@i 0021  
              __end_of_address_error 2772                     fault_detection@j 0023  
                   fault_detection@k 0022                     fault_detection@l 0020  
                        ??_init_uart 0014                          _send_log_rd 1B5E  
        noise_rejection_off@new_data 0018             __end_of_calculate_parity 2990  
                       silence_key@i 0014                             intlevel2 0000  
                        _rep_rly_tbl 1021                        init_rtc@temp2 0019  
       __size_of_datalog_event_check 0076                   __end_of_timer_init 29E0  
                   i2c_byte_wr@addrh 001C                     i2c_byte_wr@addrl 001D  
              ??_update_repeat_relay 0014                           _OSCCONbits 000FD3  
                        ??_reset_key 0014                        ?_health_flash 0001  
                 __end_of_update_595 1DB4                          _silence_key 27BA  
             __size_of_i2c_no_ackout 0012                   __end_of_subval_tbl 1041  
                i2c_shift_in@in_byte 0016                    __CFG_T3CMX$PORTC0 000000  
      fault_detection@green_led_data 001F                          _rtc_byte_rd 27FE  
                        _rtc_byte_wr 2918             update_595@led_buffer_595 0016  
             __size_of_i2c_shift_out 0054                FillNSend_Echo_Frame@i 0014  
                  __CFG_FOSC$INTIO67 000000                       ??_health_flash 0001  
